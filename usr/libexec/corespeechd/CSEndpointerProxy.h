//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSAudioRecordContext, NSString;
@protocol CSEndpointAnalyzerDelegate, CSEndpointAnalyzerImpl, CSEndpointAnalyzerImplDelegate;

@interface CSEndpointerProxy : NSObject
{
    _Bool _accessibleEndpointerEnabled;	// 8 = 0x8
    _Bool _recordingDidStop;	// 9 = 0x9
    id <CSEndpointAnalyzerDelegate> _endpointerDelegate;	// 16 = 0x10
    id <CSEndpointAnalyzerImplDelegate> _endpointerImplDelegate;	// 24 = 0x18
    id <CSEndpointAnalyzerImpl> _hybridEndpointer;	// 32 = 0x20
    id <CSEndpointAnalyzerImpl> _nnvadEndpointer;	// 40 = 0x28
    id <CSEndpointAnalyzerImpl> _activeEndpointer;	// 48 = 0x30
    CSAudioRecordContext *_recordContext;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x002000000007de88
@property(nonatomic) _Bool recordingDidStop; // @synthesize recordingDidStop=_recordingDidStop;
@property(nonatomic) _Bool accessibleEndpointerEnabled; // @synthesize accessibleEndpointerEnabled=_accessibleEndpointerEnabled;
@property(retain, nonatomic) CSAudioRecordContext *recordContext; // @synthesize recordContext=_recordContext;
@property(nonatomic) __weak id <CSEndpointAnalyzerImpl> activeEndpointer; // @synthesize activeEndpointer=_activeEndpointer;
@property(retain, nonatomic) id <CSEndpointAnalyzerImpl> nnvadEndpointer; // @synthesize nnvadEndpointer=_nnvadEndpointer;
@property(retain, nonatomic) id <CSEndpointAnalyzerImpl> hybridEndpointer; // @synthesize hybridEndpointer=_hybridEndpointer;
@property(nonatomic) __weak id <CSEndpointAnalyzerImplDelegate> endpointerImplDelegate; // @synthesize endpointerImplDelegate=_endpointerImplDelegate;
@property(nonatomic) __weak id <CSEndpointAnalyzerDelegate> endpointerDelegate; // @synthesize endpointerDelegate=_endpointerDelegate;
- (void)reset;	// IMP=0x001000000007dd98
@property(nonatomic) double automaticEndpointingSuspensionEndTime;
@property(nonatomic) double endWaitTime;
@property(nonatomic) double startWaitTime;
@property(readonly, nonatomic) double lastEndOfVoiceActivityTime;
@property(nonatomic) _Bool saveSamplesSeenInReset;
@property(nonatomic) double minimumDurationForEndpointer;
@property(nonatomic) double delay;
@property(nonatomic) double interspeechWaitTime;
@property(nonatomic) long long endpointMode;
- (void)setEndpointStyle:(long long)arg1;	// IMP=0x001000000007dd25
- (long long)endpointStyle;	// IMP=0x001000000007dd1d
- (long long)fetchCurrentEndpointerOperationMode;	// IMP=0x001000000007dd07
- (void)setEndpointerOperationMode:(long long)arg1;	// IMP=0x001000000007dcf1
- (void)processFirstAudioPacketTimestamp:(id)arg1 firstAudioSampleSensorTimestamp:(unsigned long long)arg2;	// IMP=0x001000000007dcdb
- (void)processOSDFeatures:(id)arg1 withFrameDurationMs:(double)arg2;	// IMP=0x001000000007dcc5
- (void)logHybridEndpointFeaturesWithEvent:(id)arg1 locale:(id)arg2;	// IMP=0x001000000007dbaa
- (void)logAnchorMachAbsTime:(unsigned long long)arg1 numSamplesProcessedBeforeAnchorTime:(unsigned long long)arg2 isAnchorTimeBuffered:(_Bool)arg3;	// IMP=0x001000000007db94
- (void)shouldAcceptEagerResultForDuration:(double)arg1 resultsCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000007db7e
- (void)updateEndpointerDelayedTrigger:(_Bool)arg1;	// IMP=0x001000000007db68
- (void)updateEndpointerThreshold:(float)arg1;	// IMP=0x001000000007dabc
- (id)endpointerModelVersion;	// IMP=0x001000000007d964
- (void)processTaskString:(id)arg1;	// IMP=0x001000000007d94e
- (void)processASRFeatures:(id)arg1 fromServer:(_Bool)arg2;	// IMP=0x001000000007d938
- (void)processServerEndpointFeatures:(id)arg1;	// IMP=0x001000000007d922
- (unsigned long long)endPointAnalyzerType;	// IMP=0x001000000007d8f5
- (double)elapsedTimeWithNoSpeech;	// IMP=0x001000000007d8d5
- (void)endpointer:(id)arg1 reportEndpointBufferHostTime:(unsigned long long)arg2 firstBufferHostTime:(unsigned long long)arg3;	// IMP=0x001000000007d830
- (void)endpointer:(id)arg1 detectedTwoShotAtTime:(double)arg2;	// IMP=0x001000000007d713
- (void)endpointer:(id)arg1 didDetectHardEndpointAtTime:(double)arg2 withMetrics:(id)arg3;	// IMP=0x001000000007d4dd
- (void)endpointer:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x001000000007d388
- (void)setRequestMHUUID:(id)arg1;	// IMP=0x001000000007d32e
@property(readonly, nonatomic) double lastStartOfVoiceActivityTime;
- (void)recordingStoppedForReason:(long long)arg1;	// IMP=0x001000000007d2b8
- (void)processAudioSamplesAsynchronously:(id)arg1;	// IMP=0x001000000007d1dd
- (void)preheat;	// IMP=0x001000000007d133
- (void)setActiveChannel:(unsigned long long)arg1;	// IMP=0x001000000007d0f3
- (void)resetForVoiceTriggerTwoShotWithSampleRate:(unsigned long long)arg1;	// IMP=0x001000000007cfc0
- (_Bool)isWatchRTSTriggered;	// IMP=0x001000000007cf8e
- (void)stopEndpointer;	// IMP=0x001000000007cf43
- (_Bool)_updateAccessibleEndpointerThresholdIfNeed;	// IMP=0x001000000007cebc
- (void)resetForNewRequestWithSampleRate:(unsigned long long)arg1 recordContext:(id)arg2 recordOption:(id)arg3 voiceTriggerInfo:(id)arg4;	// IMP=0x001000000007cab4
- (void)_setupNNVADEndpointer;	// IMP=0x001000000007ca61
- (id)initForSidekick;	// IMP=0x001000000007c99b
- (id)init;	// IMP=0x001000000007c8b4

// Remaining properties
@property(nonatomic) double bypassSamples;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *mhId;
@property(readonly) Class superclass;

@end

