//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreSpeechFoundation/CSUtils.h>

@interface CSUtils (AttSiri)
+ (id)timeStampString;	// IMP=0x00100000000172c7
+ (void)logMitigationFeatures:(id)arg1 forTask:(id)arg2 withModelOutput:(id)arg3 forMHRequestId:(id)arg4;	// IMP=0x0010000000016969
+ (_Bool)isRemoteDarwinWithDeviceId:(id)arg1;	// IMP=0x00100000000615a0
+ (_Bool)hasRemoteBuiltInMic;	// IMP=0x0010000000061598
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000615b0
+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;	// IMP=0x00100000000615a8
+ (id)recordContextString:(id)arg1;	// IMP=0x001000000006da2f
+ (_Bool)isValidRecordContext:(id)arg1;	// IMP=0x001000000006da27
+ (_Bool)isRecordContextJarvisButtonPress:(id)arg1;	// IMP=0x001000000006d9c7
+ (_Bool)isRecordContextJarvisVoiceTrigger:(id)arg1;	// IMP=0x001000000006d967
+ (_Bool)isRecordContextRaiseToSpeak:(id)arg1;	// IMP=0x001000000006d907
+ (_Bool)isRecordContextHearstDoubleTap:(id)arg1;	// IMP=0x001000000006d8a7
+ (_Bool)isRecordContextHearstVoiceTrigger:(id)arg1;	// IMP=0x001000000006d847
+ (_Bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;	// IMP=0x001000000006d7e7
+ (_Bool)isRecordContextAutoPrompt:(id)arg1;	// IMP=0x001000000006d787
+ (_Bool)isRecordContextHomeButtonPress:(id)arg1;	// IMP=0x001000000006d727
+ (_Bool)isRecordContextRemoraVoiceTrigger:(id)arg1;	// IMP=0x001000000006d6c7
+ (_Bool)isRecordContextDarwinVoiceTrigger:(id)arg1;	// IMP=0x001000000006d667
+ (_Bool)isRecordContextBuiltInVoiceTrigger:(id)arg1;	// IMP=0x001000000006d607
+ (_Bool)isRecordContextVoiceTrigger:(id)arg1;	// IMP=0x001000000006d549
+ (_Bool)extractArchiveFromDirectory:(id)arg1 toDir:(id)arg2;	// IMP=0x001000000007a64e
+ (id)getSiriLanguageWithEndpointId:(id)arg1 fallbackLanguage:(id)arg2;	// IMP=0x001000000007b7a3
+ (id)getSiriLanguageWithFallback:(id)arg1;	// IMP=0x001000000007b6cd
+ (_Bool)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000a7f5f
+ (id)audioPortSubtypeAsString:(unsigned int)arg1;	// IMP=0x00100000000bcb60
+ (_Bool)isBluetoothVehicleOutput;	// IMP=0x00100000000bc932
+ (_Bool)isBluetoothAudioDeviceConnected;	// IMP=0x00100000000bc77a
+ (_Bool)isHeadphoneDeviceWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x00100000000bc42d
+ (_Bool)isHFPWithRecordRoute:(id)arg1;	// IMP=0x00100000000bc40e
+ (id)distributionDictionary:(id)arg1;	// IMP=0x00100000000d3deb
+ (_Bool)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d74e6
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e15a0
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;	// IMP=0x00100000000e14e6
+ (_Bool)machXPCConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000e1e96
@end

