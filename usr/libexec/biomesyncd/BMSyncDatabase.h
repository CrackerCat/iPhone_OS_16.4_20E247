//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _flags;	// 24 = 0x18
    NSString *__error_ivar;	// 32 = 0x20
    unsigned long long __internal_state_ivar;	// 40 = 0x28
    CDUnknownBlockType _corruptionHandler;	// 48 = 0x30
}

+ (id)defaultDatabaseWALPath;	// IMP=0x004000000003e0f9
+ (id)defaultDatabasePath;	// IMP=0x001000000003e09b
- (void).cxx_destruct;	// IMP=0x001000000003fc58
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x001000000003faaf
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x001000000003f79a
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x001000000003f762
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x001000000003f6e0
- (void)disableStatementCachingForBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003f64c
- (void)clearCachedStatements;	// IMP=0x001000000003f636
- (_Bool)rollback;	// IMP=0x001000000003f620
- (_Bool)commit;	// IMP=0x001000000003f60a
- (_Bool)beginTransaction;	// IMP=0x001000000003f5f4
- (void)close;	// IMP=0x001000000003f544
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x001000000003f46c
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x001000000003e5fa
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x001000000003e4d4
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x001000000003e334
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x001000000003e1da
- (id)initWithPath:(id)arg1;	// IMP=0x001000000003e1c6
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000003e150
- (int)CRDTLocationCount;	// IMP=0x0010000000004a38
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000048c9
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x0010000000004705
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x001000000000454f
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x00100000000042f8
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x0010000000004114
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x0010000000003cd4
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x0010000000003a6c
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x0010000000003780
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x001000000000363d
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x0010000000003516
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x0010000000003334
- (id)allPeers;	// IMP=0x0010000000007050
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000006f13
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x0010000000006dd4
- (id)lastSyncDateFromAnyDevice;	// IMP=0x0010000000006d18
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x0010000000006bd4
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x0010000000006678
- (id)localDevice;	// IMP=0x00100000000065ba
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000183d7
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x0010000000018161
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x0010000000017f4c
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x0010000000017cfb
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x0010000000017bc7
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x0010000000017abf
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x001000000002517e
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000024fe7
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000024d09
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000024490
- (void)locationsInClockVector:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000023c48
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x00100000000237b2
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000023452
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000023202
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x0010000000023116
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000022fe0
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000022e02
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x0010000000022bab
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002258e
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x00100000000222ed
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000220bc
- (int)ckAtomCount;	// IMP=0x001000000002200a
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000021e16
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x00100000000218ce
- (id)timestampClockVectorForStreamName:(id)arg1;	// IMP=0x001000000002162b
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000214b6
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000021299
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000020817
@property(retain, nonatomic) NSString *mergeableRecordValueKey;
- (void)clearCKSyncEngineMetaData;	// IMP=0x0010000000028708
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x00100000000286ef
- (id)ckSyncEngineMetaData;	// IMP=0x00100000000286d6
@property(retain, nonatomic) NSDate *lastCloudKitSyncDate;
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000028ab4
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForZoneName:(id)arg1;	// IMP=0x00100000000289d6
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x00100000000288cf
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x0010000000028794
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000028e30
- (id)latestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000028c50
- (_Bool)enableAllCKSyncRecordsPreviouslyDisabledForSite:(id)arg1 stream:(id)arg2;	// IMP=0x001000000003ae72
- (_Bool)disableAllCKSyncRecordsForSite:(id)arg1 stream:(id)arg2;	// IMP=0x001000000003ac52
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000003a81d
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x001000000003a6df
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x001000000003a589
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x001000000003a421
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003a25a
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x001000000003a0d2
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x0010000000039fb5
- (void)deleteCKRecordsAtOrBeforeLocation:(id)arg1;	// IMP=0x0010000000039daf
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000039c96
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x0010000000039a06
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x00100000000397f9
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003968a
- (id)ckRecordForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x00100000000394ed
- (_Bool);	// IMP=0x001000000003930a
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x0010000000038f4e
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x0010000000038c88
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x00100000000389e3
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x00100000000387e0
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x00100000000385f9
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000038461
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(id)arg2 recordType:(unsigned long long)arg3 crdtDeleted:(id)arg4;	// IMP=0x0010000000037d86
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000037b9b
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x0010000000037aa3
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x0010000000037802
- (void)compactAndDeleteSessionLogs;	// IMP=0x0010000000040e9a
- (id)computeAggregatedSessionLogs;	// IMP=0x0010000000040da8
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x0010000000040a86
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x00100000000407a2
- (void)recordSessionEnd:(id)arg1 timeSincePreviousSync:(double)arg2;	// IMP=0x00100000000405b6
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x0010000000040350
- (unsigned long long)sizeOfTableInKilobytes:(id)arg1;	// IMP=0x0010000000041e3d
- (unsigned long long)numRowsInTable:(id)arg1;	// IMP=0x0010000000041b5a
- (unsigned long long)_sizeOfFileInKilobytes:(id)arg1;	// IMP=0x00100000000419c1
- (unsigned long long)walSizeInKilobytes;	// IMP=0x0010000000041966
- (unsigned long long)databaseSizeInKilobytes;	// IMP=0x001000000004190b
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000004139f
- (unsigned long long)_numPagesToVacuum;	// IMP=0x0010000000041012
@property(retain, nonatomic) NSDate *dateOfLastVacuum;

@end

