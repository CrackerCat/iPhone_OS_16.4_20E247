//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GSLibraryState, NSMutableDictionary, NSString, NSUUID, PQLConnection;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface GSManager : NSObject
{
    NSMutableDictionary *_metainfo;	// 8 = 0x8
    PQLConnection *_db;	// 16 = 0x10
    NSString *_dbPath;	// 24 = 0x18
    NSString *_purgatoryPath;	// 32 = 0x20
    int _libDirfd;	// 40 = 0x28
    unsigned int _volumeCapabilitiesInterfaces;	// 44 = 0x2c
    NSMutableDictionary *_pendingDeleteDocuments;	// 48 = 0x30
    NSObject<OS_dispatch_group> *_operationsGroup;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_queue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_backgroundQueue;	// 72 = 0x48
    int _invalidated;	// 80 = 0x50
    int _isCorrupt;	// 84 = 0x54
    _Bool _powerIsOK;	// 88 = 0x58
    _Bool _lowDisk;	// 89 = 0x59
    long long _lastThinningScan;	// 96 = 0x60
    unsigned int _lastThinningFlags;	// 104 = 0x68
    unsigned long long _lastEstimatedPurgeableSpace;	// 112 = 0x70
    double _lastEstimatedPurgeableCheckTime;	// 120 = 0x78
    struct __FSEventStream *_fseStream;	// 128 = 0x80
    _Bool _isEnabled;	// 136 = 0x88
    _Bool _isRootFS;	// 137 = 0x89
    _Bool _isReadOnly;	// 138 = 0x8a
    _Bool _isIgnoringOwners;	// 139 = 0x8b
    int _volDirFd;	// 140 = 0x8c
    int _device;	// 144 = 0x90
    GSLibraryState *_state;	// 152 = 0x98
    NSString *_stagingPath;	// 160 = 0xa0
    NSString *_libraryRoot;	// 168 = 0xa8
    NSUUID *_volumeUUID;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0020000000022232
@property(readonly, nonatomic) int device; // @synthesize device=_device;
@property(readonly, nonatomic) NSUUID *volumeUUID; // @synthesize volumeUUID=_volumeUUID;
@property(readonly, nonatomic) NSString *libraryRoot; // @synthesize libraryRoot=_libraryRoot;
@property(readonly, nonatomic) NSString *stagingPath; // @synthesize stagingPath=_stagingPath;
@property(readonly, nonatomic) int volDirFd; // @synthesize volDirFd=_volDirFd;
@property(nonatomic) _Bool isIgnoringOwners; // @synthesize isIgnoringOwners=_isIgnoringOwners;
@property(readonly, nonatomic) _Bool isReadOnly; // @synthesize isReadOnly=_isReadOnly;
@property(readonly, nonatomic) _Bool isRootFS; // @synthesize isRootFS=_isRootFS;
@property(readonly, nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
@property(readonly, nonatomic) GSLibraryState *state; // @synthesize state=_state;
- (void)validateLibrary;	// IMP=0x0010000000021ec0
- (void)_validateGenerationsTable;	// IMP=0x0010000000021ce4
- (void)_validateGenerationsStorageTree:(const char *)arg1 atDepth:(int)arg2;	// IMP=0x0010000000021a8f
- (void)_validateGenerationsStorage:(CDStruct_2263269c *)arg1 forEntry:(struct _ftsent *)arg2 forStorageId:(long long)arg3 andClientName:(id)arg4;	// IMP=0x001000000002174e
- (id)_listAdditions:(long long)arg1 nameSpace:(id)arg2 withOptions:(unsigned long long)arg3 withoutOptions:(unsigned long long)arg4 andEnumerationState:(id)arg5 credentials:(const struct GSCredential *)arg6;	// IMP=0x00100000000212d9
- (id)_setAdditionNameSpace:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 newNameSpace:(id)arg4 credentials:(const struct GSCredential *)arg5 error:(id *)arg6;	// IMP=0x0010000000020de9
- (id)_getAddition:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 credentials:(const struct GSCredential *)arg4 error:(id *)arg5;	// IMP=0x0010000000020d22
- (id)_additionDictionary:(id)arg1 path:(id)arg2;	// IMP=0x0010000000020c90
- (id)_additionDictionary:(id)arg1 path:(id)arg2 isDir:(_Bool)arg3;	// IMP=0x0010000000020bf8
- (id)_additionDictionary:(id)arg1 url:(id)arg2;	// IMP=0x0010000000020a8a
- (id)_createAddition:(long long)arg1 creationInfo:(id)arg2 isDir:(_Bool)arg3 stagedPath:(id)arg4 credentials:(const struct GSCredential *)arg5 error:(id *)arg6;	// IMP=0x00100000000201b2
- (id)makeStoragePathForGenerationNamed:(id)arg1 storageID:(long long)arg2 clientID:(id)arg3 forUID:(unsigned int)arg4 makePublic:(_Bool)arg5;	// IMP=0x001000000001fc64
- (void)extensionsForStorageID:(long long)arg1 credentials:(const struct GSCredential *)arg2 pubExt:(id *)arg3 privExt:(id *)arg4;	// IMP=0x001000000001faae
- (void)cleanupStagingPath:(id)arg1 withCredential:(const struct GSCredential *)arg2;	// IMP=0x001000000001f7c3
- (_Bool)_pathIsStaged:(id)arg1;	// IMP=0x001000000001f6f6
- (id)makeStagingPathForCredential:(const struct GSCredential *)arg1 prefix:(id)arg2 stagedName:(id)arg3;	// IMP=0x001000000001f4f4
- (void)_removeAllAdditions:(long long)arg1 inNameSpace:(id)arg2 credentials:(const struct GSCredential *)arg3;	// IMP=0x001000000001f1e8
- (_Bool)_removeAddition:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 credentials:(const struct GSCredential *)arg4 error:(id *)arg5;	// IMP=0x001000000001f110
- (_Bool)_removeAdditionByRow:(id)arg1 credentials:(const struct GSCredential *)arg2 error:(id *)arg3;	// IMP=0x001000000001f029
- (void)_nukeStorageID:(long long)arg1;	// IMP=0x001000000001eb36
- (_Bool)_generationForsakeRow:(id)arg1 withCredential:(const struct GSCredential *)arg2 error:(out id *)arg3;	// IMP=0x001000000001eaa0
- (_Bool)_forsakePath:(id)arg1;	// IMP=0x001000000001e8e7
- (void)_purgePurgatory;	// IMP=0x001000000001e865
- (void)purgeWithCredential:(const struct GSCredential *)arg1 whilePredicateIsTrue:(CDUnknownBlockType)arg2 done:(CDUnknownBlockType)arg3;	// IMP=0x001000000001e757
- (unsigned long long)computePruneableNumberOfGenerations;	// IMP=0x001000000001e685
- (unsigned long long)computeNumberOfPruneableStorages;	// IMP=0x001000000001e5b3
- (unsigned long long)computePurgeableSpace;	// IMP=0x001000000001e4c0
- (long long)estimatePurgeableSpace;	// IMP=0x001000000001e2e3
- (long long)purgeTryingToReclaimSpace:(long long)arg1 highUrgency:(_Bool)arg2;	// IMP=0x001000000001e162
- (void)_purgeWithCredential:(const struct GSCredential *)arg1 tryingToFreeSpace:(long long)arg2 highUrgency:(_Bool)arg3 whilePredicateIsTrue:(CDUnknownBlockType)arg4 done:(CDUnknownBlockType)arg5;	// IMP=0x001000000001db46
- (long long)_purgeAggressively:(unsigned long long *)arg1 credentials:(const struct GSCredential *)arg2 whilePredicateIsTrue:(CDUnknownBlockType)arg3;	// IMP=0x001000000001d6ff
- (long long)_purgeGenerationsWithCredentials:(const struct GSCredential *)arg1;	// IMP=0x001000000001d138
- (_Bool)_thinningPrecompute:(_Bool)arg1 error:(out id *)arg2;	// IMP=0x001000000001c904
- (_Bool)dispatchSync:(CDUnknownBlockType)arg1;	// IMP=0x001000000001c6e2
@property(readonly, copy) NSString *description;
- (void)invalidate:(_Bool)arg1;	// IMP=0x001000000001c4f6
- (void)_invalidate;	// IMP=0x001000000001c349
@property(readonly, nonatomic) _Bool isInvalidated;
- (void)start;	// IMP=0x001000000001c260
- (void)dealloc;	// IMP=0x001000000001c16d
- (id)init;	// IMP=0x001000000001c10d
- (id)initWithDisk:(const CDStruct_0ee0f2e3 *)arg1 createIfNone:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000001b580
- (_Bool)_createLibraryWithDiskInfos:(const CDStruct_0ee0f2e3 *)arg1 createIfNone:(_Bool)arg2 error:(out id *)arg3;	// IMP=0x001000000001a031
- (void)_fseventAtPaths:(const char **)arg1 flags:(const unsigned int *)arg2 eventIds:(const unsigned long long *)arg3 count:(unsigned long long)arg4;	// IMP=0x0010000000019b0b
- (void)_actOnDocidChange:(unsigned long long)arg1 src:(unsigned long long)arg2 dst:(unsigned long long)arg3;	// IMP=0x0010000000019843
- (void)_actOnDocidDeletion:(unsigned long long)arg1 row:(id)arg2;	// IMP=0x00100000000193cf
- (void)resolveDocId:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000190a9
- (void)powerLevelChanged:(_Bool)arg1;	// IMP=0x0010000000018fed
- (void)lowDiskStatusChangedForDevice:(int)arg1 hasEnoughSpace:(_Bool)arg2;	// IMP=0x0010000000018f28
- (void)_updateThrottlingProperty:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018ddb
- (_Bool)isThrottlingIo;	// IMP=0x0010000000018dc4
@property(readonly, nonatomic) _Bool isCloningCapable;
- (void)setIsInconsistent:(_Bool)arg1;	// IMP=0x0010000000018d8e
@property(readonly, nonatomic) _Bool isInconsistent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

