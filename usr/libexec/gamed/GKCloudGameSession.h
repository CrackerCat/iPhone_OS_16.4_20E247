//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, GKCloudPlayer, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface GKCloudGameSession : NSObject
{
    CKRecord *_record;	// 8 = 0x8
    NSDictionary *_playersByIdentifier;	// 16 = 0x10
    GKCloudPlayer *_owner;	// 24 = 0x18
    NSURL *_url;	// 32 = 0x20
}

+ (void)badgeCountForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00200000000e7a85
+ (void)updateBadgeCountsForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2;	// IMP=0x00100000000e7686
+ (void)updateBadgeCountsForContainerName:(id)arg1;	// IMP=0x00100000000e7672
+ (void)deleteInviteRecordWithRecordID:(id)arg1 fromDatabase:(id)arg2;	// IMP=0x00100000000e72d3
+ (void)searchAndSaveIdentityForRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e5b8a
+ (id)lastSevenDigits:(id)arg1;	// IMP=0x00100000000e5b22
+ (id)formattedContact:(id)arg1;	// IMP=0x00100000000e59ac
+ (_Bool)shouldRetryForError:(id)arg1 andRetryCount:(int)arg2;	// IMP=0x00100000000e5502
+ (void)saveInviteRecord:(id)arg1 database:(id)arg2 retryCount:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000e47f4
+ (void)getAssociatedAccountsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e45b3
+ (id)msgServiceQueue;	// IMP=0x00100000000e455c
+ (void)generateAndStoreInviteBulletinForRecord:(id)arg1 database:(id)arg2;	// IMP=0x00100000000e3858
+ (id)packFakeTurnBasedBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000e32d1
+ (id)packFakeRealTimeBulletinWithZoneData:(id)arg1;	// IMP=0x00100000000e2673
+ (void)reportPlayerStateChangesToClients:(id)arg1 forUpdatedSession:(id)arg2 oldSession:(id)arg3;	// IMP=0x00100000000e1246
+ (void)openStoreForBundleID:(id)arg1;	// IMP=0x00100000000dfb2f
+ (void)launchOrOpenAppStoreForBundleID:(id)arg1;	// IMP=0x00100000000dfae1
+ (void)acceptShareMetadata:(id)arg1 retryCount:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000df2ec
+ (void)showAcceptAlertWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df167
+ (void)handleLegacyShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000de67b
+ (void)handleSessionShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dddcf
+ (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dd5e3
+ (void)acceptShareURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dd269
+ (void)saveInformationForPrimaryUserForSessionWithShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dc956
+ (void)fetchShareMetadataForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dc4f3
+ (void)fetchShareRecordsWithRecordIDs:(id)arg1 inDatabase:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dc3ca
+ (id)cloudKitOperationConfigurationForSocialGamingSessionsContainer;	// IMP=0x00100000000db21b
+ (id)cloudKitOperationConfigurationForContainer:(id)arg1;	// IMP=0x00100000000db191
+ (void)subscribeToAllDBwithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dac90
+ (void)getZoneNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000da6b3
+ (void)createZoneWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000da4c3
+ (void)bundleIDsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d929f
+ (void)removeSessionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d8a60
+ (void)createSessionWithContainerName:(id)arg1 title:(id)arg2 maxConnectedPlayers:(long long)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000d7dfb
+ (_Bool)isCloudDriveEnabledForBundleID:(id)arg1;	// IMP=0x00100000000d7ad5
+ (id)databaseForZoneID:(id)arg1;	// IMP=0x00100000000d7a89
+ (id)databaseForSession:(id)arg1;	// IMP=0x00100000000d7a3a
+ (id)sharedDatabase;	// IMP=0x00100000000d79dc
+ (id)privateDatabase;	// IMP=0x00100000000d797e
+ (_Bool)isOwnZoneID:(id)arg1;	// IMP=0x00100000000d785f
+ (_Bool)isOwnRecordID:(id)arg1;	// IMP=0x00100000000d7809
+ (id)recordIDForSessionIdentifier:(id)arg1;	// IMP=0x00100000000d75ba
+ (id)sessionIdentifierForRecordID:(id)arg1;	// IMP=0x00100000000d73d7
+ (id)allowedCharacterSet;	// IMP=0x00100000000d7316
+ (void)getFriendPlayersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d6c9b
+ (void)updateFriendRecordIfNeeded;	// IMP=0x00100000000d645e
+ (void)updateFriendsWithRecord:(id)arg1;	// IMP=0x00100000000d5d80
+ (void)updateCacheForFriendZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d576e
+ (void)updatePlayersForSessions:(id)arg1 sharesByRecordID:(id)arg2 inDatabase:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000d421a
+ (void)primaryPlayerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d4159
+ (id)playerIdentifierForUserRecordName:(id)arg1;	// IMP=0x00100000000d408c
+ (id)localPlayerAlias;	// IMP=0x00100000000d3e4f
+ (void)determinePlayerChangesIn:(id)arg1 newSession:(id)arg2 notifyClients:(id)arg3;	// IMP=0x00100000000d3648
+ (void)reportChangesForSessions:(id)arg1 shareChangedSessions:(id)arg2 removedSessions:(id)arg3 zoneID:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d26c0
+ (id)allChangedSessionsFromRecordChangedSessions:(id)arg1 shareChangedSessions:(id)arg2;	// IMP=0x00100000000d2214
+ (void)updateCacheForDatabase:(id)arg1 zoneIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d090c
+ (void)updateCacheForDatabaseScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cf259
+ (void)updateCacheForZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cee85
+ (void)updateSessionCacheDatabasesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ceabf
+ (void)updateSessionCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ce674
+ (void)updateUserWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ce602
+ (void)fetchUserRecordIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ce585
+ (id)friendEmailsByID;	// IMP=0x00100000000ce535
+ (void)sessionForShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ce499
+ (void)sessionsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ce0e3
+ (void)sessionForIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000cdcbf
+ (id)cacheQueue;	// IMP=0x00100000000cdc68
+ (id)sessionCache;	// IMP=0x00100000000cdc13
+ (id)AES128Operation:(unsigned int)arg1 key:(id)arg2 data:(id)arg3;	// IMP=0x00100000000cdac0
+ (id)AES128DecryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000cdaa6
+ (id)AES128EncryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x00100000000cda8f
+ (id)playerIdentifierForObfuscatedIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000cd98e
+ (id)obfuscatedIdentifierForPlayerIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x00100000000cd8a3
+ (id)mutablePlistFromPlayerStatesData:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000cca9e
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000000cbf30
- (void).cxx_destruct;	// IMP=0x00200000000e8c98
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSDictionary *playersByIdentifier; // @synthesize playersByIdentifier=_playersByIdentifier;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void)setBadged:(_Bool)arg1 forPlayerIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e82c3
- (void)saveConnectionState:(long long)arg1 forPlayerWithID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000e1dcc
- (void)tempEmailFixForPlayerID:(id)arg1;	// IMP=0x00100000000e1c45
@property(readonly, nonatomic) NSArray *connectedPlayerIDs;
- (void)removePlayers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e05cf
- (void)deleteShareWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e0222
- (void)fetchShareRecordWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dc1d4
- (void)saveShare:(id)arg1 isNewShare:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dbd43
- (void)setupShareWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dbadc
- (void)getShareURLWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000db2f8
- (void)saveWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000da1bf
- (void)saveData:(id)arg1 changeTag:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000d98ec
@property(readonly, nonatomic) NSString *containerName;
- (id)playersForGKGameSession;	// IMP=0x00100000000d513a
- (id)players;	// IMP=0x00100000000d50ea
- (void)setPlayers:(id)arg1;	// IMP=0x00100000000d4ee1
- (void)updatePlayersWithIdentities:(id)arg1;	// IMP=0x00100000000d4bd8
- (id)createGKGameSession;	// IMP=0x00100000000cd1c4
@property(retain, nonatomic) NSMutableDictionary *nicknamesByIdentifier; // @dynamic nicknamesByIdentifier;
@property(retain, nonatomic) NSMutableDictionary *emailsByCKID;
- (id);	// IMP=0x00100000000ccb45
- (id)playerStates;	// IMP=0x00100000000ccaee
- (void)setPlayerStates:(id)arg1;	// IMP=0x00100000000cca25
@property(readonly, nonatomic) NSString *serverChangeTag;
@property(readonly, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property(readonly, nonatomic) NSDate *lastModifiedDate;
@property(retain, nonatomic) NSData *data;
@property(nonatomic) long long maxConnectedPlayers;
@property(retain, nonatomic) NSString *title;
@property(readonly, nonatomic) NSString *identifier;
- (_Bool)isOwnedByUser;	// IMP=0x00100000000cc406
- (id)description;	// IMP=0x00100000000cc2d1
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00100000000cc1ee
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000000cbf38
- (id)initWithRecord:(id)arg1;	// IMP=0x00100000000cbec8
- (id)initWithContainerName:(id)arg1;	// IMP=0x00100000000cbe14

// Remaining properties
@property(readonly, nonatomic) NSDictionary *playersByEmail;

@end

