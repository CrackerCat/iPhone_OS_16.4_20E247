//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSString;

@interface CLClientManagerAdapter
{
}

+ (id)getSilo;	// IMP=0x002000000032b05c
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x001000000032b043
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x001000000032afe6
- (void)triggerAnalyticsCollect;	// IMP=0x0020000000335f9e
- (void)triggerPruneAndRotateLocationConsumptionScoreArchiveAndUpdateTheStateAccordingly;	// IMP=0x0010000000335885
- (void)triggerClearAppClipAuthorizationIfNecessary;	// IMP=0x001000000033538a
- (double)syncgetAndSetOrChangeAppClipAuthorizationTime:(double)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000334daf
- (id)syncgetTemporaryAuthorizationStatusForClient:(CDUnknownBlockType)arg1;	// IMP=0x0010000000334695
- (MISSING_TYPE *)setTemporaryAuthorizationStatusInfoForClient:data: /* Error: Ran out of types for this method. */;	// IMP=0x00100000003333d9
- (void)handleProvisionalIntermediationForService:(unsigned long long)arg1 forClientKey:(id)arg2 at:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000333214
- (void)checkWeakPersistentClientWithIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000033319f
- (id)syncgetArchivedAuthorizationDecisions;	// IMP=0x0010000000333185
- (id)syncgetApplyArchivedAuthorizationDecisionsAndDie:(id)arg1 unlessTokenMatches:(id)arg2;	// IMP=0x0010000000333159
- (_Bool)syncgetIsMapsANonSystemLocationClient;	// IMP=0x00100000003330d0
- (_Bool)syncgetHasAuthorizedClients;	// IMP=0x0010000000332ee6
- (void)setLocationButtonUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000332dfb
- (void)setIncidentalUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000332d10
- (void)deleteInterestZoneWithId:(id)arg1 registeredForClientKey:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x001000000033272b
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3;	// IMP=0x001000000033265a
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000332092
- (void)registerPhenolicInterestZoneForClientKey:(id)arg1 withId:(id)arg2 phenolicLocation:(int)arg3 serviceMaskOperator:(int)arg4 provenanceType:(int)arg5 withReply:(CDUnknownBlockType)arg6;	// IMP=0x0010000000331f91
- (void)registerCircularInterestZoneForClientKey:(id)arg1 withId:(id)arg2 latitude:(double)arg3 longitude:(double)arg4 serviceMaskOperator:(int)arg5 provenanceType:(int)arg6 radius:(double)arg7 withReply:(CDUnknownBlockType)arg8;	// IMP=0x0010000000331352
- (void)getIncidentalUseModeForClient:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000331267
- (int)syncgetRegistrationResultToAuthorizationStatus:(int)arg1;	// IMP=0x00100000003310db
- (int)syncgetClientEffectiveRegistrationResultWithTransientAwareness:(CDUnknownBlockType)arg1;	// IMP=0x0010000000330ff6
- (int)syncgetClientStaticRegistrationResult:(CDUnknownBlockType)arg1;	// IMP=0x0010000000330f11
- (id)syncgetNonSystemLocationClientKey;	// IMP=0x0010000000330d8d
- (id)syncgetNonSystemLocationClientKeys;	// IMP=0x0010000000330caf
- (void)fetchLocationClientKeysWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000330c7f
- (id)syncgetLocationClientKeys;	// IMP=0x0010000000330ba2
- (id)syncgetCopyClients;	// IMP=0x0010000000330aed
- (void)setAllowableAuthorizationMask:(unsigned long long)arg1 forClientKey:(id)arg2;	// IMP=0x00100000003303f0
- (void)appsWithClientKeysAreInstalledOnAPairedDevice:(id)arg1;	// IMP=0x0010000000330256
- (void)checkAppInstallationStatus;	// IMP=0x001000000033023c
- (_Bool)syncgetSetLocationServicesEnabledStatically:(_Bool)arg1 withEventSource:(id)arg2;	// IMP=0x00100000003301b1
- (void)setPurpose:(id)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x001000000032ffdf
- (void)setClient:(CDUnknownBlockType)arg1;	// IMP=0x001000000032fefc
- (void)resetClients;	// IMP=0x001000000032fee2
- (void)resetClient:(id)arg1;	// IMP=0x001000000032fe63
- (void)setLastLocationSettingsEventSource:(id)arg1;	// IMP=0x001000000032fddc
- (void)setClientAuthorization:(CDUnknownBlockType)arg1 zoneIdentifier:(id)arg2 subIdentityIdentifier:(id)arg3 status:(int)arg4 correctiveCompensation:(int)arg5 mayIncreaseAuth:(_Bool)arg6 entity:(id)arg7;	// IMP=0x001000000032fc85
- (void)setClientBackgroundIndicator:(CDUnknownBlockType)arg1 enabled:(_Bool)arg2 entity:(id)arg3;	// IMP=0x001000000032f9bf
- (void)resetNotificationConsumedForIdentifier:(id)arg1;	// IMP=0x001000000032f58e
- (void)performMigrationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000032c028
- (void)appLaunchedByAppLifecycleManager:(id)arg1;	// IMP=0x001000000032bce2
- (void)wakeUpLaunchdManagedClient:(id)arg1;	// IMP=0x001000000032bc48
- (void)onCapabilityChange;	// IMP=0x001000000032bc24
- (void)markReceivingLocationInformation:(CDUnknownBlockType)arg1;	// IMP=0x001000000032ba68
- (void)reduceAccuracy:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000032b9c7
- (void)inUseAssertionInvalidatedDueToWatchConnectivityForClientKey:(id)arg1;	// IMP=0x001000000032b948
- (void)takeInUseAssertionForClientKey:(id)arg1 reason:(id)arg2 assertionLevel:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000032b79f
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1 shouldOverrideDeauthorization:(_Bool)arg2 forBeneficiary:(id)arg3;	// IMP=0x001000000032b70c
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1;	// IMP=0x001000000032b695
- (void)markClientTemporaryAuthorizationGranted:(_Bool)arg1 forClientKey:(id)arg2 andAuditToken:(CDStruct_6ad76789)arg3 byLocationButton:(_Bool)arg4 voiceInteractionEnabled:(_Bool)arg5;	// IMP=0x001000000032b5e9
- (void)updateCorrectiveCompensationChoiceForOutstandingPrompt:(int)arg1;	// IMP=0x001000000032b5c7
- (void)considerPromptingForTranscriptSession:(id)arg1 dictionary:(id)arg2 requestType:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000032b587
- (void)setClients:(id)arg1 locationPushTo:(_Bool)arg2;	// IMP=0x001000000032b52d
- (void)setClients:(id)arg1 significantLocationVisitTo:(_Bool)arg2;	// IMP=0x001000000032b4c3
- (void)setClients:(id)arg1 transcriptSessionChangeTo:(_Bool)arg2;	// IMP=0x001000000032b469
- (void)setClients:(id)arg1 significantLocationChangeTo:(_Bool)arg2;	// IMP=0x001000000032b40f
- (void)setClients:(id)arg1 regionOfType:(int)arg2 to:(_Bool)arg3;	// IMP=0x001000000032b3a8
- (void)setProvisionalAuthorization:(id)arg1;	// IMP=0x001000000032b231
- (void)dingAllActiveTranscriptSubscriptions;	// IMP=0x001000000032b211
- (_Bool)syncgetDoSync:(CDUnknownBlockType)arg1;	// IMP=0x001000000032b1e9
- (void)doAsync:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000032b1bc
- (void)doAsync:(CDUnknownBlockType)arg1;	// IMP=0x001000000032b194
- (void *)adaptee;	// IMP=0x001000000032b161
- (void)endService;	// IMP=0x001000000032b146
- (void)beginService;	// IMP=0x001000000032b0f5
- (id)init;	// IMP=0x001000000032b0b8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

