//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecordID, CKRecordZone, CKRecordZoneID, CKReference, CPLCloudKitScope, CPLEngineScope, MISSING_TYPE, NSString;

@interface CPLCloudKitZoneIdentification : NSObject
{
    _Bool _hasCachedRootRef;	// 8 = 0x8
    CKReference *_cachedRootRef;	// 16 = 0x10
    CPLCloudKitScope *_cloudKitScope;	// 24 = 0x18
    CPLEngineScope *_engineScope;	// 32 = 0x20
}

+ (_Bool)isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x002000000011651b
+ (long long)_permissionFromCKShare:(id)arg1;	// IMP=0x001000000011640e
+ (id)prefixForNewScopes;	// IMP=0x0010000000116406
+ (id)libraryInfoRecordName;	// IMP=0x0010000000115df5
+ (_Bool)isSupportedShare:(id)arg1;	// IMP=0x0010000000115c4f
+ (_Bool)isSupportedShareType:(id)arg1;	// IMP=0x0010000000115bdb
+ (id)shareType;	// IMP=0x0010000000115bd3
+ (id)shareRecordName;	// IMP=0x0010000000115bcb
+ (id)rootRecordName;	// IMP=0x0010000000115bc3
+ (_Bool)supportsCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x00100000001151cf
+ (long long)scopeTypeForCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 fetchedRecords:(id)arg3 currentUserID:(id)arg4;	// IMP=0x00100000001151c7
+ (id)recordsToFetchToIdentifyZoneID:(id)arg1 proposedScopeType:(long long)arg2 currentUserID:(id)arg3;	// IMP=0x0010000000114fb5
+ (id)recordNamesForScopeInfo;	// IMP=0x0010000000114eb9
+ (_Bool)shouldProtectZoneIDFromDeletion:(id)arg1;	// IMP=0x0010000000114bfb
- (void).cxx_destruct;	// IMP=0x0020000000116549
@property(readonly, nonatomic) CPLEngineScope *engineScope; // @synthesize engineScope=_engineScope;
@property(readonly, nonatomic) CPLCloudKitScope *cloudKitScope; // @synthesize cloudKitScope=_cloudKitScope;
- (_Bool)_isScopeReadonlyFromCKShare:(id)arg1;	// IMP=0x001000000011648c
- (id)newScopeIdentifier;	// IMP=0x001000000011631e
- (void)validateCreateScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011630e
- (void)validateAcceptSharedScopeTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001162fe
@property(readonly, nonatomic) long long scopeType;
@property(readonly, nonatomic) NSString *scopeIdentifier;
@property(readonly, nonatomic) CKRecordZone *zone;
@property(readonly, nonatomic) CKRecordZoneID *zoneID;
- (id)scopedIdentifierWithIdentifier:(id)arg1;	// IMP=0x00100000001161ad
- (MISSING_TYPE *)recordIDWithRecordName: /* Error: Ran out of types for this method. */;	// IMP=0x001000000011612a
- (_Bool)supportsDeletionOfRecordClass:(Class)arg1;	// IMP=0x0010000000116115
- (_Bool)supportsDirectDeletionOfRecordClass:(Class)arg1;	// IMP=0x0010000000116100
- (_Bool)supportsDownloadOfRecordClass:(Class)arg1;	// IMP=0x00100000001160f8
- (_Bool)supportsUploadOfRecordClass:(Class)arg1;	// IMP=0x00100000001160f0
- (_Bool)supportsDeletionOfRecord:(id)arg1;	// IMP=0x00100000001160db
- (_Bool)supportsDirectDeletionOfRecord:(id)arg1;	// IMP=0x00100000001160c6
- (_Bool)supportsDownloadOfChange:(id)arg1;	// IMP=0x0010000000116092
- (_Bool)supportsUploadOfChange:(id)arg1;	// IMP=0x001000000011605e
- (void)setupRootOnRecord:(id)arg1;	// IMP=0x0010000000115ff3
@property(readonly, nonatomic) long long databaseScope;
@property(readonly, nonatomic) long long operationType;
- (id)_rootRef;	// IMP=0x0010000000115ec2
@property(readonly, nonatomic) NSString *libraryInfoRecordName;
@property(readonly, nonatomic) NSString *shareType;
@property(readonly, nonatomic) NSString *shareRecordName;
@property(readonly, nonatomic) NSString *rootRecordType;
@property(readonly, nonatomic) CKRecordID *rootRecordID;
- (id)proposedStagingZoneIdentificationWithCurrentUserID:(id)arg1;	// IMP=0x0010000000115dfd
- (_Bool)isSupportedShare:(id)arg1;	// IMP=0x0010000000115d5c
- (_Bool)isSupportedShareType:(id)arg1;	// IMP=0x0010000000115ce8
- (id)updatedFlagsFromDeletedCKRecordID:(id)arg1 recordType:(id)arg2;	// IMP=0x0010000000115bbb
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withDeletedCKRecordID:(id)arg3 recordType:(id)arg4;	// IMP=0x0010000000115bb3
- (id)updatedFlagsFromCKRecord:(id)arg1;	// IMP=0x0010000000115ac6
- (id)scopeFlagsUpdateFromCKRecords:(id)arg1;	// IMP=0x0010000000115960
- (id)updatedScopeChangeFromScopeChange:(id)arg1 currentUserID:(id)arg2 withCKRecord:(id)arg3;	// IMP=0x0010000000115623
- (id)scopeChangeFromCKRecords:(id)arg1 currentUserID:(id)arg2 previousScopeChange:(id)arg3;	// IMP=0x001000000011532b
- (id)_baseScopeChange;	// IMP=0x00100000001152b8
- (id)recordsToUpdateFromScopeChange:(id)arg1 currentUserID:(id)arg2;	// IMP=0x00100000001152ab
@property(readonly, nonatomic) CKRecordID *shareRecordIDToDelete;
@property(readonly, nonatomic) _Bool supportsZoneCreation;
@property(readonly, nonatomic) _Bool supportsZoneDelete;
- (id)recordsToFetchForScopeInfoWithCurrentUserID:(id)arg1;	// IMP=0x00100000001151d7
- (id)initWithCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x0010000000114c49

@end

