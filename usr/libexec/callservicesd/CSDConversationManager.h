//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivityAuthorizationManager, CPApplicationController, CPSystemStateObserver, CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDIDSService, CSDPendingMembershipTracker, CSDReportingController, CSDScreenSharingActivityManager, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, NSDictionary, NSMapTable, NSMutableDictionary, NSMutableSet, NSString, TUCallProviderManager;
@protocol CSDConduitIDSProxy, CSDConversationInvitationResolving, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableSet *_mutableConversationsRequestingUpgrade;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    NSMapTable *_observerToQueue;	// 80 = 0x50
    CSDScreenSharingActivityManager *_screenSharingActivityManager;	// 88 = 0x58
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 96 = 0x60
    CSDConversationPersistenceController *_persistenceController;	// 104 = 0x68
    CSDDeviceLockStateObserver *_lockStateObserver;	// 112 = 0x70
    TUCallProviderManager *_callProviderManager;	// 120 = 0x78
    CSDConversationLinkManager *_linkManager;	// 128 = 0x80
    CSDReportingController *_reportingController;	// 136 = 0x88
    id <TUFeatureFlags> _featureFlags;	// 144 = 0x90
    CSDConversationNoticeManager *_conversationNoticeManger;	// 152 = 0x98
    CSDSharedConversationServerBag *_serverBag;	// 160 = 0xa0
    id <CSDConversationInvitationResolving> _invitationResolver;	// 168 = 0xa8
    NSMutableDictionary *_screenCaptureQueue;	// 176 = 0xb0
    id <CSDVoucherManager> _voucherManager;	// 184 = 0xb8
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 192 = 0xc0
    NSObject<OS_dispatch_queue> *_queue;	// 200 = 0xc8
    CSDIDSService *_service;	// 208 = 0xd0
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 216 = 0xd8
    FTDeviceSupport *_deviceSupport;	// 224 = 0xe0
    CDUnknownBlockType _conversationCreationBlock;	// 232 = 0xe8
    CDUnknownBlockType _sendDataBlock;	// 240 = 0xf0
    CSDConversationProviderManager *_conversationProviderManager;	// 248 = 0xf8
    CDUnknownBlockType _lockdownModeEnabled;	// 256 = 0x100
    CDUnknownBlockType _activeLocalHandles;	// 264 = 0x108
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 272 = 0x110
    CDUnknownBlockType _localCallerID;	// 280 = 0x118
    CDUnknownBlockType _localCallerIDForProvider;	// 288 = 0x120
    CSDSecureImageTranscoder *_imageTranscoder;	// 296 = 0x128
    CPApplicationController *_cpApplicationController;	// 304 = 0x130
    CPActivityAuthorizationManager *_activityAuthorizationManager;	// 312 = 0x138
    id <CSDConduitIDSProxy> _messageProxy;	// 320 = 0x140
}

- (void).cxx_destruct;	// IMP=0x00200000001368dd
@property(nonatomic) __weak id <CSDConduitIDSProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) CPActivityAuthorizationManager *activityAuthorizationManager; // @synthesize activityAuthorizationManager=_activityAuthorizationManager;
@property(readonly, nonatomic) CPApplicationController *cpApplicationController; // @synthesize cpApplicationController=_cpApplicationController;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(copy, nonatomic) CDUnknownBlockType lockdownModeEnabled; // @synthesize lockdownModeEnabled=_lockdownModeEnabled;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) CSDIDSService *service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(readonly, nonatomic) CSDScreenSharingActivityManager *screenSharingActivityManager; // @synthesize screenSharingActivityManager=_screenSharingActivityManager;
@property(retain, nonatomic) NSMapTable *observerToQueue; // @synthesize observerToQueue=_observerToQueue;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableSet *mutableConversationsRequestingUpgrade; // @synthesize mutableConversationsRequestingUpgrade=_mutableConversationsRequestingUpgrade;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000013602a
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x0010000000135b1c
- (void)applicationPolicyManager:(id)arg1 authorizationChangedForBundleIdentifier:(id)arg2;	// IMP=0x0010000000135852
- (void)screenSharingActivityManager:(id)arg1 invalidatedSessionWithReason:(id)arg2 wasLocallySharing:(_Bool)arg3;	// IMP=0x0010000000135446
- (void)screenSharingActivityManager:(id)arg1 receivedUpdatedRemoteAttributes:(id)arg2 isLocallySharing:(_Bool)arg3;	// IMP=0x00100000001352bd
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x0010000000134a1b
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x0010000000134846
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x00100000001346ad
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x0010000000134376
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x00100000001341ee
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x0010000000133ec7
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x0010000000133ce8
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x0010000000133b83
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x0010000000133a1e
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x00100000001338b9
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x0010000000133754
- (id)pickInitiatorFromParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x00100000001333c0
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x0010000000132b06
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000132753
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3 withGroupSessionUpdate:(id)arg4;	// IMP=0x00100000001323ee
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4;	// IMP=0x001000000012ecdb
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000012e787
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000012e2a7
- (id)pushTokenForSelf;	// IMP=0x001000000012e250
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3;	// IMP=0x001000000012db34
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x001000000012d30f
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x001000000012d0cd
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x001000000012cfea
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x001000000012cee8
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x001000000012b912
- (void)processProxiedGroupUpdate:(id)arg1;	// IMP=0x001000000012b89c
- (void)processProxiedResource:(id)arg1 metadata:(id)arg2 fromID:(id)arg3 context:(id)arg4;	// IMP=0x001000000012b7e1
- (void)processProxiedMessage:(id)arg1 fromID:(id)arg2 context:(id)arg3;	// IMP=0x001000000012b725
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x001000000012b4c7
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x001000000012b031
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x001000000012acdd
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x001000000012aba2
- (void)service:(id)arg1 account:(id)arg2 messageIdentifier:(id)arg3 alternateCallbackID:(id)arg4 updatedWithResponseCode:(long long)arg5 error:(id)arg6 lastCall:(_Bool)arg7 messageContext:(id)arg8;	// IMP=0x001000000012ab28
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x001000000012a979
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x001000000012a742
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x001000000012a30b
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x0010000000129f64
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x0010000000129afc
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x0010000000129668
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x001000000012911c
- (void)conversation:(id)arg1 didChangeSceneAssociationForActivitySession:(id)arg2;	// IMP=0x0010000000128c2e
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;	// IMP=0x001000000012874c
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x0010000000128473
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedVideoEnabled:(_Bool)arg3;	// IMP=0x0010000000127fc9
- (void)conversation:(id)arg1 remoteParticipantWithIdentifier:(unsigned long long)arg2 updatedAudioEnabled:(_Bool)arg3;	// IMP=0x0010000000127b1f
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x001000000012765a
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x00100000001271d4
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x001000000012703e
- (void)conversation:(id)arg1 requestBlobRecoveryForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000126e74
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x00100000001269ac
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x00100000001264f1
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;	// IMP=0x001000000012603f
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2 withLeaveReason:(unsigned long long)arg3;	// IMP=0x00100000001258dd
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2;	// IMP=0x001000000012500b
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x0010000000123ea5
- (void)conversationInvalidated:(id)arg1;	// IMP=0x0010000000123b22
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x0010000000123665
- (void)conversationChanged:(id)arg1;	// IMP=0x0010000000122ed5
- (void)cleanupExpiredPendingConversations;	// IMP=0x0010000000122a8b
- (void)setupPendingConversationCleanupTimer;	// IMP=0x00100000001227a7
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x001000000012242d
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000121d37
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000121a22
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x001000000012179f
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x001000000012152e
- (void)removeNonIndefiniteLinks;	// IMP=0x0010000000120edc
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000120c31
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x0010000000120b2f
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x00100000001209fe
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001208de
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001202b6
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000011ffca
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000011fccb
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000011fb0d
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x001000000011f96e
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x001000000011f7f0
- (id)undeleteConversationLinkIfNecessary:(id)arg1 withError:(id *)arg2;	// IMP=0x001000000011f767
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011f1f0
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011ef43
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000011ebb1
- (void)generateAllInactiveLinks;	// IMP=0x001000000011ea31
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011e8a3
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000011e317
- (void)invalidateLink:(id)arg1 userInteraction:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011ddd3
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011d7f2
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011cccd
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011cabb
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x001000000011c7f9
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011be05
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011ba53
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000011b8b7
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000011b476
- (void)setVideoEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;	// IMP=0x001000000011b1c3
- (void)setAudioEnabled:(_Bool)arg1 forRemoteParticipantWithIdentifier:(unsigned long long)arg2 conversationUUID:(id)arg3;	// IMP=0x001000000011af10
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x001000000011ac88
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x001000000011a73a
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x0010000000119e77
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x0010000000119b86
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x00100000001194bb
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000119210
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000118a5a
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001183a4
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000118231
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000011716a
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000117135
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000117100
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000116c9d
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001168e5
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x00100000001167dc
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x00100000001151ca
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x0010000000115049
- (void)requestActivityAuthorizationForApplicationWithBundleIdentifier:(id)arg1 overrides:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000114f27
- (void)launchApplicationForActivitySessionUUID:(id)arg1 forceBackground:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000113ff3
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000113cc5
- (void)launchApplicationForActivitySessionUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000113cae
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x0010000000113bac
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x0010000000113ab1
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x0010000000113788
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3;	// IMP=0x0010000000113773
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x0010000000113421
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000113176
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000112ebc
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000112c04
- (void)createActivitySession:(id)arg1 onConversationWithUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000011240c
- (id)createCPActivitySessionForActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000111fb4
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x001000000011193e
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001112ea
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x0010000000110fc5
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x0010000000110ed4
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x0010000000110487
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000010fa79
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x001000000010f129
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x001000000010f097
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x001000000010edea
- (void);	// IMP=0x001000000010ec5d
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010eb25
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010e9d3
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010e89c
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x001000000010e709
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x001000000010e579
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010e441
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010e309
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010e1d1
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000010d8aa
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010d829
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000010d38e
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000010cef3
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010cdbb
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x001000000010cac1
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010c989
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000010c851
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000010c74f
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000010c61c
- (void)leaveAllConversations;	// IMP=0x001000000010c440
- (void)leaveConversationWithUUID:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000010c2df
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x001000000010c26d
- (void)_leaveConversation:(id)arg1;	// IMP=0x001000000010c1cc
- (void)_leaveConversation:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000010c079
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x001000000010be0c
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x001000000010b515
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000010aeaa
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x001000000010a707
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x00100000001098d2
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x00100000001090de
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x0010000000108541
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 conversationProvider:(id)arg10;	// IMP=0x0010000000107791
- (void)removeAllConversations;	// IMP=0x0010000000107754
- (void)retreiveActiveConversations;	// IMP=0x0010000000106cfe
- (void)beginListeningOnService:(id)arg1;	// IMP=0x0010000000106aac
- (void)addObserver:(id)arg1 queue:(id)arg2;	// IMP=0x001000000010697b
- (void)removeDelegate:(id)arg1;	// IMP=0x0010000000106878
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000106747
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
- (id)deletedConversationLinksWithError:(id *)arg1;	// IMP=0x00100000001065c3
- (id)activatedConversationLinksWithError:(id *)arg1;	// IMP=0x0010000000106545
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x0010000000105fc7
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x00100000001058b7
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x0010000000104fc5
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000104aea
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000104952
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x00100000001044df
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x00100000001041db
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000103c98
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x0010000000103b8a
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000001037ed
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000001034d1
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x0010000000102ed6
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x0010000000102c60
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x00100000001027c4
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x0010000000102456
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x00100000001020f1
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x001000000010185c
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000101847
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x001000000010111d
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x0010000000100931
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x001000000010091c
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x001000000010076d
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x0010000000100600
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;	// IMP=0x00100000001005eb
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x0010000000100535
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x0010000000100514
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x00100000000ffde6
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000ff44b
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x00100000000fefe0
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x00100000000fe421
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000fdb7c
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000fd363
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000fc3d8
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000fbcb2
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x00100000000faa07
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000fa335
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f9cac
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000000f9af9
- (id)createActivitySession:(id)arg1 onConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f9963
- (id)temporaryFilePath;	// IMP=0x00100000000f98e7
- (_Bool)_linksEnabled;	// IMP=0x00100000000f98da
- (void)postEndEventForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x00100000000f96f1
- (void)postSessionStartedForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x00100000000f9508
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x00100000000f8a53
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x00100000000f7fbc
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x00100000000f7ee5
- (void)handleConversation:(id)arg1 receivedBlobRecoveryResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f7b58
- (void)handleConversation:(id)arg1 receivedBlobRecoveryRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000000f77af
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x00100000000f737a
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x00100000000f6f45
- (void)notifyDelegatesOfRemoteScreenShareEndedWithReason:(id)arg1;	// IMP=0x00100000000f6c69
- (void)notifyDelegatesOfRemoteScreenShareAttributes:(id)arg1 isLocallySharing:(_Bool)arg2;	// IMP=0x00100000000f6969
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x00100000000f62cc
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x00100000000f61c8
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x00100000000f5ef5
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x00100000000f5bf7
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x00100000000f5956
- (void)notifyDelegatesOfAVModeChanged:(unsigned long long)arg1 toAVMode:(unsigned long long)arg2 forConversation:(id)arg3;	// IMP=0x00100000000f54e6
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000000f502a
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x00100000000f4aaf
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x00100000000f4647
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 provider:(id)arg14;	// IMP=0x00100000000f429e
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x00100000000f409e
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x00100000000f3f1f
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x00100000000f3d1f
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000f3abd
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x00100000000f3720
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x00100000000f33d6
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x00100000000f3176
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x00100000000f2f53
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x00100000000f2c2f
- (id)activeConversation;	// IMP=0x00100000000f2a83
- (void)removeAllPendingConversations;	// IMP=0x00100000000f29d1
- (id)_removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000f289f
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x00100000000f2720
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x00100000000f237a
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 provider:(id)arg17;	// IMP=0x00100000000f12f4
- (id)localMemberForProvider:(id)arg1 fromHandle:(id)arg2 members:(id)arg3 lightweightMembers:(id)arg4 activeLocalHandles:(id)arg5;	// IMP=0x00100000000f0da1
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x00100000000f0d8d
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000f0c71
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1;	// IMP=0x00100000000f0a47
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x00100000000f081d
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000f0672
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x00100000000f065e
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000000f05e1
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x00100000000f055c
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x00100000000f04c5
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000000f0371
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8 applicationPolicyManager:(id)arg9;	// IMP=0x00100000000ee695
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x00100000000ee544
- (id)init;	// IMP=0x00100000000ee519
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x00100000000ee3ec

// Remaining properties
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

