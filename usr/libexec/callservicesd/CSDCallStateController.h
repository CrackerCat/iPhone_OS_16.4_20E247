//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryController, CSDCallHistoryControllerXPCServer, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDCarPlayManager, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRelayMessagingController, CSDRouteController, CSDVoIPApplicationController, NSNumber, NSString, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDCallContainer, CSDProcessObserverProtocol, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryController *_callHistoryController;	// 8 = 0x8
    CSDCallHistoryManager *_callHistoryManager;	// 16 = 0x10
    CSDCallProviderManager *_callProviderManager;	// 24 = 0x18
    CSDCallController *_callController;	// 32 = 0x20
    CSDVoIPApplicationController *_voipApplicationController;	// 40 = 0x28
    CSDRelayMessagingController *_relayMessagingController;	// 48 = 0x30
    CSDRecentsController *_recentsController;	// 56 = 0x38
    CSDAudioController *_audioController;	// 64 = 0x40
    CSDAudioArbitrationController *_audioArbitrationController;	// 72 = 0x48
    CSDRouteController *_localRouteController;	// 80 = 0x50
    CSDRouteController *_pairedHostDeviceRouteController;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_queue;	// 96 = 0x60
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 104 = 0x68
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 112 = 0x70
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 120 = 0x78
    id <TUFeatureFlags> _featureFlags;	// 128 = 0x80
    CSDRelayCallDataSource *_relayCallDataSource;	// 136 = 0x88
    CSDRelayCallDelegate *_relayCallDelegate;	// 144 = 0x90
    CSDClientManager *_clientManager;	// 152 = 0x98
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 160 = 0xa0
    id <CSDProcessObserverProtocol> _processObserver;	// 168 = 0xa8
    CSDCarPlayManager *_carPlayManager;	// 176 = 0xb0
    CSDCallHistoryControllerXPCServer *_callHistoryControllerXPCServer;	// 184 = 0xb8
    CDUnknownBlockType _clientInvalidationHandler;	// 192 = 0xc0
    CSDProviderCallDataSource *_providerCallDataSource;	// 200 = 0xc8
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 208 = 0xd0
}

+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x002000000015a52a
- (void).cxx_destruct;	// IMP=0x002000000016861a
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) CSDCallHistoryControllerXPCServer *callHistoryControllerXPCServer; // @synthesize callHistoryControllerXPCServer=_callHistoryControllerXPCServer;
@property(readonly, nonatomic) CSDCarPlayManager *carPlayManager; // @synthesize carPlayManager=_carPlayManager;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) CSDRelayMessagingController *relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
@property(retain, nonatomic) CSDCallHistoryController *callHistoryController; // @synthesize callHistoryController=_callHistoryController;
- (_Bool)isInCallUIActive;	// IMP=0x00100000001682ed
- (void)updateAudioArbitration;	// IMP=0x00100000001682e7
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x0010000000168221
- (void)didChangeRelayCallingCapabilities;	// IMP=0x00100000001681ab
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x0010000000168139
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000167fff
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x0010000000167ed7
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x0010000000167c93
- (id)currentCallsForClient:(id)arg1;	// IMP=0x0010000000167bcf
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x0010000000167b3a
- (id)currentProxyCalls;	// IMP=0x0010000000167920
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x00100000001678ae
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000167771
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000167672
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000167502
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x00100000001673fd
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000001671ee
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000166f7f
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000166e8a
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000166c7b
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000166b81
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000166997
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001667c6
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001665f5
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000016649d
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x0010000000166345
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x0010000000166166
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x0010000000165f87
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000165df0
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x0010000000165cf9
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x00100000001657bd
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x001000000016557e
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x001000000016533e
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x00100000001650ce
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x0010000000164e88
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x0010000000164c5c
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x0010000000164a5b
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000016481b
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x00100000001646fe
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x00100000001645d5
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000164399
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x001000000016420a
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000016402f
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x0010000000163f06
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000163d77
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000163aab
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001637df
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001634cb
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001631ff
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000162f33
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x0010000000162da4
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000162a91
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x0010000000162902
- (oneway void)pullRelayingCallsFromClientAndDisconnectCallsWithUPI:(id)arg1;	// IMP=0x0010000000162795
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000162590
- (oneway void)disconnectAllCalls;	// IMP=0x0010000000162467
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x001000000016233e
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000162072
- (oneway void)swapCalls;	// IMP=0x0010000000161f49
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000161ca1
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001618b6
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000016160e
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000161039
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000160d91
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000160ae9
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x00100000001606fa
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000160611
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000160436
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000016001e
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x001000000015fcc4
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x001000000015fc10
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x001000000015f9a7
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000015f754
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000015f6e2
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000015f5de
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x001000000015f367
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x001000000015f18f
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x001000000015f107
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000015f095
- (void);	// IMP=0x001000000015eda1
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x001000000015ed8c
- (void)performDisconnectAllCalls;	// IMP=0x001000000015eaa3
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x001000000015df0f
- (void)performDisconnectCall:(id)arg1;	// IMP=0x001000000015db56
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015dad2
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015da4e
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015d1c2
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015c98f
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015c2b3
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x001000000015c0df
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000015be74
- (void)performSwapCalls;	// IMP=0x001000000015b84d
- (void)performUngroupCall:(id)arg1;	// IMP=0x001000000015b49b
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x001000000015b0b3
- (void)performUnholdCall:(id)arg1;	// IMP=0x001000000015aec5
- (void)performHoldCall:(id)arg1;	// IMP=0x001000000015acd7
- (id)performJoinConversation:(id)arg1;	// IMP=0x001000000015aba1
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000015a250
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x0010000000159fdd
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x0010000000159f2d
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x00100000001597f7
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001596b8
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x0010000000159637
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x0010000000159571
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001594fd
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000015940f
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001592f8
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000159127
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000015908a
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000158c42
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x00100000001589c6
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x0010000000158507
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x001000000015835f
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x001000000015820b
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x00100000001580c9
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x0010000000157f80
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x0010000000157def
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x0010000000157c8b
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x0010000000157b7d
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x0010000000157a3b
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x00100000001578d1
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x001000000015777b
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x0010000000157639
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x0010000000157515
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x00100000001573cd
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x0010000000157264
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x0010000000156ed9
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x0010000000156d64
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x0010000000156bef
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x0010000000156acf
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x001000000015694b
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x00100000001567d6
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x0010000000156694
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x0010000000156552
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x00100000001562d0
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001562bb
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x00100000001562a4
- (void)resetClientCallProvisionalStates;	// IMP=0x00100000001561a7
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000155efc
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000155be5
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000155b11
- (_Bool)shouldSendCall:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001557f8
- (_Bool)shouldFilterClient:(id)arg1;	// IMP=0x0010000000155796
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001555aa
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x0010000000154caf
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x0010000000154a64
- (_Bool)_shouldLaunchInCallApplicationForProviderOfCall:(id)arg1;	// IMP=0x001000000015496b
- (void)_launchInCallApplicationForCall:(id)arg1 withURL:(id)arg2;	// IMP=0x0010000000154631
- (void)_launchInCallApplicationForAnsweringCallIfNecessary:(id)arg1;	// IMP=0x001000000015462b
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x0010000000154456
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x001000000015423e
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x0010000000154238
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x00100000001540e1
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x0010000000153f0d
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x0010000000153dba
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x001000000015354f
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x00100000001532cb
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x0010000000153224
- (void)_requestCallStateFromHost;	// IMP=0x001000000015321e
- (void)_handleRelayCallingChanged;	// IMP=0x0010000000152c91
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x00100000001528a0
- (void)_mediaServicesWereReset:(id)arg1;	// IMP=0x001000000015274c
- (void)dealloc;	// IMP=0x0010000000152669
- (void)invalidate;	// IMP=0x001000000015262c
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2;	// IMP=0x00100000001504b0
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000015044c

// Remaining properties
// Error: Property attributes should begin with the type ('T') attribute, property name: debugDescription
// Property attributes: (null)

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

