//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKKSKeychainBackedKey, NSData, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

@interface CKKSKey
{
    _Bool _currentkey;	// 8 = 0x8
    NSString *_uuid;	// 16 = 0x10
    NSString *_parentKeyUUID;	// 24 = 0x18
    NSString<SecCKKSKeyClass> *_keyclass;	// 32 = 0x20
    NSString<SecCKKSProcessedState> *_state;	// 40 = 0x28
    CKKSKeychainBackedKey *_keycore;	// 48 = 0x30
    NSData *_wrappedKeyDataBackingStore;	// 56 = 0x38
}

+ (_Bool)intransactionRecordDeleted:(id)arg1 contextID:(id)arg2 error:(id *)arg3;	// IMP=0x0040000000105ba5
+ (_Bool)intransactionRecordChanged:(id)arg1 contextID:(id)arg2 resync:(_Bool)arg3 flagHandler:(id)arg4 error:(id *)arg5;	// IMP=0x001000000010513a
+ (id)loadFromProtobuf:(id)arg1 contextID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000104e28
+ (id)countsByClassWithContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000104c34
+ (id)countsWithContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001049d1
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00100000001046ae
+ (id)sqlColumns;	// IMP=0x00100000001046a1
+ (id)sqlTable;	// IMP=0x0010000000104694
+ (id)localKeysForContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000104515
+ (id)remoteKeysForContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000104396
+ (id)allKeysForContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x001000000010422d
+ (id)currentKeysForClass:(id)arg1 contextID:(id)arg2 state:(id)arg3 zoneID:(id)arg4 error:(id *)arg5;	// IMP=0x001000000010401c
+ (id)currentKeyForClass:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000103f34
+ (id)selfWrappedKeysForContextID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000103d4f
+ (id)tryFromDatabaseAnyState:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000103bac
+ (id)tryFromDatabase:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00100000001039f7
+ (id)fromDatabaseAnyState:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000103854
+ (id)fromDatabase:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x001000000010369f
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x0010000000103373
+ (id)randomKeyWrappedBySelf:(id)arg1 contextID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001032d5
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001031b7
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x001000000010312b
+ (id)loadKeyWithUUID:(id)arg1 contextID:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x001000000010306b
- (void).cxx_destruct;	// IMP=0x0020000000102ff6
// Error: Property attributes should begin with the type ('T') attribute, property name: wrappedKeyDataBackingStore
// Property attributes: (null)

@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) NSString<SecCKKSKeyClass> *keyclass; // @synthesize keyclass=_keyclass;
@property(retain) NSString *parentKeyUUID; // @synthesize parentKeyUUID=_parentKeyUUID;
@property(retain) NSString *uuid; // @synthesize uuid=_uuid;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x0010000000102cad
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0010000000102c1a
- (id)sqlValues;	// IMP=0x00100000001027e1
- (id)whereClauseToFindSelf;	// IMP=0x0010000000102686
- (id)description;	// IMP=0x0010000000102527
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x0010000000102088
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x0010000000101d8b
- (void)setFromCKRecord:(id)arg1;	// IMP=0x0010000000101a48
- (id)CKRecordName;	// IMP=0x0010000000101a36
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x0010000000101793
- (_Bool)deleteKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x0010000000101711
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x001000000010168f
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00100000001015fa
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x0010000000101573
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001014a0
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000001013cd
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000101317
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000101261
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00100000001011b7
- (_Bool)tlkMaterialPresentOrRecoverableViaTLKShareForContextID:(id)arg1 forTrustStates:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000100bde
- (_Bool)validTLK:(id *)arg1;	// IMP=0x0010000000100a36
- (_Bool)unwrapViaTLKSharesTrustedBy:(id)arg1 contextID:(id)arg2 error:(id *)arg3;	// IMP=0x001000000010044e
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x0010000000100011
- (id)ensureKeyLoadedForContextID:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000ffd67
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00100000000ffa3e
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000ff889
- (_Bool)wrapsSelf;	// IMP=0x00100000000ff815
@property(readonly) NSString *zoneName;
@property(readonly) NSData *wrappedKeyData;
- (id)getKeychainBackedKey:(id *)arg1;	// IMP=0x00100000000ff309
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000000ff058
- (void)dealloc;	// IMP=0x00100000000ff029
- (id)initWithKeyCore:(id)arg1 contextID:(id)arg2 state:(id)arg3 currentkey:(_Bool)arg4;	// IMP=0x00100000000fee5e
- (id)initWithWrappedKeyData:(id)arg1 contextID:(id)arg2 uuid:(id)arg3 parentKeyUUID:(id)arg4 keyclass:(id)arg5 state:(id)arg6 zoneID:(id)arg7 encodedCKRecord:(id)arg8 currentkey:(long long)arg9;	// IMP=0x00100000000fed18
- (id)initSelfWrappedWithAESKey:(id)arg1 contextID:(id)arg2 uuid:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00100000000feb06
- (id)init;	// IMP=0x00100000000fead7

@end

