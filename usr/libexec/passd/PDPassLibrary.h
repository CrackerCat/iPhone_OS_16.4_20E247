//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class MISSING_TYPE, NSMutableArray, NSString, PDAccountManager, PDAppletSubcredentialManager, PDAssertionManager, PDCardFileManager, PDDatabaseManager, PDDefaultPassManager, PDDeviceRegistrationServiceCoordinator, PDExpressPassManager, PDExpressTransitUpgradeController, PDISO18013Manager, PDIssuerBindingManager, PDPaymentWebServiceCoordinator, PDPushProvisioningManager, PDRelevantPassProvider, PDRemoteInterfacePresenter, PDSpotlightIndexer, PDUserNotificationManager, PDWebServicesCoordinator, PKEntitlementWhitelist, PKIDSManager, PKSecureElement, PKUsageNotificationServer;
@protocol PDPassLibraryDelegate;

@interface PDPassLibrary : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    struct os_unfair_lock_s _lock;	// 16 = 0x10
    NSMutableArray *_userNotifications;	// 24 = 0x18
    PKSecureElement *_secureElement;	// 32 = 0x20
    PDPaymentWebServiceCoordinator *_paymentWebServicesCoordinator;	// 40 = 0x28
    PDWebServicesCoordinator *_webServicesCoordinator;	// 48 = 0x30
    PDCardFileManager *_cardFileManager;	// 56 = 0x38
    PDDatabaseManager *_databaseManager;	// 64 = 0x40
    PDExpressPassManager *_expressPassManager;	// 72 = 0x48
    PDUserNotificationManager *_userNotificationManager;	// 80 = 0x50
    MISSING_TYPE *_relevantPassProvider;	// 88 = 0x58
    PKUsageNotificationServer *_usageNotificationServer;	// 96 = 0x60
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 104 = 0x68
    PKIDSManager *_idsManager;	// 112 = 0x70
    PDSpotlightIndexer *_spotlightIndexer;	// 120 = 0x78
    PDExpressTransitUpgradeController *_expressUpgradeController;	// 128 = 0x80
    PDAccountManager *_accountManager;	// 136 = 0x88
    PDAppletSubcredentialManager *_subcredentialManager;	// 144 = 0x90
    PDPushProvisioningManager *_pushProvisioningManager;	// 152 = 0x98
    PDDefaultPassManager *_defaultPassManager;	// 160 = 0xa0
    PDAssertionManager *_assertionManager;	// 168 = 0xa8
    PDISO18013Manager *_isoManager;	// 176 = 0xb0
    PDIssuerBindingManager *_issuerBindingManager;	// 184 = 0xb8
    PDDeviceRegistrationServiceCoordinator *_deviceRegistrationServiceCoordinator;	// 192 = 0xc0
    id <PDPassLibraryDelegate> _delegate;	// 200 = 0xc8
}

- (void).cxx_destruct;	// IMP=0x002000000006438d
@property(nonatomic) __weak id <PDPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PDDeviceRegistrationServiceCoordinator *deviceRegistrationServiceCoordinator; // @synthesize deviceRegistrationServiceCoordinator=_deviceRegistrationServiceCoordinator;
@property(retain, nonatomic) PDIssuerBindingManager *issuerBindingManager; // @synthesize issuerBindingManager=_issuerBindingManager;
@property(retain, nonatomic) PDISO18013Manager *isoManager; // @synthesize isoManager=_isoManager;
@property(retain, nonatomic) PDAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDExpressTransitUpgradeController *expressUpgradeController; // @synthesize expressUpgradeController=_expressUpgradeController;
@property(retain, nonatomic) PDSpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain, nonatomic) PKIDSManager *idsManager; // @synthesize idsManager=_idsManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PKUsageNotificationServer *usageNotificationServer; // @synthesize usageNotificationServer=_usageNotificationServer;
@property(retain, nonatomic) PDRelevantPassProvider *relevantPassProvider; // @synthesize relevantPassProvider=_relevantPassProvider;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDWebServicesCoordinator *webServicesCoordinator; // @synthesize webServicesCoordinator=_webServicesCoordinator;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServicesCoordinator; // @synthesize paymentWebServicesCoordinator=_paymentWebServicesCoordinator;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
- (void)spotlightStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000063f03
- (void)spotlightResetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000063ce5
- (void)spotlightReindexContentWithIdentifiers:(id)arg1 acknowledgement:(CDUnknownBlockType)arg2;	// IMP=0x0010000000063b73
- (void)spotlightReindexAllContentWithAcknowledgement:(CDUnknownBlockType)arg1;	// IMP=0x0010000000063a30
- (void)forceImmediateRevocationCheck;	// IMP=0x001000000006395b
- (void)removeAllScheduledActivities;	// IMP=0x0010000000063743
- (void)pendingUserNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000063639
- (void)issueWalletUserNotificationWithTitle:(id)arg1 message:(id)arg2 forPassUniqueIdentifier:(id)arg3 customActionRoute:(id)arg4;	// IMP=0x0010000000063482
- (void)shuffleGroups:(int)arg1;	// IMP=0x001000000006339a
- (void)noteAppleAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062e41
- (void)introduceDatabaseIntegrityProblem;	// IMP=0x0010000000062d76
- (void)getDiffForPassUpdateUserNotificationWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062c28
- (_Bool)_writePass:(id)arg1 withSettings:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0010000000062b84
- (_Bool)_writePass:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000062941
- (unsigned long long)_addPassesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x0010000000062575
- (void)_addPasses:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062428
- (void)_getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062334
- (_Bool)_entitledForPassTypeID:(id)arg1 teamID:(id)arg2 associatedPassTypeIdentifiers:(id)arg3 associatedApplicationIdentifiers:(id)arg4 forActions:(unsigned long long)arg5;	// IMP=0x001000000006215e
- (_Bool)_entitledForPassType:(unsigned long long)arg1 uniqueIdentifier:(id)arg2 actions:(unsigned long long)arg3;	// IMP=0x0010000000061fed
- (_Bool)_entitledForUniqueID:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x0010000000061fce
- (_Bool)_entitledForObject:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x0010000000061e5e
- (id)_entitlementFilteredPasses:(id)arg1;	// IMP=0x0010000000061d47
- (void)_sanitizePasses:(id)arg1;	// IMP=0x0010000000061c15
- (id)_sanitizePassIfNeeded:(id)arg1;	// IMP=0x0010000000061ba1
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x0010000000061b0c
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x0010000000061a7e
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;	// IMP=0x00100000000619f0
- (void)contactlessInterfaceDidPresentFromSource:(long long)arg1;	// IMP=0x0010000000061962
- (void)supportsSearchForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000616f3
- (void)presentIssuerBindingFlowForIssuerData:(id)arg1 signature:(id)arg2 orientation:(id)arg3;	// IMP=0x00100000000616c7
- (void)usingSynchronousProxy:(_Bool)arg1 requestIssuerBoundPassesWihBindingWithData:(id)arg2 automaticallyProvision:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000614d3
- (void)invalidateVehicleConnectionSessionIdentifier:(id)arg1;	// IMP=0x00100000000613de
- (void)sendRKEPassThroughMessage:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000061209
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000610eb
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000060f1f
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000060c12
- (void)supportsDisbursements:(CDUnknownBlockType)arg1;	// IMP=0x00100000000609cf
- (void)usingSynchronousProxy:(_Bool)arg1 fetchAppletSubCredentialForPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006005b
- (void)usingSynchronousProxy:(_Bool)arg1 generateTransactionKeyWithReaderIdentifier:(id)arg2 readerPublicKey:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005fbe2
- (void)canAddHomeKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005f3f4
- (void)canAddCarKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005f24a
- (void)canShareShareableSecureElementPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005f106
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005ebb9
- (void)_setBackupPassbookDeletedState:(id)arg1;	// IMP=0x001000000005ea94
- (void)_setBackupDefaultPaymentPassState:(id)arg1;	// IMP=0x001000000005e981
- (void)prepareForBackupRestoreWithExistingPreferencesData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e8b1
- (void)setBackupMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e4c2
- (void)backupMetadataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005e053
- (void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005de20
- (void)usingSynchronousProxy:(_Bool)arg1 longTermPrivacyKeyForCredentialGroupIdentifier:(id)arg2 reuseExisting:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005dc46
- (void)usingSynchronousProxy:(_Bool)arg1 addISO18013Blobs:(id)arg2 cardType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005da6c
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x001000000005d84c
- (void)usingSynchronousProxy:(_Bool)arg1 generateISOEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d689
- (void)usingSynchronousProxy:(_Bool)arg1 generateSEEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d4c8
- (void)usingSynchronousProxy:(_Bool)arg1 signWithFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 challenge:(id)arg5 publicKeyIdentifier:(id)arg6 externalizedAuth:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x001000000005d185
- (void)usingSynchronousProxy:(_Bool)arg1 checkFidoKeyPresenceForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000005cf83
- (void)usingSynchronousProxy:(_Bool)arg1 createFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 challenge:(id)arg4 externalizedAuth:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000005cd0b
- (void)signData:(id)arg1 forPassUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005c525
- (void)migrateDataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c416
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c2d3
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c185
- (void)recomputeRelevantPassesWithSearchMode:(long long)arg1;	// IMP=0x001000000005c0c9
- (void)personalizePassWithUniqueIdentifier:(id)arg1 contact:(id)arg2 personalizationToken:(id)arg3 requiredPersonalizationFields:(unsigned long long)arg4 personalizationSource:(unsigned long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005befd
- (void)updateObjectWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005bdbb
- (void)resetApplePayWithDiagnosticReason:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005bc44
- (void)removePassesOfType:(unsigned long long)arg1 withDiagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005baf4
- (void)recoverPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005b95b
- (void)removePassesWithUniqueIDs:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005b603
- (void)removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005b42d
- (void)usingSynchronousProxy:(_Bool)arg1 enableExpressForPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005afe4
- (void)usingSynchronousProxy:(_Bool)arg1 containsPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005ae09
- (void)usingSynchronousProxy:(_Bool)arg1 replaceUnsignedPassWithDataFileDescriptor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005aa73
- (void)usingSynchronousProxy:(_Bool)arg1 availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005a25f
- (void)usingSynchronousProxy:(_Bool)arg1 provisionHomeKeyPassForSerialNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000058db2
- (void)usingSynchronousProxy:(_Bool)arg1 addUnsignedPassesWithDataFileDescriptors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000058421
- (void)_usingSynchronousProxy:(_Bool)arg1 addPassesWithEnumerator:(CDUnknownBlockType)arg2 estimatedNumberOfPasses:(unsigned long long)arg3 osTransaction:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000057e10
- (void)usingSynchronousProxy:(_Bool)arg1 addPassesContainer:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000057b1e
- (void)addPassesWithData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000576a9
- (void)noteObjectSharedWithUniqueID:(id)arg1;	// IMP=0x001000000005756b
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)arg1;	// IMP=0x001000000005741d
- (void)setSortingState:(long long)arg1 forObjectWithUniqueID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000057287
- (void)updateSettings:(unsigned long long)arg1 forObjectWithUniqueID:(id)arg2;	// IMP=0x001000000005715a
- (void)usingSynchronousProxy:(_Bool)arg1 getImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 suffix:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000056f6f
- (void)getImageSetForUniqueID:(id)arg1 ofType:(long long)arg2 displayProfile:(id)arg3 suffix:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000056e3d
- (void)usingSynchronousProxy:(_Bool)arg1 getCachedImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 displayTraits:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000056c52
- (void)usingSynchronousProxy:(_Bool)arg1 getContentForUniqueID:(id)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000056ae1
- (void)getContentForUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000056ac7
- (void)_queue_replacePass:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005697e
- (void)replacePassWithPassData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000056854
- (void)getManifestHashAndSettingsForPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000056564
- (void)getRouteRelevantPassesForLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000055812
- (void)getPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000055746
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(id)arg2 uniqueID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000555ed
- (void)getDataForBundleResources:(id)arg1 objectUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000554bf
- (void)getDataForBundleResourceNamed:(id)arg1 withExtension:(id)arg2 objectUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000055381
- (void)getArchivedObjectWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000055272
- (void)passbookHasBeenDeletedWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000055232
- (void)isPassbookVisibleWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000551d6
- (void)hasSecureElementPassesOfType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005515e
- (void)isRemovingPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000550e3
- (void)passWithDPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000054fd5
- (void)passWithFPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000054ef9
- (void)usingSynchronousProxy:(_Bool)arg1 postUpgradesAvailableNotificationForMarket:(id)arg2 passUniqueID:(id)arg3;	// IMP=0x0010000000054beb
- (void)postUpgradedPassNotificationForMarket:(id)arg1 passUniqueID:(id)arg2;	// IMP=0x0010000000054941
- (void)checkForTransitNotification;	// IMP=0x0010000000054852
- (void)_getServiceProviderDataForPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000546ec
- (void)_getEncryptedServiceProviderDataForSecureElementPass:(id)arg1 publicKey:(id)arg2 scheme:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005455e
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000541f6
- (void)usingSynchronousProxy:(_Bool)arg1 getEncryptedServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000052e4a
- (void)supportedTransitPartnersForDigitalIssuance:(CDUnknownBlockType)arg1;	// IMP=0x00100000000524c9
- (void)sortedTransitPassesForAppletDataFormat:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000051b4b
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x0010000000050d54
- (void)expressTransitPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000050aec
- (void);	// IMP=0x0010000000050a00
- (void)defaultPaymentPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000050830
- (void)countPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000506de
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000504b2
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005044f
- (id)_filteredPasses:(id)arg1 forApplicationIdentifier:(id)arg2;	// IMP=0x00100000000502f4
- (id)_filteredPasses:(id)arg1 forWebDomain:(id)arg2;	// IMP=0x0010000000050199
- (void)enabledValueAddedServicePassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000050005
- (void)usingSynchronousProxy:(_Bool)arg1 getManifestHashForPassWithUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004fd31
- (void)getMetadataForFieldWithProperties:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004fb6c
- (void)getPassUniqueIDsForAssociatedApplicationIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004f445
- (void)getPassesWithUniqueIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004f1d0
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004f00b
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004ee46
- (void)inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004ec88
- (void)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004eae3
- (id)_inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x001000000004e914
- (id)_inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x001000000004e645
- (void)_paymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 webPayment:(_Bool)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 withHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000004e095
- (void)_passesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x001000000004de5c
- (_Bool)_hasPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 paymentApplicationStates:(id)arg3;	// IMP=0x001000000004dd62
- (void)_hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x001000000004da7c
- (void)hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 isMultiTokensRequest:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000004da4b
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004d759
- (void)inAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004d4fa
- (void)hasRemoteLibraryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004d4a0
- (void)getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004d3aa
- (void)notifyPassUsedWithIdentifier:(id)arg1 fromSource:(long long)arg2;	// IMP=0x001000000004d328
- (void)sendUserEditedCatalog:(id)arg1;	// IMP=0x001000000004d1cf
- (void)usingSynchronousProxy:(_Bool)arg1 getPaymentPassesPendingActivationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004cf80
- (void)usingSynchronousProxy:(_Bool)arg1 getGroupsControllerSnapshotWithOptions:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004cc08
- (void)getGroupsControllerSnapshotWithOptions:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004cbee
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesAndCatalogOfPassTypes:(unsigned long long)arg2 limitResults:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004c92d
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004c910
- (void)isPaymentPassActivationAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004c8d0
- (void)canPresentPaymentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004babe
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)arg1 fromSource:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004b8e5
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004b882
- (void)openDigitalIssuanceUIForIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004b7fc
- (void)paymentPassWithAssociatedAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004b55d
- (void)presentPaymentSetupRequest:(id)arg1 orientation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000004b2f8
- (void)paymentSetupFeaturesForConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004ac59
- (_Bool)_isConfigurationValid:(id)arg1;	// IMP=0x001000000004aaf8
- (void)openPaymentUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000004a705
- (void)openWalletUIWithRelevantPass:(id)arg1;	// IMP=0x001000000004a52d
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPassWithUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004a43e
- (void)canAddFelicaPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004a3fb
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004a1d4
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesOfStyles:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000049fd9
- (void)getPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000049f12
- (void)getPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000049e51
- (void)sendCatalogChanged:(id)arg1;	// IMP=0x0010000000049dcf
- (void)sendPassRecovered:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000049c32
- (void)sendPassRemoved:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000049b0e
- (void)sendPassUpdated:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000049971
- (void)sendPassAdded:(id)arg1 catalog:(id)arg2;	// IMP=0x00100000000497d4
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000049796
- (id)remoteObjectProxy;	// IMP=0x0010000000049758
- (void)clearConnectionReference;	// IMP=0x0010000000049599
@property(readonly, nonatomic) _Bool willSanitizePasses;
- (void)dealloc;	// IMP=0x00100000000493bd
- (id)initWithConnection:(id)arg1;	// IMP=0x0010000000049320

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

