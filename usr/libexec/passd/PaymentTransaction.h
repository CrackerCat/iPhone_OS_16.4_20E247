//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface PaymentTransaction
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x00400000004819f0
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x00100000004818e4
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x00100000004817ba
+ (id)_propertySettersForMerchant;	// IMP=0x0010000000481260
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x001000000047ef2e
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x001000000047ea2d
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x001000000047cc9a
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x001000000047cc83
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x001000000047ca9d
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x001000000047ca03
+ (id)_predicateForTransactionFundingSourceType:(long long)arg1;	// IMP=0x001000000047c990
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x001000000047c8b8
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x001000000047c64f
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x001000000047c350
+ (id)_predicateForPANIdentifier:(id)arg1;	// IMP=0x001000000047c32d
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x001000000047c30a
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x001000000047c2e7
+ (id)_predicateForNoWorldRegion;	// IMP=0x001000000047c2c7
+ (id)_predicateForWorldRegion;	// IMP=0x001000000047c2a7
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x001000000047ba46
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x001000000047b707
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x001000000047b5c2
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x001000000047b47d
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x000000000047b40a
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x001000000047b2c0
+ (id)_predicateForMapsMatch;	// IMP=0x001000000047b1bc
+ (id)_predicateForIsProcessedByTransactionProcessor;	// IMP=0x001000000047b075
+ (id)_predicateForHasCityAndCountry;	// IMP=0x001000000047af71
+ (id)_predicateForHasLocation;	// IMP=0x001000000047af51
+ (id)_predicateForHasPOIMatch;	// IMP=0x001000000047af31
+ (id)_predicateForNoMapsMatch;	// IMP=0x001000000047ae2d
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x001000000047adba
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x001000000047ad47
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x001000000047acd4
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x001000000047ac61
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x001000000047ac3e
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x001000000047a9d0
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x001000000047a95d
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x001000000047a8ea
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x001000000047a6c9
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x001000000047a6a6
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x001000000047a683
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x001000000047a660
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x001000000047a63d
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x001000000047a61a
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x001000000047a5f7
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x001000000047a5d4
+ (id)_predicateForMapsBrandIdentifiers:(id)arg1;	// IMP=0x001000000047a5b1
+ (id)_predicateForMapsIdentifiers:(id)arg1;	// IMP=0x001000000047a58e
+ (id)_predicateForMerchantIdentifiers:(id)arg1;	// IMP=0x001000000047a56b
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x001000000047a548
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x001000000047a4d5
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x001000000047a4b2
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x001000000047a48f
+ (id)_predicateForMerchantName:(id)arg1;	// IMP=0x001000000047a46c
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x001000000047a3f9
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x001000000047a378
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x001000000047a1c8
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x0010000000479efb
+ (id)_predicateForUnansweredQuestions;	// IMP=0x0010000000479d21
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x0010000000479cae
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x0010000000479c8b
+ (id)_predicateForRedemptionType:(unsigned long long)arg1;	// IMP=0x0010000000479c18
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x0010000000479ab7
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x0010000000479a94
+ (id)_predicateForAdjustmentType:(long long)arg1;	// IMP=0x0010000000479a21
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x00100000004799fe
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00100000004799db
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x0010000000479953
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x00100000004798d2
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x0010000000479851
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x00100000004797d0
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x001000000047974f
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x00100000004796ce
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x001000000047964d
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x001000000047940c
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x0010000000479222
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x0010000000479101
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x0010000000478f9e
+ (id)_predicateForPID:(id)arg1;	// IMP=0x0010000000478f7b
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x0010000000478f08
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x0010000000478eb2
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x0010000000478c93
+ (id)_predicateForTransactionArchivePID:(long long)arg1;	// IMP=0x0010000000478c20
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x0010000000478bad
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000478b2d
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000478aad
+ (id)authenticationContextFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0010000000478972
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0010000000477a52
+ (id)merchantFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x001000000047747e
+ (unsigned long long)suppressionBehaviorForTransactionSourceIdentifier:(id)arg1 serviceIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x001000000047473c
+ (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)arg1 currencyCode:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x001000000047012c
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x001000000046fed0
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x001000000046fa9c
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x001000000046fa10
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 fromPID:(long long)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000046f399
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000046f373
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x001000000046f1c5
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x001000000046ee85
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x001000000046ecf8
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x001000000046ebf7
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x001000000046e956
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x001000000046e8e5
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x001000000046e743
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000046e5bc
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x001000000046e549
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x001000000046e526
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x001000000046e36e
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x001000000046e347
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x001000000046dd53
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x001000000046d631
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x001000000046d373
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x001000000046d2bc
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x001000000046d1c3
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x001000000046cfc5
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 redeemed:(_Bool)arg4 withRedemptionType:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7;	// IMP=0x001000000046ca7a
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x001000000046c8e1
+ (id)predicateForRequest:(id)arg1;	// IMP=0x001000000046b3b5
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x001000000046b2ef
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x001000000046b0ba
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x001000000046b022
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x001000000046ae70
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000046ab93
+ (id)transactionServiceIdentifiersInDatabase:(id)arg1 withTransactionType:(long long)arg2 withPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 startDate:(id)arg7 endDate:(id)arg8;	// IMP=0x001000000046a6c7
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x001000000046a320
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x0010000000469f79
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 inDatabase:(id)arg4;	// IMP=0x0010000000469bb3
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 forPeerPaymentSubtype:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x00100000004698d8
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000469628
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x0010000000469306
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x001000000046916d
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000468fd2
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000468e37
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 limit:(long long)arg7;	// IMP=0x0010000000468ae7
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00100000004687cc
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x00100000004685b0
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x001000000046840e
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x0010000000468372
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x0010000000467f43
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x0010000000467bab
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00100000004679d3
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000467802
+ (id)transactionsForAdjustmentType:(long long)arg1 limit:(long long)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000467734
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x001000000046764d
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x00100000004674b5
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000466a26
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x0010000000466785
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x0010000000466583
+ (id)mostRecentActiveTransactionInDatabase:(id)arg1;	// IMP=0x0010000000466237
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2;	// IMP=0x0010000000466187
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000465e72
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000465e4c
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2;	// IMP=0x0010000000465e37
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000465b22
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000465afc
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2;	// IMP=0x0010000000465ae7
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004657d2
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004657ac
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2;	// IMP=0x0010000000465797
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x00100000004656e5
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x0010000000465659
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00100000004655cd
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x0010000000465471
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x00100000004652e6
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x001000000046525a
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00100000004651ce
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004649f0
+ (id)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x0010000000464615
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000464587
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x001000000046449a
+ (void)addJoinClausesForProperty:(id)arg1 toJoins:(id)arg2;	// IMP=0x0010000000463c05
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x0010000000463b88
+ (id)databaseTable;	// IMP=0x0010000000463b7b
- (void)_createPaymentTransactionAuthentication;	// IMP=0x004000000047eec4
- (_Bool)_hasValidMerchantData;	// IMP=0x001000000047ee4c
- (id)_transactionSourceIdentifierObject;	// IMP=0x0010000000478a0f
- (id)transactionAuthenticationContext;	// IMP=0x0010000000478805
- (id)transactionAuthenticationResult;	// IMP=0x0010000000478661
- (long long)accountType;	// IMP=0x0010000000478616
- (id)passUniqueIdentifier;	// IMP=0x001000000047848e
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x0010000000478443
- (long long)transactionType;	// IMP=0x00100000004783f8
- (id)dbPaymentTransactionArchive;	// IMP=0x00100000004783ce
- (id)transactionSourceIdentifier;	// IMP=0x001000000047837e
- (id)transactionArchive;	// IMP=0x00100000004782f4
- (id)paymentApplication;	// IMP=0x001000000047825d
- (id)accountIdentifier;	// IMP=0x0010000000478244
- (id)allRecordTypesAndNames;	// IMP=0x00100000004781dc
- (id)serviceIdentifier;	// IMP=0x00100000004781c3
- (id)identifier;	// IMP=0x00100000004781aa
- (id)foreignExchangeInformation;	// IMP=0x0010000000477cf8
- (id)merchant;	// IMP=0x00100000004776b4
- (id)paymentTransaction;	// IMP=0x0010000000475be5
- (void)updateWithReleasedData:(id)arg1;	// IMP=0x0010000000475b4c
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x0010000000475aa9
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x0010000000475a06
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x001000000047596a
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x001000000047560b
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x00100000004752ac
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x001000000047522d
- (void)updateWithPaymentTransactionRewards:(id)arg1 rewardsInProgress:(id)arg2;	// IMP=0x0010000000475157
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x00100000004750d8
- (void)updateWithCommutePlanUnits:(id)arg1;	// IMP=0x0010000000475035
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x0010000000474f92
- (void)updateWithMerchant:(id)arg1;	// IMP=0x0010000000474a2b
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x00100000004749d1
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x00100000004746e2
- (void)updateWithPaymentTransactionSource:(id)arg1;	// IMP=0x00100000004743f8
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x00100000004719f1
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x00100000004717a9
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x001000000046fdc1
- (_Bool)deleteFromDatabase;	// IMP=0x0010000000464a96
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000461b74

@end

