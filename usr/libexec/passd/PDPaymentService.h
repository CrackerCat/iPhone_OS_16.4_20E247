//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class NSString, PDAccountManager, PDAppletSubcredentialManager, PDApplicationMessageManager, PDApplyManager, PDAuxiliaryCapabilityManager, PDBarcodeCredentialManager, PDCardFileManager, PDCloudStoreNotificationCoordinator, PDDatabaseManager, PDDefaultPassManager, PDDevicePasscodeManager, PDExpressPassManager, PDFamilyCircleManager, PDISO18013Manager, PDIssuerBindingManager, PDMapsBrandAndMerchantUpdater, PDNotificationServiceCoordinator, PDPaymentTransactionProcessor, PDPaymentUserCommunicationManager, PDPaymentWebServiceCoordinator, PDPeerPaymentWebServiceCoordinator, PDPushNotificationManager, PDPushProvisioningManager, PDRemoteInterfacePresenter, PDSharingManager, PDTransactionAuthenticationManager, PDTransactionReceiptFileManager, PDTransitStateManager, PDUserNotificationManager, PKEntitlementWhitelist, PKFieldDetector, PKSecureElement, PKSharingIDSManager;
@protocol PKTapToRadarDelegate;

@interface PDPaymentService : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    _Bool _gatheringAllTransactions;	// 16 = 0x10
    PDNotificationServiceCoordinator *_notificationServiceCoordinator;	// 24 = 0x18
    PDCloudStoreNotificationCoordinator *_cloudStoreNotificationCoordinator;	// 32 = 0x20
    PDPeerPaymentWebServiceCoordinator *_peerPaymentWebServicesCoordinator;	// 40 = 0x28
    PDPaymentWebServiceCoordinator *_paymentWebServiceCoordinator;	// 48 = 0x30
    PDFamilyCircleManager *_familyMemberManager;	// 56 = 0x38
    PDPaymentTransactionProcessor *_paymentTransactionProcessor;	// 64 = 0x40
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 72 = 0x48
    PDDatabaseManager *_databaseManager;	// 80 = 0x50
    PDExpressPassManager *_expressPassManager;	// 88 = 0x58
    PDTransitStateManager *_transitStateManager;	// 96 = 0x60
    PDUserNotificationManager *_userNotificationManager;	// 104 = 0x68
    PKFieldDetector *_fieldDetector;	// 112 = 0x70
    PKSecureElement *_secureElement;	// 120 = 0x78
    PDDefaultPassManager *_defaultPassManager;	// 128 = 0x80
    PDPushNotificationManager *_pushNotificationManager;	// 136 = 0x88
    PDDevicePasscodeManager *_devicePasscodeManager;	// 144 = 0x90
    PDApplyManager *_applyManager;	// 152 = 0x98
    PDAccountManager *_accountManager;	// 160 = 0xa0
    PDAppletSubcredentialManager *_subcredentialManager;	// 168 = 0xa8
    PDCardFileManager *_cardFileManager;	// 176 = 0xb0
    PDMapsBrandAndMerchantUpdater *_mapsBrandAndMerchantUpdater;	// 184 = 0xb8
    PDPushProvisioningManager *_pushProvisioningManager;	// 192 = 0xc0
    PDIssuerBindingManager *_issuerBindingManager;	// 200 = 0xc8
    PDBarcodeCredentialManager *_barcodeCredentialManager;	// 208 = 0xd0
    PDTransactionAuthenticationManager *_transactionAuthenticationManager;	// 216 = 0xd8
    id <PKTapToRadarDelegate> _tapToRadarDelegate;	// 224 = 0xe0
    PDTransactionReceiptFileManager *_transactionReceiptFileManager;	// 232 = 0xe8
    PKSharingIDSManager *_idsSharingManager;	// 240 = 0xf0
    PDISO18013Manager *_iso18013Manager;	// 248 = 0xf8
    PDSharingManager *_sharingManager;	// 256 = 0x100
    PDAuxiliaryCapabilityManager *_auxiliaryCapabilityManager;	// 264 = 0x108
    PDApplicationMessageManager *_applicationMessageManager;	// 272 = 0x110
    PDPaymentUserCommunicationManager *_paymentUserCommunicationManager;	// 280 = 0x118
}

- (void).cxx_destruct;	// IMP=0x0020000000319aa4
@property(retain, nonatomic) PDPaymentUserCommunicationManager *paymentUserCommunicationManager; // @synthesize paymentUserCommunicationManager=_paymentUserCommunicationManager;
@property(retain, nonatomic) PDApplicationMessageManager *applicationMessageManager; // @synthesize applicationMessageManager=_applicationMessageManager;
@property(retain, nonatomic) PDAuxiliaryCapabilityManager *auxiliaryCapabilityManager; // @synthesize auxiliaryCapabilityManager=_auxiliaryCapabilityManager;
@property(retain, nonatomic) PDSharingManager *sharingManager; // @synthesize sharingManager=_sharingManager;
@property(retain, nonatomic) PDISO18013Manager *iso18013Manager; // @synthesize iso18013Manager=_iso18013Manager;
@property(retain, nonatomic) PKSharingIDSManager *idsSharingManager; // @synthesize idsSharingManager=_idsSharingManager;
@property(retain, nonatomic) PDTransactionReceiptFileManager *transactionReceiptFileManager; // @synthesize transactionReceiptFileManager=_transactionReceiptFileManager;
@property(nonatomic) __weak id <PKTapToRadarDelegate> tapToRadarDelegate; // @synthesize tapToRadarDelegate=_tapToRadarDelegate;
@property(retain, nonatomic) PDTransactionAuthenticationManager *transactionAuthenticationManager; // @synthesize transactionAuthenticationManager=_transactionAuthenticationManager;
@property(retain, nonatomic) PDBarcodeCredentialManager *barcodeCredentialManager; // @synthesize barcodeCredentialManager=_barcodeCredentialManager;
@property(retain, nonatomic) PDIssuerBindingManager *issuerBindingManager; // @synthesize issuerBindingManager=_issuerBindingManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDMapsBrandAndMerchantUpdater *mapsBrandAndMerchantUpdater; // @synthesize mapsBrandAndMerchantUpdater=_mapsBrandAndMerchantUpdater;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDApplyManager *applyManager; // @synthesize applyManager=_applyManager;
@property(retain, nonatomic) PDDevicePasscodeManager *devicePasscodeManager; // @synthesize devicePasscodeManager=_devicePasscodeManager;
@property(retain, nonatomic) PDPushNotificationManager *pushNotificationManager; // @synthesize pushNotificationManager=_pushNotificationManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
@property(retain, nonatomic) PKFieldDetector *fieldDetector; // @synthesize fieldDetector=_fieldDetector;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDTransitStateManager *transitStateManager; // @synthesize transitStateManager=_transitStateManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PDPaymentTransactionProcessor *paymentTransactionProcessor; // @synthesize paymentTransactionProcessor=_paymentTransactionProcessor;
@property(retain, nonatomic) PDFamilyCircleManager *familyMemberManager; // @synthesize familyMemberManager=_familyMemberManager;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServiceCoordinator; // @synthesize paymentWebServiceCoordinator=_paymentWebServiceCoordinator;
@property(retain, nonatomic) PDPeerPaymentWebServiceCoordinator *peerPaymentWebServicesCoordinator; // @synthesize peerPaymentWebServicesCoordinator=_peerPaymentWebServicesCoordinator;
@property(retain, nonatomic) PDCloudStoreNotificationCoordinator *cloudStoreNotificationCoordinator; // @synthesize cloudStoreNotificationCoordinator=_cloudStoreNotificationCoordinator;
@property(retain, nonatomic) PDNotificationServiceCoordinator *notificationServiceCoordinator; // @synthesize notificationServiceCoordinator=_notificationServiceCoordinator;
- (void)sendAllPassTransactions;	// IMP=0x001000000031927b
- (void)serviceSuspended;	// IMP=0x0010000000319275
- (void)serviceResumed;	// IMP=0x001000000031926f
- (void)credentialWasDeleted:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000319269
- (void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000319193
- (void)performProductActionRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000319057
- (void)productsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000318f22
- (void)productsWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000318de6
- (void)sendCredential:(id)arg1 forPaymentApplication:(id)arg2 didUpdateRangingSuspensionReasons:(unsigned long long)arg3;	// IMP=0x0010000000318cbe
- (void)sendSharesDidUpdateWithPaymentPassWithUniqueIdentifier:(id)arg1;	// IMP=0x0010000000318c3e
- (void)sendDidRecieveCredentialInvitation:(id)arg1;	// IMP=0x0010000000318bbe
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateCategoryVisualizationWithStyle:(long long)arg2;	// IMP=0x0010000000318b39
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateWithTransitProperties:(id)arg2;	// IMP=0x0010000000318a93
- (void)sendDidUpdateDefaultPaymentPassWithUniqueIdentifier:(id)arg1;	// IMP=0x00100000003189fe
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableTransactionService:(_Bool)arg2;	// IMP=0x0010000000318963
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableMessageService:(_Bool)arg2;	// IMP=0x00100000003188c8
- (void)sendTransactionSourceIdentifier:(id)arg1 didReceiveTransaction:(id)arg2;	// IMP=0x0010000000318822
- (void)sendTransactionSourceIdentifier:(id)arg1 didRemoveTransactionWithIdentifier:(id)arg2;	// IMP=0x001000000031877c
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateBalanceReminder:(id)arg2 forBalanceWithIdentifier:(id)arg3;	// IMP=0x00100000003186be
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceivePlanUpdate:(id)arg2;	// IMP=0x0010000000318618
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveBalanceUpdate:(id)arg2;	// IMP=0x0010000000318572
- (void)sendPassWithUniqueIdentifier:(id)arg1 didUpdateTiles:(id)arg2;	// IMP=0x00100000003184b7
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveMessage:(id)arg2;	// IMP=0x0010000000318411
- (void)sendDidUpdateApplicationMessages:(id)arg1;	// IMP=0x001000000031837c
- (void)sendPassWithUniqueIdentifier:(id)arg1 didReceiveValueAddedServiceTransaction:(id)arg2;	// IMP=0x00100000003182d6
- (void)setNFCPayloadState:(unsigned long long)arg1 forPass:(id)arg2;	// IMP=0x001000000031823b
- (void)simulateDeviceAccessory;	// IMP=0x00100000003181fa
- (void)simulateEnableBiometricsForPass:(id)arg1;	// IMP=0x00100000003181a9
- (void)requestRadarIfAuthenticationLockedOut;	// IMP=0x0010000000318168
- (void)merchantForPassUniqueIdentifier:(id)arg1 withAuxiliaryPassInformationItem:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000318072
- (void)updateCardholderNameFromSafari:(id)arg1 forVirtualCardWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000317f82
- (void)updateDateLastUsedBySafari:(id)arg1 forVirtualCardWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000317e92
- (void)paymentPassForVPANID:(id)arg1 andLoadImages:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000317cca
- (void)_vpanCardCredentialsForVPANID:(id)arg1 authorization:(id)arg2 merchantHost:(id)arg3 regenerate:(_Bool)arg4 hasRefreshedBAACertificate:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000316d68
- (void)vpanCardCredentialsForVPANID:(id)arg1 authorization:(id)arg2 merchantHost:(id)arg3 regenerate:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000316a24
- (void)vpanCardCredentialsForVPANID:(id)arg1 authorization:(id)arg2 merchantHost:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000316a02
- (void)regenerateVPANCardCredentialsForVPANID:(id)arg1 authorization:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003169da
- (void)_vpanVirtualCards:(CDUnknownBlockType)arg1;	// IMP=0x0010000000316586
- (void)vpanVirtualCards:(CDUnknownBlockType)arg1;	// IMP=0x0010000000316314
- (void)hasActiveExternallySharedPasses:(CDUnknownBlockType)arg1;	// IMP=0x00100000003156b3
- (void)sharingCapabilitiesForPassIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003155e2
- (void)hasSharesForPassIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000315552
- (void)displayableSharesForPassIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003154c2
- (void)displayableEntitlementsForPassIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000315432
- (void)usingSynchronousProxy:(_Bool)arg1 entitlementsForPassIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000315315
- (void)pendingShareActivationForShareIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003151cf
- (void)didReceiveActivationCodeFailureForCredentialIdentifier:(id)arg1 attemptsRemaining:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000031507a
- (void)sendSharingMessageTo:(id)arg1 message:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000314eb0
- (void)revokeShareForPassIdentifier:(id)arg1 share:(id)arg2 shouldCascade:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000314df2
- (void)updateShareForPassIdentifier:(id)arg1 share:(id)arg2 authorization:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000314d1f
- (void)createSingleUseShareURLWithMessage:(id)arg1 timeToLive:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000314c67
- (void)deleteSharingMessage:(id)arg1;	// IMP=0x0010000000314bef
- (void)cacheSharingMessageFromMailboxAddress:(id)arg1 message:(id)arg2;	// IMP=0x0010000000314b5a
- (void)acceptCarKeyShareForMessage:(id)arg1 activationCode:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000314a93
- (void)createShareForPartialShareInvitation:(id)arg1 authorization:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003149e1
- (void)prewarmCreateShareForPassIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000314951
- (void)relinquishInvitation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000314818
- (void)retrieveShareInvitationForMailboxAddress:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000314768
- (void)checkInvitationStatusForMailboxAddress:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003146b8
- (void)processSharingCLICommands:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000314589
- (void)didReceiveDeviceSharingCapabilities:(id)arg1 forHandle:(id)arg2;	// IMP=0x0010000000314503
- (void)updateNotificationForProductIdentifier:(id)arg1 configuration:(id)arg2 localizedNotificationTitle:(id)arg3 localizedNotificationMessage:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000313a68
- (void)provisionIdentityPassWithPassMetadata:(id)arg1 targetDeviceIdentifier:(id)arg2 credentialIdentifier:(id)arg3 attestations:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000312712
- (void)prepareIdentityProvisioningForTargetDeviceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000311dfd
- (void)photosForFamilyMembersWithDSIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000311d27
- (void)pendingFamilyMembersIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000311c70
- (void)familyMembersIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000311b9b
- (void)fieldDetectorDidExitField:(id)arg1;	// IMP=0x0010000000311b37
- (void)fieldDetectorDidEnterField:(id)arg1 withProperties:(id)arg2;	// IMP=0x0010000000311ab7
- (void)submitBarcodePaymentEvent:(id)arg1 forPassUniqueIdentifier:(id)arg2 sessionExchangeToken:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000031185e
- (void)submitBarcodePaymentEvent:(id)arg1 forPassUniqueIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000031164f
- (void)submitTransactionSignatureForTransactionIdentifier:(id)arg1 sessionExchangeToken:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003113b7
- (void)submitEncryptedPIN:(id)arg1 forTransactionIdentifier:(id)arg2 sessionExchangeToken:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000003110ec
- (void)submitEncryptedPIN:(id)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000310e54
- (void)submitUserConfirmation:(_Bool)arg1 forTransactionIdentifier:(id)arg2 sessionExchangeToken:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000310bbb
- (void)submitUserConfirmation:(_Bool)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000031094c
- (void)markAuthenticationCompleteForTransactionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000031078a
- (void)processedAuthenticationMechanism:(unsigned long long)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003105aa
- (void)retrievePINEncryptionCertificateForPassUniqueIdentifier:(id)arg1 sessionExchangeToken:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000310394
- (void)retrievePINEncryptionCertificateForPassUniqueIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003101cb
- (void)retrieveDecryptedBarcodeCredentialForPassUniqueIdentifier:(id)arg1 authorization:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030ff2f
- (void)retrieveDecryptedBarcodeCredentialForPassUniqueIdentifier:(id)arg1 authorization:(id)arg2 sessionExchangeToken:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000030fc60
- (void)fetchBarcodesForPassUniqueIdentifier:(id)arg1 sessionExchangeToken:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030f9c8
- (void)invalidateAuxiliaryCapabilityCertificatesForPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030f806
- (void)checkAllAuxiliaryRegistrationRequirements;	// IMP=0x001000000030f6e1
- (void)registerAuxiliaryCapabilityForPassUniqueIdentifier:(id)arg1 sessionExchangeToken:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030f44d
- (void)transactionTagsForTransactionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030f270
- (void)transactionReceiptForTransactionWithIdentifier:(id)arg1 updateIfNecessary:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030eeaf
- (void)deleteTransactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030ece3
- (void)storeTransactionReceiptData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030e9c7
- (void)transactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030e7c6
- (void)requiresUpgradedPasscodeWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030e542
- (void)enforceUpgradedPasscodePolicyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030e3aa
- (void)mapsMerchantWithIdentifier:(unsigned long long)arg1 resultProviderIdentifier:(int)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030e1dc
- (void)updateAllMapsBrandAndMerchantDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030db94
- (void)disbursementVoucherWithDisbursementSource:(unsigned long long)arg1 disbursementTarget:(unsigned long long)arg2 bundleIdentifier:(id)arg3 teamIdentifier:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000030d75a
- (void)passOwnershipTokenWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030d5f5
- (void)storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x001000000030d3b5
- (void)setDeviceUpgradeTasksContextBuildVersion:(id)arg1 upgradeTaskVersion:(long long)arg2 retryCount:(long long)arg3;	// IMP=0x001000000030d2b9
- (void)scheduleDeviceUpgradeTasksIfNecessaryWithRandomizeStartDate:(_Bool)arg1;	// IMP=0x001000000030d1c8
- (void)unscheduleDeviceUpgradeTaskActivity;	// IMP=0x001000000030d0e4
- (void)setDeviceCheckInContextBuildVersion:(id)arg1 outstandingAction:(long long)arg2 forRegion:(id)arg3;	// IMP=0x001000000030cfcd
- (void)performDeviceCheckInWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030ced1
- (void)redeemProvisioningSharingIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030cdb3
- (void)redeemPaymentShareableCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030cc92
- (void)prepareProvisioningTarget:(id)arg1 checkFamilyCircle:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030cb67
- (void)provideEncryptedPushProvisioningTarget:(id)arg1 sharingInstanceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030ca2d
- (void)statusForShareableCredentials:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030c90e
- (void)pushProvisioningSharingIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x001000000030c812
- (void)setPaymentApplicationRangingSuspensionReason:(unsigned long long)arg1 forPassUniqueIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030c695
- (void)rangingSuspensionReasonForCredential:(id)arg1 forPaymentApplicationID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030c542
- (void)didUpdateSharingInvitationWithIdentifier:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030c406
- (void)didReceiveSharingInvitationRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030c2d8
- (void)didReceiveSharingInvitationWithIdentifier:(id)arg1 fromOriginatorIDSHandle:(id)arg2 sharingSessionIdentifier:(id)arg3 metadata:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000030c151
- (void)finishedKeyExchangeForCredential:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030c018
- (void)sharingInvitationWasInvalidated:(id)arg1 withCredentialIdentifier:(id)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000030bea4
- (void)passSharesForCredentialIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030bd6e
- (void)credentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030bc43
- (void)canAcceptInvitation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030bae7
- (void)requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030b9c8
- (void)removeSharingInvitationWithIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030b8ae
- (void)removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030b76c
- (void)declineRelatedSharingInvitationsIfNecessary:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030b652
- (void)addPassShare:(id)arg1 onCredentialWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030b510
- (void)revokeCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030b3d7
- (void)registerCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030af19
- (void)updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000030addf
- (void)subcredentialInvitationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030acc1
- (void)addPlaceholderPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030a918
- (void)sendDeviceSharingCapabilitiesRequestForHandle:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030a72c
- (void)clearSafariCardImportNotificationHistoryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030a5de
- (void)clearSafariCardImportNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030a490
- (void)notifyForSafariCardImportWithCredentials:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030a337
- (void)notifyForSafariCardImportConsentWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000030a201
- (void)suggestPaymentSafariCredentialImport:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030a016
- (void)setAccountAttestationAnonymizationSalt:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000309efc
- (void)accountAttestationAnonymizationSaltWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000309e00
- (void)displayTapToRadarAlertForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000309d8b
- (void)_requestUpdatesForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x0010000000309abf
- (void)recomputeCategoryVisualizationMangitudesForPassUniqueID:(id)arg1 style:(long long)arg2;	// IMP=0x00100000003099cd
- (void)categoryVisualizationMagnitudesForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000309893
- (void)transactionsRequiringReviewForAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003097f7
- (void)submitTransactionAnswerForTransaction:(id)arg1 questionType:(unsigned long long)arg2 answer:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000030904c
- (void)submitDeleteRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308f32
- (void)submitTermsRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308e16
- (void)submitVerificationRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308cfa
- (void)submitDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308bde
- (void)submitApplyRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308ac2
- (void)featureApplicationWithReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003089a8
- (void)_updateApplicationsForType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030883e
- (void)featureApplicationsForAccountUserInvitationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000308659
- (void)featureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000308560
- (void)featureApplicationWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308446
- (void)updateFeatureApplicationsForAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000030832a
- (void)featureApplicationsForAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000308210
- (void)featureApplicationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000308116
- (void)augmentedProductForInstallmentConfiguration:(id)arg1 experimentDetails:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000307fdc
- (void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;	// IMP=0x0010000000307f5c
- (void)handleStandaloneTransaction:(long long)arg1 forCredentialIdentifier:(id)arg2 appletIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000307e1d
- (void)simulateExpressTransactionForPassUniqueIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000307c47
- (void)passbookUIServiceDidLaunch:(CDUnknownBlockType)arg1;	// IMP=0x0010000000307b52
- (void)userNotificationActionPerformed:(unsigned long long)arg1 applicationMessageContentIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000307a31
- (void)requestNotificationAuthorizationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000307949
- (void)requestNotificationAuthorizationIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000307861
- (void)removeProductsCache;	// IMP=0x0010000000307797
- (void)unscheduleDeviceCheckIn;	// IMP=0x001000000030774d
- (void)scheduleDeviceCheckInWithStartTimeOffset:(double)arg1;	// IMP=0x00100000003076f9
- (void)scheduleSetupReminders:(CDUnknownBlockType)arg1;	// IMP=0x00100000003073a0
- (void)consistencyCheckWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000307216
- (void)downloadAllPaymentPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000030708c
- (void)simulateNotificationOfType:(unsigned long long)arg1 userInfo:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003053d3
- (void)simulatePaymentPushTopic:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000030521a
- (void)initializeSecureElement:(CDUnknownBlockType)arg1;	// IMP=0x0010000000304f9f
- (void)initializeSecureElementIfNecessaryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000304dd8
- (void)defaultPaymentApplicationForPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000304c9f
- (void)setDefaultPaymentApplication:(id)arg1 forPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000304a43
- (void)insertOrUpdateValueAddedServiceTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentTransaction:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000003045b2
- (void)outstandingExpressTransactionState:(CDUnknownBlockType)arg1;	// IMP=0x0010000000304544
- (void)transitStateWithPassUniqueIdentifier:(id)arg1 paymentApplication:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000304489
- (void)processTransitTransactionEventWithHistory:(id)arg1 transactionDate:(id)arg2 forPaymentApplication:(id)arg3 withPassUniqueIdentifier:(id)arg4 expressTransactionState:(id)arg5;	// IMP=0x0010000000304210
- (void)sanitizeExpressPasses;	// IMP=0x00100000003041c1
- (void)removeMapsDataForTransactionWithIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2 issueReportIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000303f6b
- (void)insertOrUpdatePaymentTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentApplication:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000303b48
- (void)insertOrUpdatePaymentTransaction:(id)arg1 forTransactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003038aa
- (void)archiveMessageWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000003036f1
- (void)deleteAllMessagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000303538
- (void)deleteAllTransactionsForTransactionSourceIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000303205
- (void)deletePaymentTransactionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000030304c
- (void)setCommutePlanReminder:(id)arg1 forCommutePlanIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000302e17
- (void)commutePlanReminderForCommutePlanIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000302c16
- (void)setBalanceReminder:(id)arg1 forBalanceIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000302473
- (void)balanceReminderThresholdForBalanceIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000302272
- (void)plansForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000030204a
- (void)balancesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000301e22
- (void)messagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000301bf3
- (void)valueAddedServiceTransactionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000301a20
- (void)valueAddedServiceTransactionsForPaymentTransaction:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000030184d
- (void)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)arg1 limit:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000301665
- (void)mapsMerchantsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000003014aa
- (void)ambiguousTransactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003012be
- (void)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 transactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000003010a5
- (void)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000300eb9
- (void)passUniqueIdentifierForTransactionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000300ccd
- (void)transactionsForPredicate:(id)arg1 limit:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000300ae5
- (void)logoImageDataForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000300839
- (void)transactionsForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000300624
- (void)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)arg1 accountIdentifier:(id)arg2 redeemed:(_Bool)arg3 withRedemptionType:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000003003a6
- (void)installmentPlansWithTransactionReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000003001d3
- (void)installmentTransactionsForInstallmentPlanIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000300000
- (void)transactionWithReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002ffe14
- (void)transactionWithServiceIdentifier:(id)arg1 transactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002ffbfb
- (void)transactionSourceTypeForTransactionSourceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002ffa27
- (void)transactionWithTransactionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002ff83b
- (void)transactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2 limit:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000002ff66e
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000002ff4cd
- (void)pendingTransactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000002ff24c
- (void)approvedTransactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000002fefcb
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionType:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000002fed52
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withMerchantCategory:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000002fead9
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 matchingMerchant:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00100000002fe882
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withPeerPaymentCounterpartHandles:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00100000002fe62b
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000002fe3a1
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000002fe36c
- (void)hasTransactionsForTransactionSourceIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fe195
- (void)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000002fdf67
- (void)cashbackByPeriodForTransactionSourceIdentifiers:(id)arg1 withStartDate:(id)arg2 endDate:(id)arg3 calendar:(id)arg4 calendarUnit:(unsigned long long)arg5 type:(unsigned long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000002fdcf1
- (void)transactionCountByPeriodForRequest:(id)arg1 calendar:(id)arg2 unit:(unsigned long long)arg3 includePurchaseTotal:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000002fdabe
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000002fd422
- (void)usingSynchronousProxy:(_Bool)arg1 updateFinanceKitApplicationMessagesWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fd12f
- (void)usingSynchronousProxy:(_Bool)arg1 tilesForPassWithUniqueIdentifer:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fcc10
- (void)usingSynchronousProxy:(_Bool)arg1 removeApplicationMessagesWithKeys:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fc850
- (void)usingSynchronousProxy:(_Bool)arg1 removeApplicationMessageWithKey:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fc490
- (void)usingSynchronousProxy:(_Bool)arg1 tappedApplicationMessageWithKey:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fc0cc
- (void)usingSynchronousProxy:(_Bool)arg1 applicationMessagesWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fbc15
- (void)messagesAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fba1a
- (void)transactionsAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb822
- (void)usingSynchronousProxy:(_Bool)arg1 setSharedPaymentWebServiceContext:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fb605
- (void)usingSynchronousProxy:(_Bool)arg1 fetchSharedPaymentWebServiceContextWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb40c
- (void)simulateDefaultExpressTransitPassIdentifier:(id)arg1 forExpressMode:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fb1c9
- (void)isPassExpressWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb11f
- (void)removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb073
- (void)removeExpressPassesWithCardType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fafdf
- (void)setExpressWithPassInformation:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002faef4
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withReferenceExpressState:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fae0b
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fad40
- (void)usingSynchronousProxy:(_Bool)arg1 expressPassesInformationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fac7d
- (void)expressPassesInformationWithAutomaticSelectionTechnologyType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fabeb
- (void)expressPassesInformationWithCardType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fab59
- (void)expressPassInformationWithPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002faaaf
- (void)isExpressModeEnabledForRemotePassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002faa2e
- (void)setDefaultExpressFelicaTransitPassIdentifier:(id)arg1 withCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fa852
- (void)defaultPaymentPassIngestionSpecificIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000002fa56d
- (void)setDefaultPaymentPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fa355
- (void)defaultPaymentPassUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000002fa164
- (void)paymentDeviceFieldPropertiesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000002f9f62
- (void)familyCircleManagerDidUpdateFamilyMembers:(id)arg1;	// IMP=0x00100000002f9e62
- (void)applyManager:(id)arg1 didUpdateApplication:(id)arg2 oldApplication:(id)arg3;	// IMP=0x00100000002f9de2
- (void)applyManager:(id)arg1 didRemoveApplication:(id)arg2;	// IMP=0x00100000002f9d62
- (void)applyManager:(id)arg1 didAddApplication:(id)arg2;	// IMP=0x00100000002f9ce2
- (void)paymentWebServiceCoordinator:(id)arg1 didDownloadTransactionReceipt:(id)arg2 forTransactionWithIdentifier:(id)arg3;	// IMP=0x00100000002f9c3c
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000002f9a29
- (id)remoteObjectProxy;	// IMP=0x00100000002f99eb
- (void)dealloc;	// IMP=0x00100000002f999f
- (id)initWithConnection:(id)arg1;	// IMP=0x00100000002f9910

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

