//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXIndexMap, BRLTTable, NSArray, NSAttributedString, NSCondition, NSData, NSDictionary, NSMutableCharacterSet, NSString, SCRCTargetSelectorTimer, SCRCThreadKey, SCROBrailleClient, VOTElement, _KSTextReplacementClientStore, _VOTBrailleManagerStatus;

@interface VOTBrailleManager : NSObject
{
    VOTElement *_brailleElement;	// 8 = 0x8
    struct _NSRange _brailleDescriptionRange;	// 16 = 0x10
    struct _NSRange _brailleLineRange;	// 32 = 0x20
    long long _brailleLineOffset;	// 48 = 0x30
    SCRCTargetSelectorTimer *_hintTimer;	// 56 = 0x38
    unsigned long long _brailleElementIndex;	// 64 = 0x40
    _Bool _brailleEnabled;	// 72 = 0x48
    _Bool _usesBrailleSubstitutions;	// 73 = 0x49
    NSDictionary *_brailleSubstitutions;	// 80 = 0x50
    NSMutableCharacterSet *_delimiters;	// 88 = 0x58
    BRLTTable *_currentDefaultTable;	// 96 = 0x60
    BRLTTable *_currentSetTable;	// 104 = 0x68
    _VOTBrailleManagerStatus *_status;	// 112 = 0x70
    _Bool _hasActiveDisplay;	// 120 = 0x78
    _Bool _testingHasActiveDisplay;	// 121 = 0x79
    _Bool _testingKeyboardHelpOn;	// 122 = 0x7a
    AXIndexMap *_commands;	// 128 = 0x80
    id _rotorSelection;	// 136 = 0x88
    _Bool _shouldPreferPositionOverRotorSelection;	// 144 = 0x90
    int _primaryDisplayToken;	// 148 = 0x94
    _Bool _primaryDisplayIsBluetooth;	// 152 = 0x98
    SCROBrailleClient *_brailleClient;	// 160 = 0xa0
    NSCondition *_brailleClientConnectionCondition;	// 168 = 0xa8
    int _lastBraillePanDirection;	// 176 = 0xb0
    SCRCThreadKey *_threadKey;	// 184 = 0xb8
    unsigned int _toggledModifiers;	// 192 = 0xc0
    _KSTextReplacementClientStore *_textReplacementStore;	// 200 = 0xc8
    NSArray *_textReplacementEntries;	// 208 = 0xd0
    NSData *_testingAggregatedStatus;	// 216 = 0xd8
    SCRCTargetSelectorTimer *_updateRealtimeStatusTimer;	// 224 = 0xe0
    double _lastRealtimeUpdate;	// 232 = 0xe8
    _Bool _autoAdvanceEnabled;	// 240 = 0xf0
    int _cachedContractionMode;	// 244 = 0xf4
    _Bool _cachedAutoBrailleTranslationEnabled;	// 248 = 0xf8
    _Bool _braille2DInvert;	// 249 = 0xf9
    _Bool _testingBrailleElementLocked;	// 250 = 0xfa
    int _lastRefreshTrigger;	// 252 = 0xfc
    BRLTTable *_brailleTableFromSettings;	// 256 = 0x100
    VOTElement *_previousTouchContainer;	// 264 = 0x108
    VOTElement *_previousElement;	// 272 = 0x110
    NSString *_brailleSubstitutionLanguage;	// 280 = 0x118
    double _braille2DIntensity;	// 288 = 0x120
    double _braille2DZoom;	// 296 = 0x128
    double _lastUserInteractionTime;	// 304 = 0x130
    long long _bookCursorPosition;	// 312 = 0x138
    long long _trailingBookCursorPosition;	// 320 = 0x140
    SCROBrailleClient *_testingBrailleClient;	// 328 = 0x148
    NSArray *_testingTextShortcuts;	// 336 = 0x150
    double _threadWaitTime;	// 344 = 0x158
    CDUnknownBlockType _tableSetCallback;	// 352 = 0x160
    CDUnknownBlockType _elementSetCallback;	// 360 = 0x168
    CDUnknownBlockType _keypressCallback;	// 368 = 0x170
    CDUnknownBlockType _brailleStringSetCallback;	// 376 = 0x178
    struct CGPoint _braille2DOrigin;	// 384 = 0x180
}

+ (double)currentDefaultBrailleAlertTimeout;	// IMP=0x00400000000f9d99
+ (id)manager;	// IMP=0x00100000000f9d88
+ (void)initialize;	// IMP=0x00100000000f9d53
- (void).cxx_destruct;	// IMP=0x002000000010770d
@property(copy, nonatomic) CDUnknownBlockType brailleStringSetCallback; // @synthesize brailleStringSetCallback=_brailleStringSetCallback;
@property(copy, nonatomic) CDUnknownBlockType keypressCallback; // @synthesize keypressCallback=_keypressCallback;
@property(copy, nonatomic) CDUnknownBlockType elementSetCallback; // @synthesize elementSetCallback=_elementSetCallback;
@property(copy, nonatomic) CDUnknownBlockType tableSetCallback; // @synthesize tableSetCallback=_tableSetCallback;
@property(nonatomic) double threadWaitTime; // @synthesize threadWaitTime=_threadWaitTime;
@property(nonatomic) _Bool testingBrailleElementLocked; // @synthesize testingBrailleElementLocked=_testingBrailleElementLocked;
@property(retain, nonatomic) NSArray *testingTextShortcuts; // @synthesize testingTextShortcuts=_testingTextShortcuts;
@property(retain, nonatomic) SCROBrailleClient *testingBrailleClient; // @synthesize testingBrailleClient=_testingBrailleClient;
@property(nonatomic) int lastRefreshTrigger; // @synthesize lastRefreshTrigger=_lastRefreshTrigger;
@property(nonatomic) long long trailingBookCursorPosition; // @synthesize trailingBookCursorPosition=_trailingBookCursorPosition;
@property(nonatomic) long long bookCursorPosition; // @synthesize bookCursorPosition=_bookCursorPosition;
@property(readonly, nonatomic) struct _NSRange brailleLineRange; // @synthesize brailleLineRange=_brailleLineRange;
@property(nonatomic) double lastUserInteractionTime; // @synthesize lastUserInteractionTime=_lastUserInteractionTime;
@property(nonatomic) struct CGPoint braille2DOrigin; // @synthesize braille2DOrigin=_braille2DOrigin;
@property(nonatomic) _Bool braille2DInvert; // @synthesize braille2DInvert=_braille2DInvert;
@property(nonatomic) double braille2DZoom; // @synthesize braille2DZoom=_braille2DZoom;
@property(nonatomic) double braille2DIntensity; // @synthesize braille2DIntensity=_braille2DIntensity;
@property(readonly, nonatomic) NSArray *textReplacementEntries; // @synthesize textReplacementEntries=_textReplacementEntries;
@property(retain) NSString *brailleSubstitutionLanguage; // @synthesize brailleSubstitutionLanguage=_brailleSubstitutionLanguage;
@property(retain, nonatomic) VOTElement *previousElement; // @synthesize previousElement=_previousElement;
@property(retain, nonatomic) VOTElement *previousTouchContainer; // @synthesize previousTouchContainer=_previousTouchContainer;
@property(retain, nonatomic) BRLTTable *brailleTableFromSettings; // @synthesize brailleTableFromSettings=_brailleTableFromSettings;
@property(nonatomic) _Bool usesBrailleSubstitutions; // @synthesize usesBrailleSubstitutions=_usesBrailleSubstitutions;
@property(nonatomic) _Bool brailleEnabled; // @synthesize brailleEnabled=_brailleEnabled;
- (void)resetTestingAggregatedStatus;	// IMP=0x001000000010743b
- (id)testingAggregatedStatus;	// IMP=0x0010000000107410
- (_Bool)testingKeyboardHelpIsOn;	// IMP=0x0010000000107407
- (void)configureForUnitTesting;	// IMP=0x00100000001073b7
- (void)unitTestHandleBrailleKeypress:(id)arg1;	// IMP=0x00100000001073a5
- (struct _NSRange)rangeOfCellRepresentingCharacterAtIndex:(long long)arg1;	// IMP=0x0010000000107266
@property(readonly, nonatomic) NSAttributedString *testingMainAttributedString;
- (id)testingBrailleElement;	// IMP=0x001000000010723f
@property(readonly, nonatomic) unsigned long long testingBrailleElementIndex;
@property(nonatomic) _Bool testingHasActiveDisplay;
- (id)_localeIdentifierForTableIdentifier:(id)arg1;	// IMP=0x0010000000107094
- (id)_localeIdentifierForCurrentTable;	// IMP=0x001000000010707e
- (id)_tableIdentifierFromDefaultRotorItem:(id)arg1 forLocale:(id)arg2;	// IMP=0x0010000000106fd6
- (id)_defaultLanguageRotorItem;	// IMP=0x0010000000106e07
- (id)currentBrailleTableIdentifier;	// IMP=0x0010000000106cc4
- (void)handleBrailleStartEditing;	// IMP=0x0010000000106b4a
- (void)handleBrailleDidShowNextAnnouncement:(id)arg1;	// IMP=0x0010000000106ab2
- (void)handleBrailleDidShowPreviousAnnouncement:(id)arg1;	// IMP=0x0010000000106a1a
- (void)_handleDisplayModeChanged:(id)arg1;	// IMP=0x0010000000106989
- (void)handleDisplayModeChanged:(id)arg1;	// IMP=0x0000000000106911
- (void)_handleBraillePlayCommandNotSupportedSound;	// IMP=0x0010000000106899
- (void)handleBraillePlayCommandNotSupportedSound;	// IMP=0x0010000000106838
- (void)_handleBraillePlayBorderHitSound;	// IMP=0x00100000001067c0
- (void)handleBraillePlayBorderHitSound;	// IMP=0x001000000010675f
- (void)_updateTactileGraphicsDisplays;	// IMP=0x0010000000106477
- (void)_handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x00100000001063c6
- (void)handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x001000000010634e
@property(nonatomic) unsigned int persistentKeyModifiers;
- (void)setImageData:(id)arg1;	// IMP=0x00100000001060f2
- (void)setBrailleMap:(id)arg1;	// IMP=0x001000000010602f
- (void)_dispatchBrailleDidPanWithSuccess:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 direction:(id)arg4 lineOffset:(id)arg5;	// IMP=0x001000000010588b
- (_Bool)_brailleShouldTryToTurnPage:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000001057b8
- (void)handleBrailleDisplayCopyStringToClipboard:(id)arg1;	// IMP=0x0010000000105742
- (void)handleBrailleDidPanRight:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 lineOffset:(id)arg4;	// IMP=0x00100000001055fc
- (void)handleBrailleDidPanLeft:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 lineOffset:(id)arg4;	// IMP=0x00100000001054b9
- (void)handleBrailleDeletedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x0010000000104f53
- (void)handleBrailleInsertedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x0010000000104b32
- (void)_handleBrailleReplaceTextRange:(id)arg1 withString:(id)arg2 cursor:(id)arg3;	// IMP=0x0010000000103f34
- (_Bool)_handleKeyboardModifierCommands:(id)arg1;	// IMP=0x00100000001034d7
- (void)_handleBrailleKeypress:(id)arg1;	// IMP=0x0010000000102590
- (void)handleBrailleReplaceTextRange:(struct _NSRange)arg1 withString:(id)arg2 cursor:(unsigned long long)arg3;	// IMP=0x0010000000102049
- (void)handleUserEventOccured;	// IMP=0x0010000000102005
- (void)handleBrailleKeypress:(id)arg1;	// IMP=0x0010000000101f58
- (void)_updateOnscreenKeyboardSettings;	// IMP=0x0010000000101b13
- (void)_handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x0010000000101629
- (void)handleBrailleDidReconnect:(id)arg1;	// IMP=0x00100000001015d1
- (void)handleBrailleDidDisconnect:(id)arg1;	// IMP=0x001000000010157c
- (void)handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x00100000001014b6
- (void)_displayBrailleElementHint;	// IMP=0x0010000000101237
@property(retain, nonatomic) VOTElement *brailleElement; // @synthesize brailleElement=_brailleElement;
- (void)_refreshBrailleLinePreferringPositionOverRotorSelection:(_Bool)arg1 knownLineRange:(_Bool)arg2 updatedPosition:(id)arg3;	// IMP=0x0010000000100b04
- (void)_refreshBrailleLine;	// IMP=0x0010000000100aeb
- (void)refreshBrailleLine;	// IMP=0x0010000000100a8a
- (void)_resetBrailleCursor;	// IMP=0x0010000000100a69
- (void)_setBrailleElement:(id)arg1 resetBrailleCursor:(id)arg2 rotorSelection:(id)arg3;	// IMP=0x00100000001007d7
- (void)setBrailleElement:(id)arg1 resetBrailleCursor:(_Bool)arg2 rotorSelection:(id)arg3;	// IMP=0x00100000001006cb
- (void)_setBrailleString:(id)arg1 type:(id)arg2 timeout:(id)arg3 priority:(id)arg4 langCode:(id)arg5 brailleLineRangeValue:(id)arg6;	// IMP=0x00100000000ffe18
- (void)setBrailleString:(id)arg1 type:(int)arg2 timeout:(double)arg3 langCode:(id)arg4 brailleLineRange:(struct _NSRange)arg5 isBrailleLineRangeKnown:(_Bool)arg6;	// IMP=0x00100000000ffc06
- (void)_filterUnacceptableBrailleStrings:(id)arg1;	// IMP=0x00100000000ffadb
- (void)applyBrailleSubstitutions:(id)arg1;	// IMP=0x00100000000ffa07
- (void)_handleStatusRouterForIndex:(long long)arg1;	// IMP=0x00100000000ff807
- (void)_updateStatusCells;	// IMP=0x00100000000fee33
- (_Bool)statusCellShowsText;	// IMP=0x00100000000fee1d
- (_Bool)statusCellShowsGeneral;	// IMP=0x00100000000fee07
- (void)_updateStatusCellPrefs;	// IMP=0x00100000000fecdb
@property(readonly, nonatomic) _Bool bluetoothBrailleDisplayConnected;
- (void)setSingleLetterQuickNavOn:(_Bool)arg1;	// IMP=0x00100000000feca5
- (void)_updateHelpEnabled;	// IMP=0x00100000000febfd
@property(nonatomic) _Bool autoAdvanceEnabled;
- (void)_updateBrailleAutoAdvancePrefs;	// IMP=0x00100000000feb85
- (void)updateBrailleAutoAdvancePrefs;	// IMP=0x00100000000feb24
- (void)_updateBrailleKeyDebouncePrefs;	// IMP=0x00100000000feac3
- (void)_updateWordWrapPrefs;	// IMP=0x00100000000fe9d4
- (void)_initializeExpandedStatusCellDictionaries;	// IMP=0x00100000000fe404
- (void)_handleBrailleTranslate:(id)arg1;	// IMP=0x00100000000fe3fe
- (void)_handleBrailleStatusRouter:(id)arg1;	// IMP=0x00100000000fe374
- (void)_handleBrailleRouter:(id)arg1;	// IMP=0x00100000000fdd18
- (void)_handleBrailleAnnouncementModeOn:(id)arg1;	// IMP=0x00100000000fdcce
- (void)testingExitDisplayMode;	// IMP=0x00100000000fdc6d
- (void)_exitDisplayMode;	// IMP=0x00100000000fdc54
- (void)_handleBrailleToggleEightDot:(id)arg1;	// IMP=0x00100000000fdabd
- (void)_handleBrailleNextOutputMode:(id)arg1;	// IMP=0x00100000000fdaa9
- (void)_handleBrailleNextInputMode:(id)arg1;	// IMP=0x00100000000fda92
- (void)_handleBrailleMode:(id)arg1 input:(_Bool)arg2;	// IMP=0x00100000000fd84a
- (void)updateBrailleMode:(_Bool)arg1;	// IMP=0x00100000000fd752
- (long long)inputContractionMode;	// IMP=0x00100000000fd6de
- (long long)outputContractionMode;	// IMP=0x00100000000fd66a
- (_Bool)_supportsMode:(long long)arg1;	// IMP=0x00100000000fd5dd
- (void)_handleBrailleToggleContractions:(id)arg1;	// IMP=0x00100000000fd484
- (void)_handleBraillePanRight:(id)arg1;	// IMP=0x00100000000fd3ec
- (void)_handleBraillePanEnd:(id)arg1;	// IMP=0x00100000000fd37a
- (void)_handleBraillePanBeginning:(id)arg1;	// IMP=0x00100000000fd308
- (void)_handleBraillePanLeft:(id)arg1;	// IMP=0x00100000000fd270
- (void)_initializeCommands;	// IMP=0x00100000000fce0e
- (void)_handleEvent:(id)arg1;	// IMP=0x00100000000fcd07
- (void)handleEvent:(id)arg1;	// IMP=0x00100000000fcc8f
- (void)updateStatusCellPrefs;	// IMP=0x00100000000fcc2e
- (void)handleSettingsChange:(id)arg1;	// IMP=0x00100000000fcaff
- (_Bool)_languageIsCJK;	// IMP=0x00100000000fc9e0
- (void)setTextSearchModeOn:(_Bool)arg1;	// IMP=0x00100000000fc9c7
- (void)updateUsesNemethForMath;	// IMP=0x00100000000fc963
- (void)_setBrailleSubstitutionLanguage:(id)arg1;	// IMP=0x00100000000fc951
- (void)_setBrailleTable:(id)arg1;	// IMP=0x00100000000fc7f3
- (void)_setCurrentDefaultTable:(id)arg1;	// IMP=0x00100000000fc7e2
- (void)updateBrailleLanguage;	// IMP=0x00100000000fc61a
- (void)handleKeyboardChanged;	// IMP=0x00100000000fc474
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x00100000000fc431
- (_Bool)_shouldIncludeServiceNameForSpokenBrailleRotorAnnouncementOfTable:(id)arg1 rotorItems:(id)arg2 locale:(id)arg3;	// IMP=0x00100000000fbfdd
- (long long)_indexOfBrailleTable:(id)arg1 inRotorItems:(id)arg2;	// IMP=0x00100000000fbe3a
- (void)announceBrailleTable:(id)arg1 isDefault:(_Bool)arg2;	// IMP=0x00100000000fbc81
- (id)adjustBrailleLanguageRotorInDirection:(long long)arg1 isDefault:(out _Bool *)arg2;	// IMP=0x00100000000fb8a1
- (void)_updateRealtimeElementStatus;	// IMP=0x00100000000fb355
- (void)_updateRealtimeElementStatusFromTimer;	// IMP=0x00100000000fb312
- (void)updateRealtimeElements:(id)arg1;	// IMP=0x00100000000fb2cf
- (void)_waitForBrailleClientConnection;	// IMP=0x00100000000fb234
- (void)_setBrailleClientEnabled:(id)arg1;	// IMP=0x00100000000fb089
- (void)_updateBrailleInputSettings;	// IMP=0x00100000000fae4f
- (void)_setAutomaticBrailleTranslationEnabled:(_Bool)arg1;	// IMP=0x00100000000fae23
- (void)_setInputContractionMode:(int)arg1;	// IMP=0x00100000000fadfa
- (void)updateBrailleInputSettings;	// IMP=0x00100000000fadc7
- (void)updateBrailleOutputSettings;	// IMP=0x00100000000fad97
- (void)_updateBrailleOutputSettings;	// IMP=0x00100000000fac82
- (void)_textShortcutsDidChange;	// IMP=0x00100000000fac43
- (void)textShortcutsDidChange;	// IMP=0x00100000000fac14
- (void)dealloc;	// IMP=0x00100000000faba6
- (id)init;	// IMP=0x00100000000f9df0

@end

