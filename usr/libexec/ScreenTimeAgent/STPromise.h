//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, STResult;
@protocol OS_dispatch_queue;

@interface STPromise : NSObject
{
    long long _state;	// 8 = 0x8
    NSObject *_stateLock;	// 16 = 0x10
    NSMutableArray *_observers;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 32 = 0x20
    STResult *_result;	// 40 = 0x28
}

+ (id)dispatchGroup;	// IMP=0x00200000000682b0
+ (id)createQueue;	// IMP=0x0010000000067fab
+ (id)resolvedWith:(id)arg1;	// IMP=0x0010000000067f2e
+ (id)pendingPromise;	// IMP=0x0010000000067ecc
+ (CDUnknownBlockType)resolved;	// IMP=0x001000000006912f
+ (id)onQueue:(id)arg1 all:(id)arg2;	// IMP=0x0010000000069213
+ (id)all:(id)arg1;	// IMP=0x0010000000069196
+ (id)onQueue:(id)arg1 do:(CDUnknownBlockType)arg2;	// IMP=0x001000000006a00e
+ (id)do:(CDUnknownBlockType)arg1;	// IMP=0x0010000000069f91
+ (CDUnknownBlockType)doOn;	// IMP=0x001000000006a36b
+ (CDUnknownBlockType)doWork;	// IMP=0x001000000006a304
- (void).cxx_destruct;	// IMP=0x00100000000690f1
@property(readonly, copy) STResult *result; // @synthesize result=_result;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly) NSMutableArray *observers; // @synthesize observers=_observers;
@property(readonly) NSObject *stateLock; // @synthesize stateLock=_stateLock;
@property(readonly) long long state; // @synthesize state=_state;
- (id)chainOnQueue:(id)arg1 chainedResolve:(CDUnknownBlockType)arg2 chainedError:(CDUnknownBlockType)arg3;	// IMP=0x0010000000068b8c
- (void)observeOnQueue:(id)arg1 resolve:(CDUnknownBlockType)arg2 cancel:(CDUnknownBlockType)arg3;	// IMP=0x00100000000687e0
- (void)cancel;	// IMP=0x001000000006857e
- (void)resolve:(id)arg1;	// IMP=0x00100000000682fe
@property(readonly) _Bool isCanceled;
@property(readonly) _Bool isResolved;
@property(readonly) _Bool isPending;
- (id)description;	// IMP=0x0010000000068087
- (id)initWithResolution:(id)arg1 onQueue:(id)arg2;	// IMP=0x0010000000067df5
- (id)initPendingOnQueue:(id)arg1;	// IMP=0x0010000000067d32
- (void)dealloc;	// IMP=0x0010000000067cc6
- (id)onQueue:(id)arg1 catch:(CDUnknownBlockType)arg2;	// IMP=0x0010000000069db0
- (id)catch:(CDUnknownBlockType)arg1;	// IMP=0x0010000000069d33
- (CDUnknownBlockType)catchOn;	// IMP=0x0010000000069f27
- (CDUnknownBlockType)catch;	// IMP=0x0010000000069ec0
- (id)onQueue:(id)arg1 given:(CDUnknownBlockType)arg2;	// IMP=0x001000000006a452
- (id)given:(CDUnknownBlockType)arg1;	// IMP=0x001000000006a3d5
- (CDUnknownBlockType)givenOn;	// IMP=0x001000000006a5d1
- (CDUnknownBlockType)given;	// IMP=0x001000000006a56a
- (id)onQueue:(id)arg1 then:(CDUnknownBlockType)arg2;	// IMP=0x001000000006ad02
- (id)then:(CDUnknownBlockType)arg1;	// IMP=0x001000000006ac85
- (CDUnknownBlockType)thenOn;	// IMP=0x001000000006ae76
- (CDUnknownBlockType)then;	// IMP=0x001000000006ae0f

@end

