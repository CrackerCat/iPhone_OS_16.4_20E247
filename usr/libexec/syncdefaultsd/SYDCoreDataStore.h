//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSManagedObjectContext, NSPersistentContainer, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SYDCoreDataStore : NSObject
{
    _Bool _shouldLogValues;	// 8 = 0x8
    NSPersistentContainer *__persistentContainer;	// 16 = 0x10
    NSURL *_URL;	// 24 = 0x18
    NSString *_fileProtectionType;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_persistentContainerQueue;	// 40 = 0x28
    NSManagedObjectContext *_transactionContext;	// 48 = 0x30
}

+ (_Bool)isInvalidTokenError:(id)arg1;	// IMP=0x00400000000329a3
+ (_Bool)isCorruptionError:(id)arg1;	// IMP=0x00100000000324f8
+ (id)managedObjectModel;	// IMP=0x00100000000316c7
- (void).cxx_destruct;	// IMP=0x0020000000032b0e
@property(retain, nonatomic) NSManagedObjectContext *transactionContext; // @synthesize transactionContext=_transactionContext;
// Error: Property attributes should begin with the type ('T') attribute, property name: persistentContainerQueue
// Property attributes: (null)

@property(nonatomic) _Bool shouldLogValues; // @synthesize shouldLogValues=_shouldLogValues;
@property(retain, nonatomic) NSString *fileProtectionType; // @synthesize fileProtectionType=_fileProtectionType;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSPersistentContainer *_persistentContainer; // @synthesize _persistentContainer=__persistentContainer;
- (_Bool)_queue_handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x0010000000032719
- (void)handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x00100000000323d2
- (void)transactionStoreDidSave:(id)arg1;	// IMP=0x00100000000323cc
- (_Bool)saveTransaction:(id *)arg1;	// IMP=0x0010000000032144
- (id)transactionalStoreWithError:(id *)arg1;	// IMP=0x0010000000032002
- (unsigned long long)fileSizeBytes;	// IMP=0x0010000000031b94
- (void)_queue_destroyPersistentStoreInPersistentStoreCoordinator:(id)arg1;	// IMP=0x00100000000319f0
- (void)destroyPersistentStore;	// IMP=0x001000000003183e
- (id)persistentContainerWithError:(id *)arg1;	// IMP=0x0010000000030e43
- (_Bool)saveContext:(id)arg1 reason:(id)arg2 includingTransactionContext:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0010000000030ad4
- (id)_contextForStoreIdentifier:(id)arg1 persistentContainer:(id)arg2;	// IMP=0x0010000000030a5a
- (id)contextForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000003094e
- (id)managedKeyValuesMatchingPredicate:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000030720
- (id)managedKeyValuesForKeyIDs:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002fe4a
- (id)managedKeyValueWithRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x001000000002fb0f
- (id)managedStoreWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x001000000002f817
- (id)managedDatabaseCreateIfNecessary:(_Bool)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002f5ed
- (id)syncEngineMetadataWithError:(id *)arg1;	// IMP=0x001000000002f35e
- (_Bool)saveSyncEngineMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002f0c9
- (id)dictionaryRepresentationForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e73d
- (short)failedMigrationCountWithError:(id *)arg1;	// IMP=0x001000000002e50b
- (_Bool)setFailedMigrationCount:(short)arg1 error:(id *)arg2;	// IMP=0x001000000002e1e8
- (_Bool)didMigrateFromPlistsWithError:(id *)arg1;	// IMP=0x001000000002dfba
- (_Bool)setDidMigrateFromPlists:(_Bool)arg1 error:(id *)arg2;	// IMP=0x001000000002dc98
- (id)acAccountIdentifierWithError:(id *)arg1;	// IMP=0x001000000002da47
- (_Bool)setACAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002d774
- (_Bool)clearServerSystemFieldsRecordsForAllStoresWithError:(id *)arg1;	// IMP=0x001000000002d26c
- (id)changedKeysForStoreIdentifier:(id)arg1 sinceChangeToken:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002ba61
- (id)currentChangeTokenForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002b564
- (unsigned long long)numberOfKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002b1d7
- (_Bool)clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002ac7a
- (id)allStoreIdentifiersWithError:(id *)arg1;	// IMP=0x001000000002a720
- (id)allRecordNamesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002a14d
- (_Bool)deleteDataForStoresMatchingPredicate:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000029e8a
- (_Bool)deleteDataForAllStoresWithError:(id *)arg1;	// IMP=0x0010000000029dc5
- (_Bool)deleteDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000029cab
- (_Bool)saveServerSyncAnchorSystemFieldsRecordData:(id)arg1 forStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000029934
- (id)serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000295f5
- (_Bool)removeKeyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000291a8
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0010000000028c50
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000028c2b
- (_Bool)_saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 forceCreateNewRow:(_Bool)arg4 error:(id *)arg5;	// IMP=0x001000000002771a
- (_Bool)saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00100000000276f8
- (_Bool)_saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 forceCreateNewRow:(_Bool)arg5 error:(id *)arg6;	// IMP=0x00100000000274ff
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 error:(id *)arg5;	// IMP=0x00100000000274e3
- (id)keyValueFromManagedKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2;	// IMP=0x00100000000270cd
- (id)keyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000026d4c
- (id)keyValuesForKeyIDs:(id)arg1 createIfNecessary:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00100000000261a2
- (id)keyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0010000000025e11
- (id)description;	// IMP=0x0010000000025d6f
- (void)dealloc;	// IMP=0x0010000000025cfa
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2 persistentContainer:(id)arg3 isTransactional:(_Bool)arg4;	// IMP=0x0010000000025a69
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2;	// IMP=0x0010000000025a51
- (id)initWithURL:(id)arg1;	// IMP=0x0010000000025a35

@end

