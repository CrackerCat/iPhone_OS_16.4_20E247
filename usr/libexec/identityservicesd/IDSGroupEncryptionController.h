//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSRealTimeEncryptionIdentity, IMDispatchTimer, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface IDSGroupEncryptionController : NSObject
{
    id _sessionController;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_realtimeEncryptionQueue;	// 16 = 0x10
    _Bool _isInternal;	// 24 = 0x18
    struct os_unfair_lock_s _lock;	// 28 = 0x1c
    _Bool _shouldBroadcastAllValidMkMs;	// 32 = 0x20
    _Bool _shouldSendMKMOverQR;	// 33 = 0x21
    double _mkmAcknowledgementTimeout;	// 40 = 0x28
    double _preKeyRequestDelayDuration;	// 48 = 0x30
    unsigned int _prekeyExpireDuration;	// 56 = 0x38
    unsigned int _previousPrekeyExpireDuration;	// 60 = 0x3c
    unsigned int _mkmExpireDuration;	// 64 = 0x40
    unsigned int _mkmRollDuration;	// 68 = 0x44
    NSMutableDictionary *_accountIDs;	// 72 = 0x48
    NSMutableDictionary *_fromIDs;	// 80 = 0x50
    IDSRealTimeEncryptionIdentity *_identityForDevice;	// 88 = 0x58
    IDSRealTimeEncryptionIdentity *_previousIdentityForDevice;	// 96 = 0x60
    NSMutableDictionary *_prekeyAckCountForGroup;	// 104 = 0x68
    NSMutableDictionary *_publicKeyForDevice;	// 112 = 0x70
    NSMutableDictionary *_groupIDToKeyMaterialCache;	// 120 = 0x78
    NSMutableDictionary *_groupIDToStableKeyMaterialCache;	// 128 = 0x80
    NSMutableDictionary *_membersForGroup;	// 136 = 0x88
    NSMutableDictionary *_membersLightweightStatusDict;	// 144 = 0x90
    NSMutableDictionary *_participantsForGroup;	// 152 = 0x98
    NSMutableDictionary *_groupIDToTypeToParticipantsPushTokens;	// 160 = 0xa0
    NSMutableDictionary *_participantsInfoForGroup;	// 168 = 0xa8
    NSMutableDictionary *_groupIDToLocalParticipantID;	// 176 = 0xb0
    NSMutableDictionary *_participantsWaitingForKeyMaterials;	// 184 = 0xb8
    NSMutableDictionary *_participantsWaitingForStableKeyMaterials;	// 192 = 0xc0
    NSMutableDictionary *_participantsWaitingForInitialKeyMaterials;	// 200 = 0xc8
    NSMutableDictionary *_endpointSubscriptionForGroup;	// 208 = 0xd0
    NSMutableDictionary *_lastKnownGroupIDToPushTokens;	// 216 = 0xd8
    NSMutableDictionary *_lastKnownAccountIDToPushTokens;	// 224 = 0xe0
    NSMutableDictionary *_pendingMasterKeyMaterials;	// 232 = 0xe8
    NSMutableDictionary *_pendingStableKeyMaterials;	// 240 = 0xf0
    NSMutableDictionary *_groupIDToResetKeyMaterialCacheTimer;	// 248 = 0xf8
    NSMutableDictionary *_encryptionSequenceNumbers;	// 256 = 0x100
    NSMutableDictionary *_groupIDToMKMExpirationTimer;	// 264 = 0x108
    NSMutableDictionary *_groupIDToMKMExpirationTimerBlock;	// 272 = 0x110
    NSMutableDictionary *_groupIDToMKMRollTimer;	// 280 = 0x118
    NSMutableDictionary *_groupIDToMKMRollTimerBlock;	// 288 = 0x120
    NSMutableDictionary *_groupIDToMKMRecoveryRetryCount;	// 296 = 0x128
    NSMutableDictionary *_groupIDToSKMRecoveryRetryCount;	// 304 = 0x130
    NSMutableDictionary *_groupIDToIsKeyMaterialRecoveryRunning;	// 312 = 0x138
    NSMutableDictionary *_groupIDToIsDeferredPreKeyRequestPending;	// 320 = 0x140
    NSMutableDictionary *_groupIDToInitialKeyMaterialDistributionTimeoutBlock;	// 328 = 0x148
    IMDispatchTimer *_endpointUpdateTimer;	// 336 = 0x150
    _Bool _isTestRunning;	// 344 = 0x158
    _Bool _fakeMKMWrapping;	// 345 = 0x159
}

+ (id)sharedInstance;	// IMP=0x002000000053b630
- (void).cxx_destruct;	// IMP=0x0020000000570690
@property(readonly, nonatomic) IDSRealTimeEncryptionIdentity *previousIdentityForDevice; // @synthesize previousIdentityForDevice=_previousIdentityForDevice;
@property(readonly, nonatomic) IDSRealTimeEncryptionIdentity *identityForDevice; // @synthesize identityForDevice=_identityForDevice;
@property(readonly, nonatomic) NSMutableDictionary *groupIDToStableKeyMaterialCache; // @synthesize groupIDToStableKeyMaterialCache=_groupIDToStableKeyMaterialCache;
@property(nonatomic) _Bool fakeMKMWrapping; // @synthesize fakeMKMWrapping=_fakeMKMWrapping;
@property(nonatomic) _Bool isTestRunning; // @synthesize isTestRunning=_isTestRunning;
@property(retain, nonatomic) id sessionController; // @synthesize sessionController=_sessionController;
- (void);	// IMP=0x0010000000570520
- (id)getLightweightStatusDictForGroup:(id)arg1;	// IMP=0x00100000005704a0
- (id)getMembersForGroup:(id)arg1;	// IMP=0x0010000000570420
- (id)getParticipantsInfoForGroup:(id)arg1;	// IMP=0x00100000005703a0
- (id)getParticipantsForGroup:(id)arg1 ofType:(long long)arg2;	// IMP=0x00100000005702b0
- (id)getParticipantsForGroup:(id)arg1;	// IMP=0x0010000000570230
- (id)getParticipantsWaitingForInitialKeyMaterials:(id)arg1;	// IMP=0x00100000005701b0
- (id)getParticipantsWaitingForStableKeyMaterials:(id)arg1;	// IMP=0x0010000000570130
- (id)getParticipantsWaitingForKeyMaterials:(id)arg1;	// IMP=0x00100000005700b0
- (id)stablekeyMaterialCacheToGroup:(id)arg1;	// IMP=0x0010000000570030
- (id)keyMaterialCacheToGroup:(id)arg1;	// IMP=0x001000000056ffb0
- (void)account:(id)arg1 didUpdateRegisteredDevices:(id)arg2;	// IMP=0x001000000056f600
- (void)didUpdateParticipants:(id)arg1 ofType:(long long)arg2 forGroup:(id)arg3 sessionID:(id)arg4;	// IMP=0x001000000056f400
- (void)_updateStandardParticipants:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3;	// IMP=0x001000000056dc30
- (void)_updateLightweightParticipants:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3;	// IMP=0x001000000056c5d0
- (void)_dispatchDeferredPrekeyRequestForGroupID:(id)arg1 previousParticipantsPushTokens:(id)arg2 currentActiveParticipants:(id)arg3 sessionID:(id)arg4;	// IMP=0x001000000056c2a0
- (id)_getAndUpdateParticipantsWaitingForKeyMaterialsForGroup:(id)arg1 waitingParticipants:(id)arg2 addedParticipantsDiff:(id)arg3 currentParticipantsPushTokens:(id)arg4 participantType:(long long)arg5;	// IMP=0x001000000056b3c0
- (void)_updateAllActiveParticipantsInfoFromParticipants:(id)arg1 standardParticipantsPushTokens:(id)arg2 lightweightParticipantsPushTokens:(id)arg3 groupID:(id)arg4;	// IMP=0x001000000056a760
- (void)_dispatchDeferredPrekeyRequestForGroupID:(id)arg1 previousParticipantsPushTokens:(id)arg2 currentActiveParticipants:(id)arg3 sessionID:(id)arg4 waitingParticipantsTokens:(id)arg5;	// IMP=0x0010000000569e20
- (id)allParticipantsInfoForGroup:(id)arg1;	// IMP=0x0010000000569d50
- (_Bool)_isValidPushToken:(id)arg1;	// IMP=0x0010000000569cd0
- (void)_updateRelevantEncryptedDataBlobForSession:(id)arg1;	// IMP=0x0010000000569b40
- (void)didUpdateMembers:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3 lightweightStatusDict:(id)arg4 hasChangedStandardMembers:(_Bool)arg5 newlyAddedMembers:(id)arg6;	// IMP=0x0010000000569670
- (void)setMembers:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3 lightweightStatusDict:(id)arg4;	// IMP=0x0010000000568570
- (void)updateLightweightMemberTypes:(id)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 forGroup:(id)arg4 sessionID:(id)arg5;	// IMP=0x0010000000568190
- (void)didReceiveEndpointsUpdate:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000567880
- (void)rollNewKeysAfterResettingPrekeysForGroups:(id)arg1 withReason:(long long)arg2;	// IMP=0x0010000000566df0
- (void)updateServerDesiredKeyMaterialsForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000564c50
- (id)_compactKeyMaterialMessage:(id)arg1 isOutgoing:(_Bool)arg2 groupID:(id)arg3;	// IMP=0x00100000005641c0
- (id)_generateMKMBlobForQRFromMessage:(id)arg1 account:(id)arg2 destination:(id)arg3 fromID:(id)arg4;	// IMP=0x00100000005636b0
- (void)processedQRMKMPayloadFromData:(id)arg1 forGroupID:(id)arg2 account:(id)arg3 remoteURI:(id)arg4 localURI:(id)arg5 tokens:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x00100000005623e0
- (void)sendKeyMaterialsToWaitingParticipantsForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000561c20
- (void)removeExpiredPrekeys;	// IMP=0x0010000000561a60
- (void)sendPublicKeyToDestination:(id)arg1 group:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000561140
- (void)sendPublicKeyToGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000560fe0
- (void)_sendMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4 command:(long long)arg5 timeout:(double)arg6 shouldExpire:(_Bool)arg7 useQR:(_Bool)arg8 completion:(CDUnknownBlockType)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x001000000055f060
- (void)reportTimeDifferenceBetweenFirstPacketAndMKI:(long long)arg1 forMKI:(id)arg2 service:(id)arg3 activeParticipants:(long long)arg4;	// IMP=0x001000000055ee60
- (void)unsubscribeEndpointsForGroup:(id)arg1;	// IMP=0x001000000055ec30
- (void)resetKeysForGroup:(id)arg1 shouldRemoveCurrentParticipants:(_Bool)arg2;	// IMP=0x001000000055e6e0
- (void)removeActiveParticipant:(id)arg1 forGroup:(id)arg2;	// IMP=0x001000000055db50
- (void)removeLocalActiveParticipantForGroup:(id)arg1;	// IMP=0x001000000055dac0
- (id)activeParticipantsForGroup:(id)arg1;	// IMP=0x001000000055d9c0
- (void)resetDevicePrekey;	// IMP=0x001000000055d8e0
- (_Bool)_shouldEnforceRemoteTimeout;	// IMP=0x001000000055d720
- (double)_multiwayFTMessageSendTimeout;	// IMP=0x001000000055d520
- (void)sendKeyMaterialsToLocal:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000055cf50
- (void)_sendKeyMaterialsToGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 shouldIncludeCachedPeerKeyMaterial:(_Bool)arg4 requireMKM:(_Bool)arg5 requireSKM:(_Bool)arg6;	// IMP=0x0010000000559e00
- (id)destinationsExcludingSelfForDestinations:(id)arg1;	// IMP=0x0010000000559a10
- (void)resetKeyMaterialLocalSentStatus:(id)arg1;	// IMP=0x0010000000559980
- (void)resetSKMLocalSentStatus:(id)arg1;	// IMP=0x00100000005594b0
- (void)resetMKMLocalSentStatus:(id)arg1;	// IMP=0x0010000000558ff0
- (id)_protectedCachedKeyMaterialsForDestination:(id)arg1 pushToken:(id)arg2 forGroup:(id)arg3 outURIs:(id *)arg4 includePeers:(_Bool)arg5;	// IMP=0x0010000000558b90
- (void)sendPendingKeyMaterialsToGroup:(id)arg1 sessionID:(id)arg2 forDevice:(id)arg3 fromID:(id)arg4;	// IMP=0x0010000000558710
- (id)stableKeyMaterialForGroup:(id)arg1;	// IMP=0x0010000000558470
- (id)masterKeyMaterialForGroup:(id)arg1;	// IMP=0x00100000005581d0
- (void)notifyStableKeyMaterialsReceivedForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000557ac0
- (void)receivedGroupStableKeyMaterial:(id)arg1 fromPushToken:(id)arg2 sessionID:(id)arg3 groupID:(id)arg4;	// IMP=0x0010000000557570
- (void)noteReceivedGroupMasterKeyMaterials:(id)arg1 URIs:(id)arg2 sessionID:(id)arg3;	// IMP=0x00100000005570f0
- (void)requestPendingKeyMaterialsForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000556c50
- (id)receivedAndSetKeyMaterial:(id)arg1 stableKeyMaterial:(id)arg2 forDevice:(id)arg3 fromID:(id)arg4 groupID:(id)arg5 sessionID:(id)arg6 fromSender:(_Bool)arg7 error:(id *)arg8 forMKM:(_Bool)arg9 forSKM:(_Bool)arg10;	// IMP=0x0010000000554540
- (_Bool)_storePendingKeyMaterial:(id)arg1 stableKeyMaterial:(id)arg2 hasValidMKM:(_Bool)arg3 hasValidSKM:(_Bool)arg4 forDevice:(id)arg5;	// IMP=0x0010000000553e00
- (void)processIncomingKeyMaterialsRecoveryRequest:(id)arg1 fromDevice:(id)arg2 fromID:(id)arg3 groupID:(id)arg4 sessionID:(id)arg5 serverDate:(id)arg6 requireMKM:(_Bool)arg7 requireSKM:(_Bool)arg8;	// IMP=0x00100000005530b0
- (void)sendKeyMaterialsRecoveryRequestToParticipants:(id)arg1 senderID:(id)arg2 groupID:(id)arg3 sessionID:(id)arg4 requireMKM:(_Bool)arg5 requireSKM:(_Bool)arg6;	// IMP=0x00100000005524f0
- (void)sendKeyMaterialsRecoveryRequestToGroup:(id)arg1 requireMKM:(_Bool)arg2 requireSKM:(_Bool)arg3;	// IMP=0x0010000000551950
- (void)sendKeyMaterialsRecoveryRequestToDevice:(id)arg1 fromID:(id)arg2 participantID:(id)arg3 groupID:(id)arg4 sessionID:(id)arg5 requireMKM:(_Bool)arg6 requireSKM:(_Bool)arg7;	// IMP=0x0010000000550a70
- (void)sendKeyMaterialsRecoveryRequestToDevice:(id)arg1 fromID:(id)arg2 groupID:(id)arg3 sessionID:(id)arg4 requireMKM:(_Bool)arg5 requireSKM:(_Bool)arg6;	// IMP=0x0010000000550950
- (void)createStableKeyMaterialAndSendToFrameworkForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000005505a0
- (id)createStableKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000054ffa0
- (void)createKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000054eb10
- (unsigned long long)localParticipantIDForGroupID:(id)arg1;	// IMP=0x001000000054ea70
- (void)setLocalParticipantID:(unsigned long long)arg1 forGroupID:(id)arg2;	// IMP=0x001000000054e400
- (void)_mkmRollTimerFiredForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000054dc90
- (void)_stopMkmExpirationTimerForGroup:(id)arg1;	// IMP=0x001000000054da00
- (void)_startMkmExpirationTimer:(int)arg1 forGroupID:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x001000000054d420
- (void)_handleMkmExpirationTimerForGroup:(id)arg1;	// IMP=0x001000000054d250
- (void)_stopMkmRollTimerForGroup:(id)arg1;	// IMP=0x001000000054d040
- (void)_startMkmRollTimer:(int)arg1 forGroupID:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x001000000054cb00
- (void)_handleMkmRollTimerForGroup:(id)arg1;	// IMP=0x001000000054c910
- (void)cleanUpExpiredMasterKeyMaterial;	// IMP=0x001000000054b3c0
- (id)participantIDsForURIs:(id)arg1 group:(id)arg2;	// IMP=0x001000000054ad20
- (id)participantInfoByURIForGroup:(id)arg1;	// IMP=0x001000000054a830
- (void)sendPrekeyRequestToDestination:(id)arg1 group:(id)arg2 sessionID:(id)arg3;	// IMP=0x001000000054a2b0
- (void)sendPrekeyRequestToGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000054a170
- (id)publicKeys;	// IMP=0x0010000000549d40
- (long long)realTimeEncryptionPublicWrapModeForDevice:(id)arg1;	// IMP=0x0010000000549ac0
- (id)realTimeEncryptionPublicKeyDataForDevice:(id)arg1;	// IMP=0x0010000000549810
- (id)realTimeEncryptionPublicKeyForDevice:(id)arg1;	// IMP=0x00100000005495a0
- (void)_locked_updateParticipantsWaitingForKeyMaterialsIfNeededForGroupID:(id)arg1 remoteToken:(id)arg2 previousRemotePublicKey:(id)arg3 newRemotePublicKey:(id)arg4;	// IMP=0x0010000000549110
- (_Bool)setRealTimeEncryptionPublicKey:(id)arg1 forDevice:(id)arg2 fromID:(id)arg3 groupID:(id)arg4 sessionID:(id)arg5 serverDate:(id)arg6 wrapMode:(long long)arg7;	// IMP=0x00100000005483e0
- (unsigned long long)encryptionSequenceNumberForGroupID:(id)arg1;	// IMP=0x0010000000548260
- (void)storeEncryptionSequenceNumber:(unsigned long long)arg1 groupID:(id)arg2;	// IMP=0x0010000000547e60
- (void)resetKeyMaterialCacheTimerIfNeeded:(id)arg1;	// IMP=0x0010000000547990
- (void)resetMKMCacheAfterTimeoutForGroup:(id)arg1;	// IMP=0x0010000000547330
- (void)reportPrekeyAckStatus:(id)arg1;	// IMP=0x00100000005471e0
- (void)processIncomingPrekeyAckForGroup:(id)arg1;	// IMP=0x0010000000546ff0
- (id)realTimeEncryptionPublicKeyData;	// IMP=0x0010000000546920
- (long long)realTimeEncryptionPublicKeyWrappingMode;	// IMP=0x0010000000546860
- (id)createRealTimeEncryptionFullIdentityForDevice:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000545790
- (void)_startKeyRecoveryForMKM:(_Bool)arg1 forSKM:(_Bool)arg2 forDevice:(id)arg3 forGroupID:(id)arg4;	// IMP=0x00100000005454f0
- (void)_doCheckPendingKeyMaterialsAndSendKeyRecoveryRequestForMKM:(_Bool)arg1 forSKM:(_Bool)arg2 forDevice:(id)arg3 forGroupID:(id)arg4;	// IMP=0x0010000000544190
- (void)_sendKeyRecoveryRequestForPendingKeys:(id)arg1 requireMKM:(_Bool)arg2 requireSKM:(_Bool)arg3 forDevice:(id)arg4;	// IMP=0x00100000005433a0
- (void)_dispatchRenewPrekeyTimer;	// IMP=0x0010000000543090
- (void)_sendRenewedPrekeysToGroups;	// IMP=0x0010000000542c30
- (void)_noteKeyMaterialNotNeededForDestination:(id)arg1 groupID:(id)arg2;	// IMP=0x00100000005428a0
- (void)_noteKeyMaterialDidSendToDestination:(id)arg1 groupID:(id)arg2 withSuccess:(_Bool)arg3;	// IMP=0x00100000005422c0
- (void)_initializeParticipantsWaitingForInitialKeyMaterialsForGroup:(id)arg1;	// IMP=0x0010000000541a00
- (id)_pruneLightweightParticipantsForGroupID:(id)arg1 forTokens:(id)arg2;	// IMP=0x0010000000541870
- (id)_pruneInvalidAndLocalPushTokensFromTokens:(id)arg1;	// IMP=0x0010000000541740
- (void)_requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 shouldTrackDistribution:(_Bool)arg4 shouldIncludeCachedPeerKeyMaterial:(_Bool)arg5 requireMKM:(_Bool)arg6 requireSKM:(_Bool)arg7;	// IMP=0x0010000000541600
- (void)_requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 shouldTrackDistribution:(_Bool)arg4 shouldIncludeCachedPeerKeyMaterial:(_Bool)arg5 requireMKM:(_Bool)arg6 requireSKM:(_Bool)arg7 isFirstSession:(_Bool)arg8;	// IMP=0x00100000005414a0
- (id)_getSetofStandardParticipantsForGroup:(id)arg1;	// IMP=0x0010000000540ea0
- (void)_requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 shouldTrackDistribution:(_Bool)arg4 shouldIncludeCachedPeerKeyMaterial:(_Bool)arg5 shouldGenerateMKM:(_Bool)arg6 requireMKM:(_Bool)arg7 requireSKM:(_Bool)arg8 isFirstSession:(_Bool)arg9;	// IMP=0x001000000053e290
- (void)reliablyRequestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000053e1e0
- (void)requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 shouldGenerateMKM:(_Bool)arg3;	// IMP=0x001000000053e120
- (void)requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000053e070
- (void)requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 requireMKM:(_Bool)arg4 requireSKM:(_Bool)arg5;	// IMP=0x001000000053df80
- (void)removeAccountForGroup:(id)arg1;	// IMP=0x001000000053db60
- (void)setAccount:(id)arg1 fromID:(id)arg2 forGroup:(id)arg3;	// IMP=0x001000000053d490
- (id)_ensureGroupStableKeyMaterialCacheForGroup:(id)arg1;	// IMP=0x001000000053d390
- (id)_locked_ensureGroupMasterKeyMaterialCacheForGroup:(id)arg1;	// IMP=0x001000000053d050
- (_Bool)_isUsingAccount:(id)arg1;	// IMP=0x001000000053ce30
- (id)_localDevicePushToken;	// IMP=0x001000000053cdc0
- (id)init;	// IMP=0x001000000053b6f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

