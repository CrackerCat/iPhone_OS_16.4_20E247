//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDGroupStatusNotificationController, IDSDSessionInvitationManager, IDSDSessionKeyValueDelivery, IDSDSessionMessenger, IDSDSessionSharedState, IDSGFTMetricsCollector, IDSGroupEncryptionKeyManager, IDSGroupSessionDataCryptor, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, MISSING_TYPE, NSArray, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSSet, NSString, NSUUID;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    NSUUID *_clientChannelUUID;	// 80 = 0x50
    unsigned long long _connectionClaimed;	// 88 = 0x58
    IDSConnectionContext *_connectionContext;	// 96 = 0x60
    unsigned int _currentGenerationCounter;	// 104 = 0x68
    _Bool _disallowCellularInterface;	// 108 = 0x6c
    _Bool _disallowWifiInterface;	// 109 = 0x6d
    NSDate *_endDate;	// 112 = 0x70
    NSMutableDictionary *_extraConnections;	// 120 = 0x78
    unsigned long long _extraConnectionCount;	// 128 = 0x80
    unsigned int _groupSessionState;	// 136 = 0x88
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 144 = 0x90
    int _idsDataChannelClientPID;	// 152 = 0x98
    unsigned long long _initialLinkType;	// 160 = 0xa0
    NSString *_instanceID;	// 168 = 0xa8
    double _inviteRecvTime;	// 176 = 0xb0
    _Bool _joinGroupSessionPending;	// 184 = 0xb8
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 192 = 0xc0
    unsigned char _keyMaterial[60];	// 200 = 0xc8
    long long _linkProtocol;	// 264 = 0x108
    double _membershipChangeEventTime;	// 272 = 0x110
    double _newKeyEventTime;	// 280 = 0x118
    double _summaryReportBaseTime;	// 288 = 0x120
    double _joinSendStartTime;	// 296 = 0x128
    double _joinSendEndTime;	// 304 = 0x130
    double _joinRecvTime;	// 312 = 0x138
    double _joinStartTime;	// 320 = 0x140
    double _clientChannelConnectTime;	// 328 = 0x148
    double _firstMKMReceivedTime;	// 336 = 0x150
    double _firstMKMSentTime;	// 344 = 0x158
    double _firstPacketReceivedTime;	// 352 = 0x160
    struct *_packetBufferArray[8];	// 360 = 0x168
    unsigned long long _preferredAddressFamily;	// 424 = 0x1a8
    _Bool _preferCellularForCallSetup;	// 432 = 0x1b0
    NSNumber *_qrError;	// 440 = 0x1b8
    NSMutableArray *_qrEventsForRTCReports;	// 448 = 0x1c0
    NSNumber *_qrReason;	// 456 = 0x1c8
    unsigned int _reason;	// 464 = 0x1d0
    unsigned short _relayPort;	// 468 = 0x1d4
    _Bool _sessionStartedCalled;	// 470 = 0x1d6
    NSMutableData *_sessionInfoMetaData;	// 472 = 0x1d8
    _Bool _shouldAssertRealTimeMode;	// 480 = 0x1e0
    _Bool _sharedSessionHasJoined;	// 481 = 0x1e1
    MISSING_TYPE *_shouldConnectToQRServer;	// 482 = 0x1e2
    NSData *_skeData;	// 488 = 0x1e8
    int _socketDescriptor;	// 496 = 0x1f0
    NSDate *_startDate;	// 504 = 0x1f8
    _Bool _supressClientNotifications;	// 512 = 0x200
    _Bool _verboseFunctionalLogging;	// 513 = 0x201
    _Bool _verbosePerformanceLogging;	// 514 = 0x202
    _Bool _multiplexerEnabled;	// 515 = 0x203
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 520 = 0x208
    double _channelDataCachedTime;	// 528 = 0x210
    _Bool _startedAsUPlusOneSession;	// 536 = 0x218
    _Bool _switchedToUPlusMany;	// 537 = 0x219
    _Bool _supportUnauthenticatedUser;	// 538 = 0x21a
    _Bool _isGFTService;	// 539 = 0x21b
    unsigned int _currentSessionStateCounter;	// 540 = 0x21c
    _Bool _isLightweightParticipant;	// 544 = 0x220
    _Bool _hasReportedReceivedMKM;	// 545 = 0x221
    IDSGroupEncryptionKeyManager *_dataBlobEncryptionManager;	// 552 = 0x228
    IDSGroupSessionDataCryptor *_cryptorForBlobs;	// 560 = 0x230
    NSMutableDictionary *_typeToKeyIDToEncryptedData;	// 568 = 0x238
    NSMutableDictionary *_typeToParticipantIDToDecryptedDataBlob;	// 576 = 0x240
    NSMutableDictionary *_keyIDToParticipantID;	// 584 = 0x248
    _Bool _isServerMaterialExchangeEnabled;	// 592 = 0x250
    NSSet *_serverDesiredKeyMaterialsFromGroupEncryptionController;	// 600 = 0x258
    CDUnknownBlockType _serverDesiredKeyMaterialsSigner;	// 608 = 0x260
    NSData *_encryptedDataBlob;	// 616 = 0x268
    NSData *_encryptedMirageHandshakeBlob;	// 624 = 0x270
    _Bool _reportedMKMOverQRArrivalTime;	// 632 = 0x278
    double _MKMOverQRQUICTime;	// 640 = 0x280
    double _MKMOverPushTime;	// 648 = 0x288
    double _MKMOverQRTime;	// 656 = 0x290
    _Bool _isFastSync;	// 664 = 0x298
    double _timeBase;	// 672 = 0x2a0
    struct os_unfair_lock_s _lock;	// 680 = 0x2a8
    NSString *_clientID;	// 688 = 0x2b0
    IDSDSessionInvitationManager *_invitationManager;	// 696 = 0x2b8
    IDSDSessionMessenger *_messenger;	// 704 = 0x2c0
    IDSGFTMetricsCollector *_metricsCollector;	// 712 = 0x2c8
    IDSDSessionKeyValueDelivery *_keyValueDelivery;	// 720 = 0x2d0
    IDSDSessionSharedState *_sharedState;	// 728 = 0x2d8
    IDSDGroupStatusNotificationController *_groupStatusNotificationController;	// 736 = 0x2e0
    NSSet *_serverDesiredMaterials;	// 744 = 0x2e8
}

- (void).cxx_destruct;	// IMP=0x001000000013add0
@property(readonly) NSSet *serverDesiredMaterials; // @synthesize serverDesiredMaterials=_serverDesiredMaterials;
@property(retain, nonatomic) IDSDGroupStatusNotificationController *groupStatusNotificationController; // @synthesize groupStatusNotificationController=_groupStatusNotificationController;
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(readonly, nonatomic) IDSDSessionKeyValueDelivery *keyValueDelivery; // @synthesize keyValueDelivery=_keyValueDelivery;
@property(readonly, nonatomic) IDSGFTMetricsCollector *metricsCollector; // @synthesize metricsCollector=_metricsCollector;
@property(readonly, nonatomic) NSData *encryptedMirageHandshakeBlob; // @synthesize encryptedMirageHandshakeBlob=_encryptedMirageHandshakeBlob;
@property(readonly, nonatomic) NSData *encryptedDataBlob; // @synthesize encryptedDataBlob=_encryptedDataBlob;
@property(nonatomic) _Bool sharedSessionHasJoined; // @synthesize sharedSessionHasJoined=_sharedSessionHasJoined;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) NSArray *requiredLackOfCapabilities;
@property(readonly, nonatomic) NSArray *requiredCapabilities;
- (unsigned long long)connectionCountHint;	// IMP=0x001000000013a8b0
- (_Bool)_useBTDatagramPipe;	// IMP=0x001000000013a850
- (void)_setClientType:(long long)arg1;	// IMP=0x001000000013a7f0
- (_Bool)isLightweightParticipant;	// IMP=0x001000000013a7d0
- (_Bool)isScreenSharingSession;	// IMP=0x001000000013a770
- (unsigned int)state;	// IMP=0x001000000013a710
- (id)clientChannelUUID;	// IMP=0x001000000013a6f0
- (id)fromID;	// IMP=0x001000000013a680
- (id)groupID;	// IMP=0x001000000013a610
- (id)accountID;	// IMP=0x001000000013a5a0
- (id)participantID;	// IMP=0x001000000013a530
- (long long)clientType;	// IMP=0x001000000013a4d0
- (_Bool)enableQuickRelay;	// IMP=0x001000000013a470
- (_Bool)isInitiator;	// IMP=0x001000000013a410
- (id)uniqueID;	// IMP=0x001000000013a3a0
- (id)destinationsLightweightStatus;	// IMP=0x001000000013a330
- (id)destinations;	// IMP=0x001000000013a2c0
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x001000000013a1c0
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x001000000013a160
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x001000000013a0d0
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x001000000013a040
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x0010000000139fb0
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x0010000000139f40
- (void)setRemoteBlob:(id)arg1;	// IMP=0x0010000000139eb0
- (void)receivedEndMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000139e00
- (void)receivedSessionMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000139d50
- (void)receivedCancelMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000139ca0
- (void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000139bf0
- (void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000139b40
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x0010000000139a90
- (void)declineInvitationWithData:(id)arg1 forceFromID:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x00100000001399c0
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x0010000000139940
- (void)declineInvitation;	// IMP=0x00100000001398f0
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x0010000000139870
- (void)acceptInvitation;	// IMP=0x0010000000139820
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x00100000001397c0
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x0010000000139740
- (void)cancelInvitation;	// IMP=0x00100000001396f0
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x0010000000139660
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00100000001395d0
- (void)sendCancelInvitationMessage;	// IMP=0x0010000000139570
- (void)invitationDeclined;	// IMP=0x0010000000139510
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x0010000000139400
- (void)didSessionReinitiated;	// IMP=0x00100000001393f0
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001383b0
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000137730
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001362d0
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000134e30
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000134a90
- (void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001344e0
- (void)reinitiate;	// IMP=0x0010000000132550
- (void)registerMultiplexerTransport;	// IMP=0x0010000000131ea0
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2 isLightweightParticipant:(_Bool)arg3;	// IMP=0x0010000000131340
- (id)_createGroupSessionActiveParticipantsFromParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x0010000000130890
- (void)_updateActiveLightweightParticipants:(id)arg1;	// IMP=0x00100000001301a0
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x001000000012f5b0
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x001000000012f260
- (void)onURI2ParticipantIDMappingChange:(id)arg1 allocateResponse:(id)arg2;	// IMP=0x001000000012ec40
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x001000000012e2f0
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012dca0
- (void)getParticipantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012d5b0
- (void)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x001000000012cec0
- (void)requestMaterialsForParticipantIDs:(id)arg1 materialType:(int)arg2;	// IMP=0x001000000012c780
- (void)requestEncryptionKeyForParticipantIDs:(id)arg1;	// IMP=0x001000000012c0e0
- (void);	// IMP=0x001000000012bf20
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x001000000012b560
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012b370
- (void)InvalidateStableKeyMaterialInFrameworkCache:(id)arg1;	// IMP=0x001000000012b0e0
- (void)recvStableKeyMaterialForFrameworkCache:(id)arg1;	// IMP=0x001000000012a700
- (void)_decryptReceivedDataBlobsUsingSKMs;	// IMP=0x0010000000128db0
- (void)receiveAndDecryptEncryptedDataBlobs:(id)arg1;	// IMP=0x0010000000128370
- (void)_sendClientDecryptedDatabBlobs:(id)arg1 type:(int)arg2 forParticipant:(id)arg3;	// IMP=0x0010000000127d30
- (void)invalidateKeyMaterialByKeyIndexes:(id)arg1;	// IMP=0x0010000000127c90
- (void)didSendKeyMaterial:(id)arg1 duration:(double)arg2;	// IMP=0x0010000000127c10
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00100000001275f0
- (void)didCreateMKM:(id)arg1;	// IMP=0x0010000000127560
- (void)updateServerDesiredKeyMaterials;	// IMP=0x0010000000127140
- (id)serverDesiredKeyMaterials;	// IMP=0x00100000001270a0
- (id)getDataByKey:(unsigned int)arg1;	// IMP=0x0010000000127000
- (void)updateServerDesiredKeyValueDeliveryMaterialsNeeded;	// IMP=0x0010000000126d50
- (id)getDesiredMaterialSetForEncryptedData;	// IMP=0x0010000000126ca0
- (void)setServerDesiredKeyMaterials:(id)arg1 signer:(CDUnknownBlockType)arg2;	// IMP=0x00100000001269f0
- (void)sendKeyMaterialMessageDataOverQR:(id)arg1 toDestination:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000001263a0
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x0010000000125150
- (void)leaveGroupSession:(id)arg1 options:(id)arg2;	// IMP=0x0010000000124180
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x0010000000124000
- (void)joinWithOptions:(id)arg1;	// IMP=0x0010000000121080
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x0010000000120b40
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x001000000011fca0
- (void)_sendConnectedLinkInfoToAVC;	// IMP=0x001000000011fb60
- (void)updateParticipantType:(unsigned short)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 withContext:(id)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x001000000011e0b0
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011dc40
- (void)removeParticipantIDs:(id)arg1;	// IMP=0x001000000011d190
- (void)manageDesignatedMembers:(id)arg1 withType:(unsigned short)arg2;	// IMP=0x001000000011c650
- (void)updateMembers:(id)arg1 withContext:(id)arg2 messagingCapabilities:(id)arg3 triggeredLocally:(_Bool)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x0010000000118330
- (_Bool)destinationsContainFromID:(id)arg1;	// IMP=0x0010000000117c10
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x0010000000117b50
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 status:(unsigned int)arg5;	// IMP=0x0010000000117a90
- (void)_sendSessionInfoResponseErrorToClient:(unsigned int)arg1;	// IMP=0x0010000000117950
- (void)terminateCallDueToIdleClientForLink:(id)arg1;	// IMP=0x0010000000117910
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x0010000000117890
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x0010000000117840
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00100000001177d0
- (void)link:(id)arg1 didReceiveErrorIndicationWithCode:(unsigned int)arg2;	// IMP=0x0010000000117410
- (void)link:(id)arg1 didReceiveEncryptedDataBlobs:(id)arg2;	// IMP=0x00100000001171c0
- (void)didReceiveBlockedIndicationForLink:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x0010000000117170
- (void)link:(id)arg1 didReceiveMappedParticipantsDict:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x0010000000116b20
- (void)_sendParticipantMappingUpdateToClient:(id)arg1 forLinkID:(BOOL)arg2 shouldReplace:(_Bool)arg3;	// IMP=0x0010000000116970
- (id)_breakDictionaryIntoMultipleChunks:(id)arg1 chunkSize:(int)arg2;	// IMP=0x00100000001163e0
- (id)_createOneWayParticipantDictionaryFromMappedParticipantsDict:(id)arg1;	// IMP=0x0010000000116200
- (void)link:(id)arg1 didReceivePluginDisconnect:(id)arg2;	// IMP=0x0010000000116090
- (void)link:(id)arg1 didReceiveRequestToPurgeRegistration:(id)arg2;	// IMP=0x0010000000115dd0
- (void)link:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x0010000000115d50
- (void)link:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x0010000000115cd0
- (void)link:(id)arg1 didReceiveSessionStateCounter:(unsigned int)arg2;	// IMP=0x0010000000115c80
- (void)link:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x0010000000115c00
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x0010000000115b90
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x0010000000115b30
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x0010000000115ab0
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x0010000000115a40
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00100000001159f0
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00100000001159a0
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x0010000000115950
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x0010000000115900
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000001158b0
- (void)link:(id)arg1 didReiceiveChildConnectionID:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x0010000000114d80
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x0010000000112e00
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_dc2926a3 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x0010000000112d60
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x0010000000112cf0
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000001128c0
- (void)link:(id)arg1 didReceiveMaterialInfo:(id)arg2 material:(id)arg3;	// IMP=0x001000000010c9b0
- (void)materialInfoError:(id)arg1;	// IMP=0x001000000010c920
- (_Bool)shouldVerifySignatureForMaterialType:(int)arg1;	// IMP=0x001000000010c880
- (void)link:(id)arg1 didReceiveKeyMaterialMessageData:(id)arg2 fromParticipantIDs:(id)arg3 toParticipantID:(id)arg4;	// IMP=0x001000000010c7c0
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x001000000010c750
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x001000000010c4d0
- (void)_sendQREventToAVC:(id)arg1;	// IMP=0x001000000010c020
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x001000000010bb20
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x001000000010b350
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x001000000010a6b0
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x0010000000109660
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x0010000000109080
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x0010000000108ca0
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0010000000108630
- (void)setRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x0010000000106160
- (void)setPreferences:(id)arg1;	// IMP=0x0010000000105c40
- (void)setMuted:(_Bool)arg1;	// IMP=0x0010000000105750
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x0010000000105260
- (id)connectDuration;	// IMP=0x00100000001050a0
- (id)sessionDuration;	// IMP=0x0010000000104f90
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x0010000000104ea0
- (void)_notifyClientsSessionStopped;	// IMP=0x0010000000104460
- (void)_cleanupSocketPairConnection;	// IMP=0x0010000000104420
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00100000001043a0
- (id)_acceptedDeviceToken;	// IMP=0x0010000000103e20
- (id)_acceptedDeviceUniqueID;	// IMP=0x0010000000103720
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x0010000000102230
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x0010000000101610
- (void)_resetPreferences:(id)arg1;	// IMP=0x0010000000101190
- (void)_endSession;	// IMP=0x00100000000ff070
- (void)endSessionWithData:(id)arg1;	// IMP=0x00100000000fed70
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x00100000000fe310
- (void)endSession;	// IMP=0x00100000000fe280
- (void)reconnectSession;	// IMP=0x00100000000fdfe0
- (void)_cleanupQuickRelaySession;	// IMP=0x00100000000fdc10
- (void)cleanupSessionWithCleanStatus:(_Bool)arg1;	// IMP=0x00100000000fc280
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00100000000fbd30
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000fbb80
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00100000000fbb20
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00100000000fba30
- (_Bool)shouldReportUPlusOneKey;	// IMP=0x00100000000fb9f0
- (id)getAppID;	// IMP=0x00100000000fb980
- (id)getFromService;	// IMP=0x00100000000fb860
- (id)getCallerCert;	// IMP=0x00100000000fb720
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000000fb480
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00100000000fab20
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00100000000fa460
- (void)checkAndCallSessionStart;	// IMP=0x00100000000fa320
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00100000000f9ae0
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00100000000f9a40
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00100000000f9720
- (void)startQRSession;	// IMP=0x00100000000f96f0
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00100000000f7580
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00100000000f7480
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00100000000f6c60
- (void)_noteJoinNotificationWillSend;	// IMP=0x00100000000f5b30
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00100000000ee2b0
- (id)formAndEncryptDataBlob:(id)arg1 type:(int)arg2;	// IMP=0x00100000000edcf0
- (void)updateRelevantEncryptedDataBlob;	// IMP=0x00100000000edb80
- (void)_sendLinkSelectionPreference:(id)arg1 linkScore:(id)arg2 ipPreference:(id)arg3;	// IMP=0x00100000000eda80
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00100000000eda60
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00100000000ecb80
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00100000000ebd30
- (void)unregisterPluginWithOptions:(id)arg1;	// IMP=0x00100000000eb480
- (void)registerPluginWithOptions:(id)arg1;	// IMP=0x00100000000eabd0
- (void)requestURIsForParticipantIDs:(id)arg1 withRequestID:(id)arg2;	// IMP=0x00100000000ea3e0
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00100000000e7060
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00100000000e4e20
- (id)_extractFieldBytesFromMetadata:(const void *)arg1 ofSize:(unsigned int)arg2 packetBuffer:(CDStruct_dc2926a3 *)arg3;	// IMP=0x00100000000d3690
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x00100000000cff50
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x00100000000cf080
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00100000000ce700
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_dc2926a3 *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x00100000000cc4f0
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00100000000cc230
- (void)unregisterClientChannel;	// IMP=0x00100000000cc150
- (void)registerClientChannel;	// IMP=0x00100000000caba0
- (void)_lightweightParticipantSync:(unsigned char)arg1;	// IMP=0x00100000000ca910
- (void)mapMKIFromMaterial:(id)arg1 token:(id)arg2;	// IMP=0x00100000000ca7f0
- (void)reportMKMReceivedOverQRFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000ca750
- (void)reportMKMReceivedOverPushViaCacheForParticipantID:(unsigned long long)arg1 material:(id)arg2;	// IMP=0x00100000000ca310
- (void)reportMKMReceivedOverPushFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000ca270
- (void)reportPreKeyReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000ca1e0
- (void)reportJoinReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000ca180
- (void)reportFirstMKMReceivedFromQR:(double)arg1;	// IMP=0x00100000000ca150
- (void)reportFirstMKMReceivedFromPush:(double)arg1;	// IMP=0x00100000000c9910
- (void)_cleanupSessionConnection;	// IMP=0x00100000000c9300
- (void)_reportRTC;	// IMP=0x00100000000c8100
- (id)buildRTCSummaryReport;	// IMP=0x00100000000c7d10
- (id)rtcNormalizeTime:(double)arg1;	// IMP=0x00100000000c7c70
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x00100000000c6e80
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x00100000000c1f80
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x00100000000c1e70
- (void)_generateKeys:(id)arg1;	// IMP=0x00100000000c1190
- (long long)_loggingFlags;	// IMP=0x00100000000c1110
- (void)_selectDefaultMic;	// IMP=0x00100000000c1100
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x00100000004766d0
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x0010000000475b50
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x0010000000475a40
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x0010000000475930
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x0010000000475820
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x0010000000475710
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x0010000000475600
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x00100000004754f0
- (MISSING_TYPE *)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x00100000004753e0
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x00100000004752d0
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x00100000004751c0
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x0010000000475060
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x0010000000474f50
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x0010000000474e00
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x0010000000474ac0
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x0010000000474890
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x00100000004747a0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

