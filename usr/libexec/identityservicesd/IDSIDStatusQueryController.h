//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSPeerIDManager, IMTimer, NSMutableDictionary, NSMutableSet, NSRecursiveLock, NSString;
@protocol IDSIDStatusDependencyProvider, IMUserDefaults;

@interface IDSIDStatusQueryController : NSObject
{
    IMTimer *_purgeTimer;	// 8 = 0x8
    NSRecursiveLock *_lock;	// 16 = 0x10
    NSMutableDictionary *_idStatusCache;	// 24 = 0x18
    NSMutableDictionary *_completionBlocks;	// 32 = 0x20
    NSMutableDictionary *_startQueryDateByTopLevelService;	// 40 = 0x28
    CDUnknownBlockType _purgeCancelBlock;	// 48 = 0x30
    CDUnknownBlockType _purgeEnqueueBlock;	// 56 = 0x38
    _Bool _loaded;	// 64 = 0x40
    NSMutableDictionary *_numQueriesThisHourByTopLevelService;	// 72 = 0x48
    NSMutableSet *_reportedRateLimitedThisHour;	// 80 = 0x50
    _Bool _allowProxyQueries;	// 88 = 0x58
    IDSPeerIDManager *_peerIDManager;	// 96 = 0x60
    id <IMUserDefaults> _userDefaults;	// 104 = 0x68
    id <IDSIDStatusDependencyProvider> _dependencyProvider;	// 112 = 0x70
    NSString *_plistCachePath;	// 120 = 0x78
}

+ (id)sharedInstance;	// IMP=0x004000000045ed90
- (void).cxx_destruct;	// IMP=0x00200000004746a0
@property(nonatomic) _Bool allowProxyQueries; // @synthesize allowProxyQueries=_allowProxyQueries;
@property(retain, nonatomic) NSString *plistCachePath; // @synthesize plistCachePath=_plistCachePath;
@property(retain, nonatomic) id <IDSIDStatusDependencyProvider> dependencyProvider; // @synthesize dependencyProvider=_dependencyProvider;
@property(retain, nonatomic) id <IMUserDefaults> userDefaults; // @synthesize userDefaults=_userDefaults;
// Error: Property attributes should begin with the type ('T') attribute, property name: peerIDManager
// Property attributes: (null)

- (void)_saveCache;	// IMP=0x00100000004741d0
- (void)_wipeLegacyCache;	// IMP=0x0010000000473ef0
- (id)_loadLegacyCache;	// IMP=0x0010000000473cb0
- (void)_loadCache;	// IMP=0x0010000000473430
- (id)_plistFilePath;	// IMP=0x0010000000473240
- (void)_pruneExpiredStatusUnknownEntries;	// IMP=0x0010000000471dd0
- (void)_loadIfNeeded;	// IMP=0x0010000000471d50
- (void)_setPurgeTimer;	// IMP=0x0010000000471d00
- (void)_flush;	// IMP=0x0010000000471900
- (void)clearCache;	// IMP=0x0010000000471230
- (void)removeCompletionBlockForUniqueIdentifier:(id)arg1;	// IMP=0x0010000000470dc0
- (void)addCompletionBlock:(CDUnknownBlockType)arg1 forUniqueIdentifier:(id)arg2;	// IMP=0x0010000000470600
- (void)_sendIDStatusChanges:(id)arg1 forService:(id)arg2 URI:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x001000000046fd40
- (void)infoForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 infoType:(unsigned long long)arg5 infoOptions:(id)arg6 lightQuery:(_Bool)arg7 allowQuery:(_Bool)arg8 completion:(CDUnknownBlockType)arg9;	// IMP=0x001000000046eef0
- (void)remoteDevicesForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x001000000046e180
- (id)currentCacheForService:(id)arg1;	// IMP=0x001000000046dc90
- (id)currentCache;	// IMP=0x001000000046d6e0
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 respectExpiry:(_Bool)arg4;	// IMP=0x001000000046c6c0
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x001000000046c600
- (void)setCachedIDStatus:(unsigned int)arg1 ForID:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4;	// IMP=0x001000000046bb20
- (void)requestIDStatusForID:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x001000000046b990
- (void)requestIDStatusForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 bypassLimit:(_Bool)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x001000000046aec0
- (void)_lookupIDStatusForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 bypassLimit:(_Bool)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x0010000000465020
- (_Bool)hasValidStatusForURI:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x0010000000464a80
- (id)_negativeTTLForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000004648d0
- (id)_validExpiryForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x0010000000464720
- (id)_lookupDateForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x0010000000464570
- (id)_cachedResultsForURIs:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00100000004641b0
- (void)noteIncomingID:(id)arg1 fromService:(id)arg2;	// IMP=0x0010000000463700
- (void)removeCachedEntriesForService:(id)arg1;	// IMP=0x0010000000463450
- (unsigned int)_IDStatusForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x0010000000462540
- (void)_updateCacheWithStatusUpdates:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 success:(_Bool)arg4 hadError:(_Bool)arg5 negativeCacheHints:(id)arg6;	// IMP=0x00100000004608a0
- (void)dealloc;	// IMP=0x0010000000460820
- (id)init;	// IMP=0x0010000000460730
- (void)_purgeTimerFiredOnMain;	// IMP=0x0010000000460660
- (id)initWithShouldAllowProxyQueries:(_Bool)arg1 peerIDManager:(id)arg2 userDefaults:(id)arg3 statusDepencencyProvider:(id)arg4;	// IMP=0x001000000045ee50

@end

