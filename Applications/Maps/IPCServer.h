//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BannerSource, CLInUseAssertion, GuidanceETA, IPCLoadDirectionsMessage, MKJunction, MKServerFormattedString, MNTrafficIncidentAlert, MNTransitAlert, NSArray, NSDate, NSMapTable, NSString, NSTimer, NSUUID, NSXPCConnection, NSXPCListenerEndpoint, NavSignLaneGuidanceInfo, NavSignShieldInfo, UNNotificationSettings;
@protocol BackgroundNavigationDelegate, ExternalGuidanceSource, GEOTransitArtworkDataSource, VirtualGarageSource;

@interface IPCServer : NSObject
{
    unsigned long long _lastSeenManeuverAlert;	// 8 = 0x8
    _Bool _waitingForDistanceAndTimeToManeuver;	// 16 = 0x10
    MNTrafficIncidentAlert *_trafficIncidentAlert;	// 24 = 0x18
    _Bool _pendingSafetyWarning;	// 32 = 0x20
    _Bool _hasCheckedNotificationSettingsForManeuver;	// 33 = 0x21
    _Bool _isPersistentDisplay;	// 34 = 0x22
    _Bool _isStickySignal;	// 35 = 0x23
    _Bool _spokenEventProcessing;	// 36 = 0x24
    _Bool _isRerouting;	// 37 = 0x25
    NSUUID *_currentSpokenEventID;	// 40 = 0x28
    int _drivingSide;	// 48 = 0x30
    CLInUseAssertion *_coreLocationInUseAssertion;	// 56 = 0x38
    NSTimer *_trafficAlertTimer;	// 64 = 0x40
    NSTimer *_waitingToRespondToMessageTimer;	// 72 = 0x48
    NSTimer *_waitingForKeyScenePollTimer;	// 80 = 0x50
    NSXPCConnection *_siriPluginConnection;	// 88 = 0x58
    NSXPCConnection *_companionDaemonConnection;	// 96 = 0x60
    NSXPCConnection *_pushDaemonConnection;	// 104 = 0x68
    BannerSource *_bannerSource;	// 112 = 0x70
    IPCLoadDirectionsMessage *_pendingLoadDirectionsMessage;	// 120 = 0x78
    unsigned long long _keyScenePollCount;	// 128 = 0x80
    MNTransitAlert *_alightAlert;	// 136 = 0x88
    _Bool _hasPendingAlight;	// 144 = 0x90
    _Bool _shownWeakLocationAlert;	// 145 = 0x91
    _Bool _hasPendingWeakLocationAlert;	// 146 = 0x92
    NSMapTable *_occlusionStates;	// 152 = 0x98
    _Bool _etaOnlyNavMode;	// 160 = 0xa0
    _Bool _routePreviewGuidanceNavMode;	// 161 = 0xa1
    _Bool _needsGuidanceUpdate;	// 162 = 0xa2
    int _maneuver;	// 164 = 0xa4
    int _transportType;	// 168 = 0xa8
    double _distanceToManeuver;	// 176 = 0xb0
    double _timeToManeuver;	// 184 = 0xb8
    GuidanceETA *_latestETA;	// 192 = 0xc0
    double _distanceToRoute;	// 200 = 0xc8
    unsigned long long _state;	// 208 = 0xd0
    id <ExternalGuidanceSource> _externalGuidanceSource;	// 216 = 0xd8
    id <BackgroundNavigationDelegate> _backgroundNavigationDelegate;	// 224 = 0xe0
    id <VirtualGarageSource> _virtualGarageSource;	// 232 = 0xe8
    NSXPCListenerEndpoint *_siriPluginListenerEndpoint;	// 240 = 0xf0
    NSXPCListenerEndpoint *_companionDaemonListenerEndpoint;	// 248 = 0xf8
    NSXPCListenerEndpoint *_pushDaemonListenerEndpoint;	// 256 = 0x100
    MKJunction *_junction;	// 264 = 0x108
    id <GEOTransitArtworkDataSource> _artworkOverride;	// 272 = 0x110
    MKServerFormattedString *_distanceText;	// 280 = 0x118
    NSArray *_maneuverInstructions;	// 288 = 0x120
    NSArray *_secondaryManeuverInstructions;	// 296 = 0x128
    NSUUID *__maneuverID;	// 304 = 0x130
    NavSignShieldInfo *_shieldInfo;	// 312 = 0x138
    UNNotificationSettings *_notificationSettings;	// 320 = 0x140
    NSDate *_lastSceneDeactivationTime;	// 328 = 0x148
    NavSignLaneGuidanceInfo *_laneGuidanceInfo;	// 336 = 0x150
    CDUnknownBlockType _loadDirectionsDelayedReply;	// 344 = 0x158
    CDUnknownBlockType _startNavigationDelayedReply;	// 352 = 0x160
}

+ (id)sharedServer;	// IMP=0x00200000001f6fcf
- (void).cxx_destruct;	// IMP=0x00200000001fdf5a
@property(copy, nonatomic) CDUnknownBlockType startNavigationDelayedReply; // @synthesize startNavigationDelayedReply=_startNavigationDelayedReply;
@property(copy, nonatomic) CDUnknownBlockType loadDirectionsDelayedReply; // @synthesize loadDirectionsDelayedReply=_loadDirectionsDelayedReply;
@property(retain, nonatomic) NavSignLaneGuidanceInfo *laneGuidanceInfo; // @synthesize laneGuidanceInfo=_laneGuidanceInfo;
@property(retain, nonatomic) NSDate *lastSceneDeactivationTime; // @synthesize lastSceneDeactivationTime=_lastSceneDeactivationTime;
@property(copy, nonatomic) UNNotificationSettings *notificationSettings; // @synthesize notificationSettings=_notificationSettings;
@property(nonatomic) _Bool needsGuidanceUpdate; // @synthesize needsGuidanceUpdate=_needsGuidanceUpdate;
@property(retain, nonatomic) NavSignShieldInfo *shieldInfo; // @synthesize shieldInfo=_shieldInfo;
@property(copy, nonatomic) NSUUID *_maneuverID; // @synthesize _maneuverID=__maneuverID;
@property(copy, nonatomic) NSArray *secondaryManeuverInstructions; // @synthesize secondaryManeuverInstructions=_secondaryManeuverInstructions;
@property(copy, nonatomic) NSArray *maneuverInstructions; // @synthesize maneuverInstructions=_maneuverInstructions;
@property(retain, nonatomic) MKServerFormattedString *distanceText; // @synthesize distanceText=_distanceText;
@property(retain, nonatomic) id <GEOTransitArtworkDataSource> artworkOverride; // @synthesize artworkOverride=_artworkOverride;
@property(retain, nonatomic) MKJunction *junction; // @synthesize junction=_junction;
@property(retain, nonatomic) NSXPCListenerEndpoint *pushDaemonListenerEndpoint; // @synthesize pushDaemonListenerEndpoint=_pushDaemonListenerEndpoint;
@property(retain, nonatomic) NSXPCListenerEndpoint *companionDaemonListenerEndpoint; // @synthesize companionDaemonListenerEndpoint=_companionDaemonListenerEndpoint;
@property(retain, nonatomic) NSXPCListenerEndpoint *siriPluginListenerEndpoint; // @synthesize siriPluginListenerEndpoint=_siriPluginListenerEndpoint;
@property(nonatomic) __weak id <VirtualGarageSource> virtualGarageSource; // @synthesize virtualGarageSource=_virtualGarageSource;
@property(nonatomic) _Bool routePreviewGuidanceNavMode; // @synthesize routePreviewGuidanceNavMode=_routePreviewGuidanceNavMode;
@property(nonatomic) _Bool etaOnlyNavMode; // @synthesize etaOnlyNavMode=_etaOnlyNavMode;
@property(nonatomic) __weak id <BackgroundNavigationDelegate> backgroundNavigationDelegate; // @synthesize backgroundNavigationDelegate=_backgroundNavigationDelegate;
@property(nonatomic) __weak id <ExternalGuidanceSource> externalGuidanceSource; // @synthesize externalGuidanceSource=_externalGuidanceSource;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) int _transportType; // @synthesize _transportType;
@property(nonatomic) double _distanceToRoute; // @synthesize _distanceToRoute;
@property(retain, nonatomic) GuidanceETA *_latestETA; // @synthesize _latestETA;
@property(nonatomic) double _timeToManeuver; // @synthesize _timeToManeuver;
@property(nonatomic) double _distanceToManeuver; // @synthesize _distanceToManeuver;
@property(nonatomic) int _maneuver; // @synthesize _maneuver;
@property(nonatomic) int _drivingSide; // @synthesize _drivingSide;
- (void)navigationService:(id)arg1 didReceiveRouteSignalStrength:(unsigned long long)arg2;	// IMP=0x00100000001fdb90
- (void)navigationService:(id)arg1 didReceiveTransitAlert:(id)arg2;	// IMP=0x00100000001fdb10
- (void)navigationService:(id)arg1 didProcessSpeechEvent:(id)arg2;	// IMP=0x00100000001fdac9
- (void)navigationService:(id)arg1 willProcessSpeechEvent:(id)arg2;	// IMP=0x00100000001fda71
- (void)navigationService:(id)arg1 hideLaneDirectionsForId:(id)arg2;	// IMP=0x00100000001fda5d
- (void)navigationService:(id)arg1 showLaneDirections:(id)arg2;	// IMP=0x00100000001fd9e4
- (void)navigationService:(id)arg1 usePersistentDisplay:(_Bool)arg2;	// IMP=0x00100000001fd963
- (void)navigationService:(id)arg1 updateSignsWithInfo:(id)arg2;	// IMP=0x00100000001fd01a
- (void)navigationServiceEndGuidanceUpdate:(id)arg1;	// IMP=0x00100000001fd008
- (void)navigationServiceBeginGuidanceUpdate:(id)arg1;	// IMP=0x00100000001fd002
- (void)navigationService:(id)arg1 didChangeGuidanceState:(id)arg2;	// IMP=0x00100000001fcfd4
- (void)navigationService:(id)arg1 didChangeNavigationState:(int)arg2;	// IMP=0x00100000001fcf30
- (void)navigationService:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00100000001fceb5
- (void)navigationService:(id)arg1 failedRerouteWithErrorCode:(long long)arg2;	// IMP=0x00100000001fce9f
- (void)navigationServiceDidCancelReroute:(id)arg1;	// IMP=0x00100000001fce89
- (void)navigationService:(id)arg1 didReroute:(id)arg2;	// IMP=0x00100000001fce46
- (void)navigationServiceWillReroute:(id)arg1;	// IMP=0x00100000001fce14
- (void)navigationServiceWillResumeFromPause:(id)arg1;	// IMP=0x00100000001fce0e
- (void)navigationServiceWillPause:(id)arg1;	// IMP=0x00100000001fce08
- (void)navigationService:(id)arg1 willChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;	// IMP=0x00100000001fcd77
- (void)navigationService:(id)arg1 didSwitchToNewTransportType:(int)arg2 newRoute:(id)arg3 traffic:(id)arg4;	// IMP=0x00100000001fccf0
- (void)navigationService:(id)arg1 didInvalidateTrafficIncidentAlert:(id)arg2;	// IMP=0x00100000001fccdb
- (void)navigationService:(id)arg1 didUpdateTrafficIncidentAlert:(id)arg2;	// IMP=0x00100000001fccc6
- (void)navigationService:(id)arg1 didReceiveTrafficIncidentAlert:(id)arg2 responseCallback:(CDUnknownBlockType)arg3;	// IMP=0x00100000001fccb1
- (void)navigationService:(id)arg1 didEnableGuidancePrompts:(_Bool)arg2;	// IMP=0x00100000001fcc81
- (void)navigationService:(id)arg1 didArriveAtWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3;	// IMP=0x00100000001fc9fd
- (void)navigationService:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned long long)arg2;	// IMP=0x00100000001fc80a
- (void)navigationService:(id)arg1 displayPrimaryStep:(id)arg2 instructions:(id)arg3 shieldType:(int)arg4 shieldText:(id)arg5 drivingSide:(int)arg6 maneuverStepIndex:(unsigned long long)arg7 isSynthetic:(_Bool)arg8;	// IMP=0x00100000001fc4c7
- (void)navigationService:(id)arg1 didUpdateDistanceUntilSign:(double)arg2 timeUntilSign:(double)arg3 forStepIndex:(unsigned long long)arg4;	// IMP=0x00100000001fc38e
- (void)navigationService:(id)arg1 didUpdateProceedToRouteDistance:(double)arg2 displayString:(id)arg3 closestStepIndex:(unsigned long long)arg4;	// IMP=0x00100000001fc2d4
- (void)navigationService:(id)arg1 didUpdateDisplayETA:(id)arg2 remainingDistance:(id)arg3 batteryChargeInfo:(id)arg4;	// IMP=0x00100000001fc1aa
- (void)_vibrateForRerouteWithService:(id)arg1;	// IMP=0x00100000001fbfca
- (void)navigationStateDidChangeTo:(unsigned long long)arg1 reason:(id)arg2 error:(id)arg3;	// IMP=0x00100000001fbc57
- (void)navigationStateDidChangeTo:(unsigned long long)arg1 reason:(id)arg2;	// IMP=0x00100000001fbc42
- (void)setNeedsToDisplaySafetyWarning;	// IMP=0x00100000001fbc38
- (void)_checkKeySceneInternal;	// IMP=0x00100000001fbac0
- (void)_checkKeyOrApplicationScene;	// IMP=0x00100000001fbaa7
- (void)_startWaitingToHandleMessage:(id)arg1;	// IMP=0x00100000001fb9e8
- (void)_timedOutWaitingToSendResponse;	// IMP=0x00100000001fb815
- (void)_startWaitingToSendResponse;	// IMP=0x00100000001fb7b3
- (id)_currentGuidanceStateMessageWithGuidanceCausedVibration:(_Bool)arg1;	// IMP=0x00100000001fa632
- (_Bool)_guidanceAffectsDimming;	// IMP=0x00100000001fa587
- (void)_postWeakLocationNotification;	// IMP=0x00100000001fa2ed
- (void)_sendWeakLocationNotificationIfNeededWithGuidanceState:(id)arg1;	// IMP=0x00100000001fa28b
- (void)_pushGuidanceStateIfChangedWithVibration:(_Bool)arg1;	// IMP=0x00100000001fa125
- (void)_pushGuidanceState;	// IMP=0x00100000001fa111
- (void)_noteGuidanceStateChanged;	// IMP=0x00100000001fa0fa
- (void)_sceneWillConnect;	// IMP=0x00100000001fa0ba
- (void)_sceneDidActivate:(id)arg1;	// IMP=0x00100000001fa08c
- (void)_setTimeToManeuver:(double)arg1 distanceToManeuver:(double)arg2 forStep:(id)arg3;	// IMP=0x00100000001f9f98
- (void)setETA:(id)arg1;	// IMP=0x00100000001f9f6a
- (void)setDestinationDisplayName:(id)arg1;	// IMP=0x00100000001f9f64
- (void)showRecalculating;	// IMP=0x00100000001f9f04
- (void)_showNoGuidance;	// IMP=0x00100000001f9eaa
- (void)dismissTrafficIncidentAlert:(id)arg1;	// IMP=0x00100000001f9e8c
- (void)_removeTrafficIncidentAlertFromTimer:(id)arg1;	// IMP=0x00100000001f9dfb
- (void)_invalidatedTrafficIncidentAlert:(id)arg1;	// IMP=0x00100000001f9d7c
- (void)_updatedTrafficIncidentAlert:(id)arg1;	// IMP=0x00100000001f9d4e
- (void)_receivedTrafficIncidentAlert:(id)arg1;	// IMP=0x00100000001f9cb9
- (void)setNavigationVoiceVolume:(id)arg1;	// IMP=0x00100000001f9944
- (void)setNavigationMuted:(id)arg1;	// IMP=0x00100000001f982a
- (void)startPreparedNavigation:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f96d6
- (void)loadDirections:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f946b
- (void)repeatLastGuidanceInstructionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f9225
- (void)repeatLastReroutePromptWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f8fec
- (void)checkNotificationSettingsAndPerformBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f8e2e
- (void)getGuidanceState:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f8958
- (void)endNavigationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f876b
- (void)dismissNavigationSafetyAlertWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f8649
- (void)handleTrafficeReroute:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f8393
- (id)activeBannerViewController;	// IMP=0x00100000001f7b10
- (id)activeCarPlayBannerViewController;	// IMP=0x00100000001f7afa
- (void)_sceneOcclusionChanged:(id)arg1;	// IMP=0x00100000001f791a
- (_Bool)_isInBackground;	// IMP=0x00100000001f78e3
- (_Bool)_isAnySceneForegroundAndNotOccludedForRole:(id)arg1;	// IMP=0x00100000001f75ac
- (_Bool)_isMapsForegroundOnCarPlay;	// IMP=0x00100000001f7590
- (_Bool)_isMapsForegroundOnMainWindow;	// IMP=0x00100000001f753c
- (void)_sceneWillEnterForeground:(id)arg1;	// IMP=0x00100000001f74cb
- (void)_sceneDidEnterBackground:(id)arg1;	// IMP=0x00100000001f745a
- (void)_sceneWillDeactivate:(id)arg1;	// IMP=0x00100000001f73cf
- (void)setState:(unsigned long long)arg1 withReason:(unsigned long long)arg2;	// IMP=0x00100000001f737a
- (void)dealloc;	// IMP=0x00100000001f7298
- (id)init;	// IMP=0x00100000001f70c2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

