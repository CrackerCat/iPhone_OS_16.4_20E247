//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CarAccessoriesOverlay, CarAlertViewController, CarCardsOverlay, CarFocusContainerGuideController, CarFocusOrderEnvironment, CarFocusOrderItem, CarMapControlsOverlay, CarMapNudgerizer, CarMapSettings, CarNavigationDisplay, CarRouteGeniusAnnotationsManager, CarRouteSelectionController, CustomPOIsController, GEOMapServiceTraits, InterruptionManager, MapViewResponder, NSArray, NSLayoutConstraint, NSMapTable, NSMutableArray, NSPointerArray, NSString, NSTimer, PersonalizedItemManager, UILayoutGuide, UITapGestureRecognizer, UIView;
@protocol CarChromeContext, NSObject, UIFocusEnvironment, UIFocusItemContainer;

@interface CarChromeViewController
{
    NSTimer *_autohideIdleTimer;	// 48 = 0x30
    UITapGestureRecognizer *_autohideTapRecognizer;	// 56 = 0x38
    UITapGestureRecognizer *_doubleTapRecognizer;	// 64 = 0x40
    id <NSObject> _autohidePresenceObserverToken;	// 72 = 0x48
    NSPointerArray *_autohideOverrideTokenStack;	// 80 = 0x50
    NSMapTable *_autohideOverrideTokensToBehavior;	// 88 = 0x58
    NSTimer *_navigationObscuredTimeout;	// 96 = 0x60
    _Bool _isCurrentlyVisible;	// 104 = 0x68
    _Bool _mapViewRegionIsChanging;	// 105 = 0x69
    _Bool _configuringMapView;	// 106 = 0x6a
    CarAlertViewController *_currentAlertViewController;	// 112 = 0x70
    NSMutableArray *_alertDismissalBlocks;	// 120 = 0x78
    PersonalizedItemManager *_personalizedItemManager;	// 128 = 0x80
    CustomPOIsController *_customPOIsController;	// 136 = 0x88
    id <CarChromeContext> _restoreFocusForContext;	// 144 = 0x90
    _Bool _ownsFocus;	// 152 = 0x98
    CarFocusContainerGuideController *_focusContainerGuideController;	// 160 = 0xa0
    InterruptionManager *_interruptionManager;	// 168 = 0xa8
    NSLayoutConstraint *_headingUpMapInsetAdjustmentConstraint;	// 176 = 0xb0
    _Bool _runningNavigation;	// 184 = 0xb8
    _Bool _haveVehicleDirection;	// 185 = 0xb9
    long long _sceneType;	// 192 = 0xc0
    CarRouteGeniusAnnotationsManager *_routeGeniusAnnotationsManager;	// 200 = 0xc8
    CarNavigationDisplay *_navigationDisplay;	// 208 = 0xd0
    CarMapSettings *_defaultMapSettings;	// 216 = 0xd8
    CarMapNudgerizer *_nudgerizer;	// 224 = 0xe0
    UILayoutGuide *_notificationLayoutGuide;	// 232 = 0xe8
    CarCardsOverlay *_cardsOverlay;	// 240 = 0xf0
    CarAccessoriesOverlay *_accessoriesOverlay;	// 248 = 0xf8
    CarMapControlsOverlay *_mapControlsOverlay;	// 256 = 0x100
    MapViewResponder *_mapViewResponder;	// 264 = 0x108
    CarRouteSelectionController *_routeSelectionController;	// 272 = 0x110
    UITapGestureRecognizer *_backButtonRecognizer;	// 280 = 0x118
    CDUnknownBlockType _doubleTapBlock;	// 288 = 0x120
    NSMapTable *_chromeItemsByContext;	// 296 = 0x128
    NSMapTable *_lastFocusedIdentifiersByContext;	// 304 = 0x130
    NSMapTable *_lastFocusedItemsByContext;	// 312 = 0x138
}

+ (void)_updateAllowOneHandedZooming;	// IMP=0x002000000010c3f3
+ (_Bool)allowOneHandedZooming;	// IMP=0x001000000010c3e7
+ (Class)userLocationViewClass;	// IMP=0x0010000000109a65
+ (id)localizedLocationAuthorizationMessage;	// IMP=0x0010000000103132
+ (id)localizedLocationAuthorizationTitle;	// IMP=0x0010000000103042
+ (void)initialize;	// IMP=0x0010000000102fbc
- (void).cxx_destruct;	// IMP=0x002000000011582c
@property(retain, nonatomic) NSMapTable *lastFocusedItemsByContext; // @synthesize lastFocusedItemsByContext=_lastFocusedItemsByContext;
@property(retain, nonatomic) NSMapTable *lastFocusedIdentifiersByContext; // @synthesize lastFocusedIdentifiersByContext=_lastFocusedIdentifiersByContext;
@property(retain, nonatomic) NSMapTable *chromeItemsByContext; // @synthesize chromeItemsByContext=_chromeItemsByContext;
@property(copy, nonatomic) CDUnknownBlockType doubleTapBlock; // @synthesize doubleTapBlock=_doubleTapBlock;
@property(retain, nonatomic) UITapGestureRecognizer *backButtonRecognizer; // @synthesize backButtonRecognizer=_backButtonRecognizer;
@property(retain, nonatomic) CarRouteSelectionController *routeSelectionController; // @synthesize routeSelectionController=_routeSelectionController;
@property(retain, nonatomic) MapViewResponder *mapViewResponder; // @synthesize mapViewResponder=_mapViewResponder;
@property(nonatomic) _Bool haveVehicleDirection; // @synthesize haveVehicleDirection=_haveVehicleDirection;
@property(retain, nonatomic) CarMapControlsOverlay *mapControlsOverlay; // @synthesize mapControlsOverlay=_mapControlsOverlay;
@property(retain, nonatomic) CarAccessoriesOverlay *accessoriesOverlay; // @synthesize accessoriesOverlay=_accessoriesOverlay;
@property(retain, nonatomic) CarCardsOverlay *cardsOverlay; // @synthesize cardsOverlay=_cardsOverlay;
@property(retain, nonatomic) UILayoutGuide *notificationLayoutGuide; // @synthesize notificationLayoutGuide=_notificationLayoutGuide;
@property(retain, nonatomic) CarMapNudgerizer *nudgerizer; // @synthesize nudgerizer=_nudgerizer;
@property(retain, nonatomic) CarMapSettings *defaultMapSettings; // @synthesize defaultMapSettings=_defaultMapSettings;
@property(nonatomic, getter=isRunningNavigation) _Bool runningNavigation; // @synthesize runningNavigation=_runningNavigation;
@property(retain, nonatomic) CarNavigationDisplay *navigationDisplay; // @synthesize navigationDisplay=_navigationDisplay;
@property(retain, nonatomic) CarRouteGeniusAnnotationsManager *routeGeniusAnnotationsManager; // @synthesize routeGeniusAnnotationsManager=_routeGeniusAnnotationsManager;
@property(readonly, nonatomic) long long sceneType; // @synthesize sceneType=_sceneType;
- (void)updateMapViewFrameRate;	// IMP=0x00100000001155e5
- (_Bool)isEligibleForMapViewFrameRateLimiting;	// IMP=0x00100000001155d3
- (CDStruct_8ce276cf)lowPowerModeRateLimitEnabledConfigKey;	// IMP=0x00100000001155c0
- (CDStruct_8ce276cf)batteryLevelRateLimitEnabledConfigKey;	// IMP=0x00100000001155ad
- (CDStruct_8ce276cf)thermalRateLimitsConfigKey;	// IMP=0x001000000011559a
- (void)searchPinsManager:(id)arg1 displayPlaceCardForResult:(id)arg2;	// IMP=0x0010000000115594
- (void)_handleBackButton;	// IMP=0x00100000001152d8
- (void)_handleBackButtonPressed:(id)arg1;	// IMP=0x00100000001152c6
- (id)_previousContext;	// IMP=0x00100000001151e8
- (void)updateHardwareBackButtonBehavior;	// IMP=0x0010000000115067
- (void)setHardwareBackButtonBehavior:(long long)arg1 forContext:(id)arg2;	// IMP=0x0010000000114ead
- (void)decrementForToken:(id)arg1 groupName:(id)arg2;	// IMP=0x0010000000114e0d
- (void)incrementForToken:(id)arg1 groupName:(id)arg2;	// IMP=0x0010000000114cfa
- (long long)forcedAutohideBehavior;	// IMP=0x0010000000114bbe
@property(readonly, nonatomic) _Bool isForcingAutohideBehavior;
- (void)clearAllForcedAutohideBehavior;	// IMP=0x0010000000114abe
- (void)_endForcingAutohideBehaviorWithToken:(id)arg1;	// IMP=0x001000000011492b
- (void)_beginForcingAutohideBehavior:(long long)arg1 withToken:(id)arg2;	// IMP=0x00100000001146df
- (void)_removeAutohideGestureRecognizer;	// IMP=0x0010000000114641
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x0010000000114590
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0010000000114588
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x001000000011440a
- (void)_addAutohideGestureRecognizer;	// IMP=0x001000000011406f
- (void)_stopAutohideIdleTimer;	// IMP=0x001000000011402d
- (void)_restartAutohideIdleTimer;	// IMP=0x0010000000113e80
- (void)restartAutohideIdleTimerIfStarted;	// IMP=0x0010000000113e43
- (void)_startAutohideIdleTimerIfStopped;	// IMP=0x0010000000113e21
- (_Bool)_areAccessoriesHiddenForContext:(id)arg1;	// IMP=0x0010000000113d85
- (_Bool)_areAccessoriesHiddenForCurrentContext;	// IMP=0x0010000000113d32
- (_Bool)isAutohidingContentHiddenForContext:(id)arg1;	// IMP=0x0010000000113cd9
@property(nonatomic, getter=isAutohidingContentHiddenForCurrentContext) _Bool autohidingContentHiddenForCurrentContext;
- (void)interruptAutohideForIncidentalInteraction;	// IMP=0x001000000011366c
- (void)_humanPresenceDidChange;	// IMP=0x0010000000113544
- (void)_autohideGestureRecognizerDetectedTap:(id)arg1;	// IMP=0x0010000000113328
- (void)_autohideBecameIdle;	// IMP=0x0010000000113234
- (void)_updateAutohideBehavior;	// IMP=0x0010000000112f0a
- (void)_setAutohideBehavior:(long long)arg1 forContext:(id)arg2;	// IMP=0x0010000000112d6b
- (long long)_autohidingBehaviorForContext:(id)arg1;	// IMP=0x0010000000112cce
- (void)_recordAutohidingContentIsHidden:(_Bool)arg1 forContext:(id)arg2;	// IMP=0x0010000000112afa
- (_Bool)_autohidingContentIsHiddenForContext:(id)arg1;	// IMP=0x0010000000112ab4
- (void)_requestAutohideBehaviorForContext:(id)arg1;	// IMP=0x0010000000112a30
- (void)setNeedsAutohideBehaviorUpdateForContext:(id)arg1;	// IMP=0x00100000001129ba
- (void)carCardView:(id)arg1 didChangeFocus:(_Bool)arg2;	// IMP=0x0010000000112898
- (void)carCardView:(id)arg1 chevronButtonSelected:(id)arg2;	// IMP=0x001000000011276a
- (void)carCardViewCloseButtonTapped:(id)arg1;	// IMP=0x0010000000112589
- (void)_reloadCardsAnimated:(_Bool)arg1;	// IMP=0x0010000000112033
- (void)_updateCardsForContext:(id)arg1 withAnimation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000111b48
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000111b2f
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000111b16
- (id)_desiredCards;	// IMP=0x0010000000111a59
- (_Bool)canShowCards;	// IMP=0x0010000000111a51
- (void)captureUserActionSelectedSearchCategory:(id)arg1 categoriesDisplayed:(id)arg2;	// IMP=0x001000000011198f
- (void)captureUserActionPannedInDirection:(long long)arg1;	// IMP=0x0010000000111966
- (void)captureUserActionChangedTrackingMode:(long long)arg1;	// IMP=0x0010000000111942
- (void)captureUserAction:(int)arg1 selectedRouteIndex:(int)arg2;	// IMP=0x00100000001118a5
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2 atResultIndex:(int)arg3;	// IMP=0x00100000001117dc
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2;	// IMP=0x00100000001117c4
- (void)captureUserAction:(int)arg1 eventValue:(id)arg2;	// IMP=0x0010000000111761
- (void)captureUserAction:(int)arg1;	// IMP=0x001000000011174d
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2 eventValue:(id)arg3;	// IMP=0x00100000001116cc
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2;	// IMP=0x00100000001116b7
- (void)_captureUserActionBackToContext:(id)arg1;	// IMP=0x00100000001115b1
- (int)_currentUsageTarget;	// IMP=0x001000000011151b
- (id)_userActionDetailsWithMapItem:(id)arg1 resultIndex:(int)arg2;	// IMP=0x00100000001114ff
- (void)_enableZoomGesture:(_Bool)arg1;	// IMP=0x001000000011126e
- (void)updateZoomControls;	// IMP=0x0010000000111188
- (void)_updateRouteSelectionController;	// IMP=0x0010000000111088
- (void)_updateNudgerizer;	// IMP=0x0010000000110fbc
- (void)_updateCameraToggleButton;	// IMP=0x0010000000110c69
- (void)_update3DButton;	// IMP=0x0010000000110b76
- (void)_reportIncidentPressed;	// IMP=0x0010000000110b1e
- (void)_toggleCameraPressed;	// IMP=0x0010000000110a0f
- (void)_toggle3DButtonPressed;	// IMP=0x0010000000110903
- (void)zoomOut;	// IMP=0x00100000001106f4
- (void)zoomOutButtonPressed;	// IMP=0x00100000001106e2
- (void)zoomIn;	// IMP=0x00100000001104d3
- (void)zoomInButtonPressed;	// IMP=0x00100000001104c1
- (void)panButtonPressed;	// IMP=0x001000000011046e
- (void)_navRecenterButtonPressed;	// IMP=0x0010000000110417
- (void)carMapControls:(id)arg1 didTriggerAction:(unsigned long long)arg2;	// IMP=0x00100000001103c6
- (void)_reloadMapControlsInsetsForContext:(id)arg1;	// IMP=0x00100000001102a8
- (void)_reloadMapControlsForContext:(id)arg1 withAnimation:(id)arg2;	// IMP=0x001000000010fda0
- (void)_updateAudioControls;	// IMP=0x001000000010f9e9
- (void)_reloadAccessoriesInsetsForContext:(id)arg1;	// IMP=0x001000000010f8b5
- (void)_reloadAccessoriesForContext:(id)arg1 withAnimation:(id)arg2;	// IMP=0x001000000010f5d6
- (void)reloadAccessoriesForContext:(id)arg1 animated:(_Bool)arg2;	// IMP=0x001000000010f548
- (void)configureAccessoriesOverlay:(id)arg1 forContext:(id)arg2;	// IMP=0x001000000010f452
- (void)_reloadFocusContainerGuidesForContext:(id)arg1;	// IMP=0x001000000010f228
@property(readonly, copy, nonatomic, getter=_linearFocusMovementSequences) NSArray *linearFocusMovementSequences;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
- (_Bool)shouldUpdateFocusInContext:(id)arg1;	// IMP=0x001000000010e23b
- (_Bool)_isFocusMovementValidInContext:(id)arg1;	// IMP=0x001000000010d8c1
- (void)setOwnsFocus:(_Bool)arg1;	// IMP=0x001000000010d627
- (void)_preserveFocusedItemFromContext:(id)arg1 toContext:(id)arg2;	// IMP=0x001000000010d3ae
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingMapControls;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingMapControls;
@property(readonly, nonatomic) id visuallySelectedItem;
@property(readonly, nonatomic) _Bool suppressIdleFocus;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x001000000010cfe2
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x001000000010cdcc
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;	// IMP=0x001000000010cc43
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x001000000010caba
- (_Bool)_nudgeHandlesPress:(id)arg1;	// IMP=0x001000000010ca9d
@property(readonly, nonatomic) _Bool _shouldAllowKnobFocusMovement;
- (void)setNeedsFocusUpdateIfUnfocused;	// IMP=0x001000000010c83d
- (void)disableDoubleTapRecognizer;	// IMP=0x001000000010c774
- (void)enableDoubleTapRecognizerWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000010c5a9
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x001000000010c4d0
- (void)_carOneHandedZoomSettingUpdated:(id)arg1;	// IMP=0x001000000010c4b6
- (_Bool)_canSelectAlternateRoutes;	// IMP=0x001000000010c358
- (void)_navigationObscuredTimeoutFired:(id)arg1;	// IMP=0x001000000010c281
- (void)_stopNavigationObscuredTimeout;	// IMP=0x001000000010c1ce
- (void)_restartNavigationObscuredTimeout;	// IMP=0x001000000010c1ac
- (void)_startNavigationObscuredTimeout;	// IMP=0x001000000010c053
- (void)_startNavigationDisplayAnimated:(_Bool)arg1;	// IMP=0x001000000010bda9
- (void)stopRunningNavigationAnimated:(_Bool)arg1;	// IMP=0x001000000010bd3b
- (void)startRunningNavigationAnimated:(_Bool)arg1;	// IMP=0x001000000010bbd8
@property(readonly, nonatomic) long long modernMapProjectionType;
@property(readonly, nonatomic) long long modernMapTerrainMode;
@property(readonly, nonatomic) _Bool shouldUseModernMap;
@property(readonly, nonatomic) GEOMapServiceTraits *navigationAwareTraits;
- (void)_locationAuthorizationDidChange:(id)arg1;	// IMP=0x001000000010b8e2
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3 fromTrackingButton:(_Bool)arg4;	// IMP=0x001000000010b8d0
- (void)mapViewNavigationCameraHasStoppedPanning:(id)arg1;	// IMP=0x001000000010b79e
- (void)mapViewNavigationCameraHasStartedPanning:(id)arg1;	// IMP=0x001000000010b6f7
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(_Bool)arg2;	// IMP=0x001000000010b5fb
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;	// IMP=0x001000000010b510
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;	// IMP=0x001000000010b4cf
- (void)mapView:(id)arg1 didBecomePitched:(_Bool)arg2;	// IMP=0x001000000010b43d
- (void)mapView:(id)arg1 didStopRespondingToGesture:(long long)arg2 zoomDirection:(long long)arg3 zoomGestureType:(long long)arg4 didDecelerate:(_Bool)arg5 tiltDirection:(long long)arg6;	// IMP=0x001000000010b370
- (void)mapView:(id)arg1 canZoomOutDidChange:(_Bool)arg2;	// IMP=0x001000000010b2d5
- (void)mapView:(id)arg1 canZoomInDidChange:(_Bool)arg2;	// IMP=0x001000000010b23a
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;	// IMP=0x001000000010b150
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;	// IMP=0x001000000010b05e
- (void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2;	// IMP=0x001000000010ae3e
- (_Bool)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;	// IMP=0x001000000010acab
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;	// IMP=0x001000000010aa74
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;	// IMP=0x001000000010a8e3
- (_Bool)shouldRecenterAndZoom;	// IMP=0x001000000010a845
- (void)mapSettings:(id)arg1 didApplyAnimated:(_Bool)arg2;	// IMP=0x001000000010a833
- (void)mapSettings:(id)arg1 willApplyAnimated:(_Bool)arg2;	// IMP=0x001000000010a821
- (double)mapInsetsUpdateAnimationDuration;	// IMP=0x001000000010a813
- (_Bool)mapSettings:(id)arg1 shouldApplyAnimated:(_Bool *)arg2;	// IMP=0x001000000010a72a
- (void)updateComponent:(id)arg1 withAnimation:(id)arg2;	// IMP=0x001000000010a2f5
- (id)allComponents;	// IMP=0x001000000010a204
- (_Bool)shouldAnimateMapTransition:(_Bool)arg1;	// IMP=0x001000000010a163
- (void)prepareMapViewForFirstUse;	// IMP=0x0010000000109c7e
- (void)_resetMapViewDefaults:(id)arg1;	// IMP=0x0010000000109b2b
- (id)mapViewDelegateForSelector:(SEL)arg1;	// IMP=0x0010000000109a76
- (void)_performMapUpdateToUserInterfaceStyle:(long long)arg1 animation:(id)arg2;	// IMP=0x00100000001092b2
- (void)_updateMapUserInterfaceStyle:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000108f0e
- (void)_updateMapToCurrentUserInterfaceStyleAnimated:(_Bool)arg1;	// IMP=0x0010000000108eb0
- (void)lightLevelController:(id)arg1 didUpdateLightLevel:(long long)arg2;	// IMP=0x0000000000108e99
- (void)_carPlayWindowMapStyleDidChange:(id)arg1;	// IMP=0x0010000000108b18
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0010000000108814
- (void)_presentAnyPendingAlert:(_Bool)arg1;	// IMP=0x00100000001085ce
- (void)_dismissAlertViewController:(id)arg1 animated:(_Bool)arg2;	// IMP=0x001000000010812b
- (void)_presentAlertViewController:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000107af3
- (CDUnknownBlockType)_presentSearchRefinementWithUserInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001075f1
- (CDUnknownBlockType)presentInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000105f40
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;	// IMP=0x0010000000105eef
- (void)dismissInterruption;	// IMP=0x0010000000105ed0
- (void)_carExternalDeviceStateUpdated:(id)arg1;	// IMP=0x0010000000105ddd
- (id)chromeViewItemForContext:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x0010000000105cec
@property(readonly, nonatomic) id <CarChromeContext> topContext;
- (void)contextStackDidUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x00100000001051b7
- (void)contextStackWillUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000104f4f
- (_Bool)_shouldAccessoriesModifyMapInsetsForContext:(id)arg1;	// IMP=0x0010000000104d13
- (void)viewDidLayoutSubviews;	// IMP=0x0010000000104c32
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x0010000000104bcc
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0010000000104b8b
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0010000000104b28
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0010000000104a9c
- (void)viewDidLoad;	// IMP=0x00100000001045c7
- (id)mapReplacementColor;	// IMP=0x00100000001044a7
- (void)loadView;	// IMP=0x00100000001043dc
@property(readonly, nonatomic) CarMapSettings *transientMapSettings;
- (id)createMapReplacementView;	// IMP=0x0010000000103fbf
- (id)createMapView;	// IMP=0x0010000000103ee3
- (void)setInactive:(_Bool)arg1;	// IMP=0x0010000000103cd6
- (void)didUnsuppress;	// IMP=0x0010000000103907
- (void)didSuppress;	// IMP=0x00100000001036b5
- (id)currentTraits;	// IMP=0x0010000000103557
- (id)initWithSceneType:(long long)arg1;	// IMP=0x001000000010337e
- (void)dealloc;	// IMP=0x0010000000103222

// Remaining properties
@property(nonatomic) _Bool areChildrenFocused;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=_isEligibleForFocusInteraction) _Bool eligibleForFocusInteraction;
@property(readonly, nonatomic, getter=_isEligibleForFocusOcclusion) _Bool eligibleForFocusOcclusion;
@property(readonly, copy, nonatomic) NSString *focusGroupIdentifier;
@property(readonly, nonatomic) id <UIFocusItemContainer> focusItemContainer;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) __weak id <UIFocusEnvironment> parentFocusEnvironment;
@property(readonly, nonatomic) UIView *passThroughView;
@property(readonly, nonatomic, getter=_preferredFocusMovementStyle) long long preferredFocusMovementStyle;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

