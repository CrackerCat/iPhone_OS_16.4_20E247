//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVPlayerItem, AVPlayerLooper, AVQueuePlayer, MISSING_TYPE, NSArray, NSMutableSet, NSString;
@protocol CRLAVPlayerControllerPlayerItemMediating, CRLMediaPlayerControllerDelegate;

@interface CRLAVPlayerController : NSObject
{
    AVQueuePlayer *mPlayer;	// 8 = 0x8
    id <CRLMediaPlayerControllerDelegate> mDelegate;	// 16 = 0x10
    NSArray *mEnqueuedAssets;	// 24 = 0x18
    long long mRepeatMode;	// 32 = 0x20
    CDStruct_1b6d18a9 mStartCMTime;	// 40 = 0x28
    CDStruct_1b6d18a9 mEndCMTime;	// 64 = 0x40
    CDStruct_e83c9415 mPlayerItemTimeRange;	// 88 = 0x58
    _Bool mIsPlayerItemTimeRangeForScrubbing;	// 136 = 0x88
    AVPlayerLooper *mPlayerLooper;	// 144 = 0x90
    _Bool mIsUpdatingPlayerItems;	// 152 = 0x98
    float mVolume;	// 156 = 0x9c
    AVPlayerItem *mVolumeRampPlayerItem;	// 160 = 0xa0
    id mVolumeRampBoundaryTimeObserver;	// 168 = 0xa8
    float mRateBeforeScrubbing;	// 176 = 0xb0
    unsigned long long mScrubbingCount;	// 184 = 0xb8
    _Bool mCanPlay;	// 192 = 0xc0
    float mPendingRate;	// 196 = 0xc4
    _Bool mWasPlayingBeforeChangeToZeroRate;	// 200 = 0xc8
    _Bool mWasFastReversingBeforeChangeToZeroRate;	// 201 = 0xc9
    _Bool mWasFastForwardingBeforeChangeToZeroRate;	// 202 = 0xca
    NSMutableSet *mObservationTokens;	// 208 = 0xd0
    _Bool mDidNotifyDelegateOfPlaybackError;	// 216 = 0xd8
    _Bool mPlaying;	// 217 = 0xd9
    _Bool mFastReversing;	// 218 = 0xda
    _Bool mFastForwarding;	// 219 = 0xdb
    id <CRLAVPlayerControllerPlayerItemMediating> mPlayerItemMediator;	// 224 = 0xe0
}

+ (id)keyPathsForValuesAffectingCanFastForward;	// IMP=0x00400000003a3fa0
+ (id)keyPathsForValuesAffectingCanFastReverse;	// IMP=0x00100000003a3bba
+ (id)keyPathsForValuesAffectingRate;	// IMP=0x00100000003a3542
+ (_Bool)automaticallyNotifiesObserversOfRate;	// IMP=0x00100000003a353a
+ (id)keyPathsForValuesAffectingHasCurrentTime;	// IMP=0x00100000003a200c
+ (_Bool)p_canApplyVolumeRampAtRate:(float)arg1;	// IMP=0x00100000003a1b97
+ (id)keyPathsForValuesAffectingEndTime;	// IMP=0x00100000003a132d
+ (id)keyPathsForValuesAffectingStartTime;	// IMP=0x00100000003a10e5
+ (id)keyPathsForValuesAffectingAbsoluteDuration;	// IMP=0x00100000003a0ef4
+ (id)keyPathsForValuesAffectingDuration;	// IMP=0x00100000003a0e05
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;	// IMP=0x00100000003a0014
+ (id)keyPathsForValuesAffectingCurrentAsset;	// IMP=0x001000000039ffb0
+ (void)initialize;	// IMP=0x001000000039f1b7
- (void).cxx_destruct;	// IMP=0x00100000003a728b
- (_Bool)isFastForwarding;	// IMP=0x00100000003a727f
- (_Bool)isFastReversing;	// IMP=0x00100000003a7273
- (_Bool)isPlaying;	// IMP=0x00100000003a7267
- (_Bool)canPlay;	// IMP=0x00100000003a725b
- (float)volume;	// IMP=0x00100000003a724d
- (long long)repeatMode;	// IMP=0x00100000003a7243
@property(retain, nonatomic) id <CRLAVPlayerControllerPlayerItemMediating> playerItemMediator; // @synthesize playerItemMediator=mPlayerItemMediator;
@property(readonly, nonatomic) AVQueuePlayer *player; // @synthesize player=mPlayer;
- (id)delegate;	// IMP=0x00100000003a7222
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000003a5d07
- (void)p_updateAutomaticallyWaitsToMinimizeStalling;	// IMP=0x00100000003a5b9e
- (void)p_applicationDidResignActive;	// IMP=0x00100000003a5b25
- (void)p_playerItemDidJumpTime:(id)arg1;	// IMP=0x00100000003a5abe
- (_Bool)p_notifyDelegateOfPlaybackErrorIfNeeded;	// IMP=0x00100000003a5581
- (void)p_playerItemDidPlayToEndTime:(id)arg1;	// IMP=0x00100000003a5514
- (void)p_playerItemDidPlayToEndTimeAtRate:(float)arg1;	// IMP=0x00100000003a4cd1
- (void)p_notifyPlayerItemMediatorWithRate:(float)arg1;	// IMP=0x00100000003a4a4d
- (void)removeObservationToken:(id)arg1;	// IMP=0x00100000003a49cc
- (void)addObservationToken:(id)arg1;	// IMP=0x00100000003a49b3
- (void)removePeriodicTimeObserver:(id)arg1;	// IMP=0x00100000003a4941
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000003a481f
- (id)p_addTimeObserverForTime:(CDStruct_1b6d18a9)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000003a46f0
- (void)p_enqueueAssetsFromIndex:(unsigned long long)arg1;	// IMP=0x00100000003a43ea
- (void)skipToAssetAtIndex:(unsigned long long)arg1;	// IMP=0x00100000003a4380
- (void)setFastForwarding:(_Bool)arg1;	// IMP=0x00100000003a4191
- (_Bool)p_canFastForwardAtCurrentTime;	// IMP=0x00100000003a407e
- (_Bool)canFastForward;	// IMP=0x00100000003a4010
- (void)setFastReversing:(_Bool)arg1;	// IMP=0x00100000003a3db1
- (_Bool)p_canFastReverseAtCurrentTime;	// IMP=0x00100000003a3c98
- (_Bool)canFastReverse;	// IMP=0x00100000003a3c2a
- (void)stopSynchronously;	// IMP=0x00100000003a3b18
- (void)p_applyPendingRateIfNeeded;	// IMP=0x00100000003a39bb
- (void)p_applyRate:(float)arg1;	// IMP=0x00100000003a3759
- (void)setRate:(float)arg1;	// IMP=0x00100000003a3621
- (float)rate;	// IMP=0x00100000003a3562
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00100000003a30da
- (void)updatePlayingToMatchPlayer;	// IMP=0x00100000003a304a
- (void)seekToEnd;	// IMP=0x00100000003a2fd2
- (void)seekToBeginning;	// IMP=0x00100000003a2f5a
- (void)seekBackwardByOneFrame;	// IMP=0x00100000003a2e15
- (void)seekForwardByOneFrame;	// IMP=0x00100000003a2cd2
- (void)endScrubbing;	// IMP=0x00100000003a27e3
- (void)cancelPendingSeeks;	// IMP=0x00100000003a2779
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000003a2493
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;	// IMP=0x00100000003a247f
- (void)beginScrubbing;	// IMP=0x00100000003a2304
- (_Bool)isScrubbing;	// IMP=0x00100000003a22f3
- (double)remainingTime;	// IMP=0x00100000003a2201
- (double)currentTime;	// IMP=0x00100000003a20f7
- (double)absoluteCurrentTime;	// IMP=0x00100000003a202c
- (_Bool)hasCurrentTime;	// IMP=0x00100000003a1f8c
- (void)p_applyConstantVolumeToPlayerItem:(id)arg1;	// IMP=0x00100000003a1bc6
- (void)p_clearVolumeRampFromPlayerItem;	// IMP=0x00100000003a1ba6
- (void)setVolume:(float)arg1 rampDuration:(double)arg2;	// IMP=0x00100000003a1528
- (void)setVolume:(float)arg1;	// IMP=0x00100000003a13d3
- (void)setRepeatMode:(long long)arg1;	// IMP=0x00100000003a134d
- (void)setEndTime:(double)arg1;	// IMP=0x00100000003a126b
- (CDStruct_1b6d18a9)p_endCMTime;	// IMP=0x00100000003a1164
- (double)endTime;	// IMP=0x00100000003a1105
- (void)setStartTime:(double)arg1;	// IMP=0x00100000003a1023
- (CDStruct_1b6d18a9)p_startCMTime;	// IMP=0x00100000003a0f77
- (double)startTime;	// IMP=0x00100000003a0f18
- (double)absoluteDuration;	// IMP=0x00100000003a0e3c
- (double)duration;	// IMP=0x00100000003a0ce3
- (id)p_workingPlayerItems;	// IMP=0x00100000003a0c6c
- (void)p_updatePlayerItemsAndApplyRate:(float)arg1;	// IMP=0x00100000003a03af
- (_Bool)p_shouldUsePlayerLooperAtRate:(float)arg1 timeRange:(CDStruct_e83c9415)arg2;	// IMP=0x00100000003a00ac
- (MISSING_TYPE *)newLayer;	// IMP=0x00100000003a0034
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
@property(readonly, nonatomic) AVAsset *currentAsset;
- (void)attachAVPlayerViewController:(id)arg1;	// IMP=0x001000000039fec4
- (void)teardown;	// IMP=0x001000000039f709
- (void)dealloc;	// IMP=0x001000000039f507
- (id)initWithInitialPlayerItem:(id)arg1 enqueuedAssets:(id)arg2 initialEnqueuedAssetIndex:(unsigned long long)arg3 delegate:(id)arg4;	// IMP=0x001000000039f2d1
- (id)initWithAssets:(id)arg1 initialAssetIndex:(unsigned long long)arg2 delegate:(id)arg3;	// IMP=0x001000000039f2b4
- (id)initWithPlayerItem:(id)arg1 delegate:(id)arg2;	// IMP=0x001000000039f28e
- (id)newRenderable;	// IMP=0x00100000000befd1

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

