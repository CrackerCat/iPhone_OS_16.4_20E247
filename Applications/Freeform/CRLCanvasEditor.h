//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvasEditorHelper, CRLCanvasSelection, CRLEditorController, CRLInteractiveCanvasController, CRLPasteboardController, NSArray, NSSet, NSString, UIInputViewController, UIView, _TtC8Freeform21CRLEditingCoordinator;
@protocol CRLArrangeInspectorDelegate, CRLSearchReference, CRLTextInputReceiving, CRLTextSelecting, _TtP8Freeform20CRLKeyInputReceiving_;

@interface CRLCanvasEditor : NSObject
{
    CRLInteractiveCanvasController *mInteractiveCanvasController;	// 8 = 0x8
    CRLCanvasEditorHelper *mCanvasEditorHelper;	// 16 = 0x10
    NSObject<CRLArrangeInspectorDelegate> *mZOrderArranger;	// 24 = 0x18
    _Bool mPreventImageDataReplace;	// 32 = 0x20
    UIView *mInputView;	// 40 = 0x28
    _Bool mEndTextInputWhenKeyboardHides;	// 48 = 0x30
    CRLPasteboardController *_pasteboardController;	// 56 = 0x38
    UIInputViewController *inputAccessoryViewController;	// 64 = 0x40
    NSArray *leadingBarButtonGroups;	// 72 = 0x48
    NSArray *trailingBarButtonGroups;	// 80 = 0x50
}

+ (CDUnknownBlockType)spatialInfoComparator;	// IMP=0x00200000000a5321
+ (_Bool)physicalKeyboardIsSender:(id)arg1;	// IMP=0x001000000009f05b
+ (Class)canvasEditorHelperClass;	// IMP=0x001000000009e10c
- (void).cxx_destruct;	// IMP=0x00200000000a6298
@property(nonatomic) _Bool endTextInputWhenKeyboardHides; // @synthesize endTextInputWhenKeyboardHides=mEndTextInputWhenKeyboardHides;
@property(readonly, copy, nonatomic) NSArray *trailingBarButtonGroups; // @synthesize trailingBarButtonGroups;
@property(readonly, copy, nonatomic) NSArray *leadingBarButtonGroups; // @synthesize leadingBarButtonGroups;
@property(readonly, nonatomic) UIInputViewController *inputAccessoryViewController; // @synthesize inputAccessoryViewController;
- (void)scrollCanvasRight:(id)arg1;	// IMP=0x00100000000a61f6
- (void)scrollCanvasLeft:(id)arg1;	// IMP=0x00100000000a6184
- (void)scrollCanvasDown:(id)arg1;	// IMP=0x00100000000a6112
- (void)scrollCanvasUp:(id)arg1;	// IMP=0x00100000000a60a0
- (void)scrollCanvasPageDown:(id)arg1;	// IMP=0x00100000000a602e
- (void)scrollCanvasPageUp:(id)arg1;	// IMP=0x00100000000a5fbc
- (id)trailingBarButtonGroupsWithDefaultGroups:(id)arg1;	// IMP=0x00100000000a5faf
- (id)leadingBarButtonGroupsWithDefaultGroups:(id)arg1;	// IMP=0x00100000000a5fa2
- (void)actualSize:(id)arg1;	// IMP=0x00100000000a5f5d
- (void)zoomToSelection:(id)arg1;	// IMP=0x00100000000a5f20
- (void)zoomToFitAllContent:(id)arg1;	// IMP=0x00100000000a5ee3
- (void)zoomOut:(id)arg1;	// IMP=0x00100000000a5e74
- (void)zoomIn:(id)arg1;	// IMP=0x00100000000a5e05
- (void)scrollToEndOfDocument:(id)arg1;	// IMP=0x00100000000a5d30
- (void)scrollToBeginningOfDocument:(id)arg1;	// IMP=0x00100000000a5c36
@property(readonly, nonatomic) id <CRLArrangeInspectorDelegate> arrangeInspectorDelegate;
- (id)createArrangeInspectorDelegate;	// IMP=0x00100000000a5bb9
- (void)insertNewline:(id)arg1;	// IMP=0x00100000000a5b48
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;	// IMP=0x00100000000a5ad6
- (void)spacebarTapped:(id)arg1;	// IMP=0x00100000000a5ad0
@property(readonly, nonatomic) _Bool handlesSpacebar;
- (void)escapePressed:(id)arg1;	// IMP=0x00100000000a5a41
- (void)insertBacktab:(id)arg1;	// IMP=0x00100000000a59ac
- (void)insertTab:(id)arg1;	// IMP=0x00100000000a591a
- (id)p_selectableInfosInInfos:(id)arg1;	// IMP=0x00100000000a56d8
- (id)p_spatiallySortedSelectableBoardItems;	// IMP=0x00100000000a532e
- (id)p_nextInfoInTabSequence:(long long)arg1;	// IMP=0x00100000000a4549
- (void)connectWithConnectionLine:(id)arg1;	// IMP=0x00100000000a431e
@property(readonly, nonatomic) NSArray *infosToConnect;
- (_Bool)canGroupBoardItem:(id)arg1;	// IMP=0x00100000000a423f
- (void)ungroup:(id)arg1;	// IMP=0x00100000000a41cd
- (void)group:(id)arg1;	// IMP=0x00100000000a415b
- (void)selectAll:(id)arg1;	// IMP=0x00100000000a3a9c
@property(readonly, nonatomic) NSSet *infosForSelectAllInRoot;
- (void)select:(id)arg1;	// IMP=0x00100000000a3a12
- (id)p_commandForPastingProvidedBoardItems:(id)arg1 withPasteboard:(id)arg2 sender:(id)arg3 hasValidGeometries:(_Bool)arg4 allowPositionChange:(_Bool)arg5;	// IMP=0x00100000000a332e
- (struct CGRect)p_boundingRectForPastingBoardItems:(id)arg1;	// IMP=0x00100000000a2cc2
- (void)pasteValues:(id)arg1;	// IMP=0x00100000000a2c50
- (void)pasteAsPlainText:(id)arg1;	// IMP=0x00100000000a2bde
- (void)paste:(id)arg1;	// IMP=0x00100000000a2b6c
- (id)commandForInsertingBoardItems:(id)arg1 below:(id)arg2;	// IMP=0x00100000000a2b57
- (id)commandForInsertingBoardItems:(id)arg1 below:(id)arg2 withOffset:(unsigned long long)arg3;	// IMP=0x00100000000a2a53
- (id)pasteNativeInfosFromPasteboard:(id)arg1 allowImageReplacement:(_Bool)arg2;	// IMP=0x00100000000a28da
- (id)p_pasteNativeBoardItemsFromProviders:(id)arg1 withPasteboard:(id)arg2 selectionPath:(id)arg3 sender:(id)arg4 hasValidGeometries:(_Bool)arg5 allowImageReplacement:(_Bool)arg6;	// IMP=0x00100000000a23dd
- (void)pasteWithPasteboard:(id)arg1 selectionPath:(id)arg2 forceMatchStyle:(_Bool)arg3 sender:(id)arg4;	// IMP=0x00100000000a17cb
- (void)p_insertBoardItems:(id)arg1 withInsertionContext:(id)arg2;	// IMP=0x00100000000a124f
- (void)insertBoardItems:(id)arg1 withInsertionContext:(id)arg2 postProcessBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a1086
- (id)selectionBehaviorForInsertingBoardItems:(id)arg1;	// IMP=0x00100000000a0fee
- (struct CGSize);	// IMP=0x00100000000a0fd8
- (void)prepareGeometryForInsertingBoardItems:(id)arg1 withInsertionContext:(id)arg2;	// IMP=0x00100000000a090e
- (void)copy:(id)arg1;	// IMP=0x00100000000a0890
- (void)copyToPasteboard:(id)arg1 nativeOnly:(_Bool)arg2 withSender:(id)arg3;	// IMP=0x00100000000a0876
- (void)copyBoardItems:(id)arg1 toPasteboard:(id)arg2 asPDF:(_Bool)arg3 nativeOnly:(_Bool)arg4;	// IMP=0x00100000000a0586
- (void)copyToPasteboard:(id)arg1 asPDF:(_Bool)arg2 nativeOnly:(_Bool)arg3 withSender:(id)arg4;	// IMP=0x00100000000a0431
- (void)deleteWordForward:(id)arg1;	// IMP=0x00100000000a041f
- (void)deleteWordBackward:(id)arg1;	// IMP=0x00100000000a040d
- (void)deleteToEndOfLine:(id)arg1;	// IMP=0x00100000000a03fb
- (void)deleteToBeginningOfLine:(id)arg1;	// IMP=0x00100000000a03e9
- (void)deleteForward:(id)arg1;	// IMP=0x00100000000a03d7
- (void)deleteBackward:(id)arg1;	// IMP=0x00100000000a03c5
- (long long)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00100000000a00f1
- (_Bool)canvasEditorCanUngroupWithSender:(id)arg1;	// IMP=0x00100000000a00df
- (_Bool)canUngroupWithSender:(id)arg1;	// IMP=0x00100000000a000d
- (_Bool)canvasEditorCanGroupWithSender:(id)arg1;	// IMP=0x001000000009fffb
- (_Bool)canGroupWithSender:(id)arg1;	// IMP=0x001000000009fd99
- (_Bool)canvasEditorCanDeselectAllWithSender:(id)arg1;	// IMP=0x001000000009fc7c
- (_Bool)canvasEditorCanSelectAllWithSender:(id)arg1;	// IMP=0x001000000009fc6a
- (_Bool)canSelectAllWithSender:(id)arg1;	// IMP=0x001000000009f81d
- (_Bool)canvasEditorCanOptionDragDuplicateWithSender:(id)arg1;	// IMP=0x001000000009f765
- (_Bool)canvasEditorCanDuplicateWithSender:(id)arg1;	// IMP=0x001000000009f753
- (_Bool)canvasEditorCanPasteValuesWithSender:(id)arg1;	// IMP=0x001000000009f741
- (_Bool)canvasEditorCanPasteAsPlainTextWithSender:(id)arg1;	// IMP=0x001000000009f72f
- (_Bool)canvasEditorCanPasteWithSender:(id)arg1;	// IMP=0x001000000009f6b6
- (_Bool)canPasteWithSender:(id)arg1;	// IMP=0x001000000009f63d
- (_Bool)canvasEditorCanCopyStyleWithSender:(id)arg1;	// IMP=0x001000000009f62b
- (_Bool)canvasEditorCanCutWithSender:(id)arg1;	// IMP=0x001000000009f5d2
- (_Bool)canvasEditorCanCopyWithSender:(id)arg1;	// IMP=0x001000000009f334
- (_Bool)canvasEditorCanDeleteWithSender:(id)arg1;	// IMP=0x001000000009f256
- (_Bool)canCopyStyle;	// IMP=0x001000000009f24e
- (void)pasteWithPasteboard:(id)arg1 sender:(id)arg2;	// IMP=0x001000000009f199
- (_Bool)canPasteWithPasteboard:(id)arg1 sender:(id)arg2;	// IMP=0x001000000009f0bc
- (_Bool)canHandleInsertionOfBoardItems:(id)arg1 insertionContext:(id)arg2;	// IMP=0x001000000009f0b4
- (id)permittedActionsForReasons:(unsigned long long)arg1;	// IMP=0x001000000009efab
@property(readonly, nonatomic) CRLPasteboardController *pasteboardController;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;	// IMP=0x001000000009ed0b
- (id)selectionWillChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3 inSelectionPath:(id)arg4 withNewEditors:(id)arg5;	// IMP=0x001000000009eb0e
- (void)didBecomeTextInputEditor;	// IMP=0x001000000009eb08
- (_Bool)shouldBecomeTextInputEditor;	// IMP=0x001000000009eb00
- (id)nextEditorForSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;	// IMP=0x001000000009ea4e
- (_Bool)shouldRemainOnEditorStackForSelection:(id)arg1 inSelectionPath:(id)arg2 withNewEditors:(id)arg3;	// IMP=0x001000000009ea03
- (_Bool)shouldUseAlternateSelectionHighlight;	// IMP=0x001000000009e9fb
- (id)p_filterNonDisplayedInfos:(id)arg1;	// IMP=0x001000000009e75e
- (void)repWasCreated:(id)arg1;	// IMP=0x001000000009e719
- (void)canvasInfosDidChange;	// IMP=0x001000000009e50c
- (id)selectionPathForDraggingSelectionPath:(id)arg1;	// IMP=0x001000000009e4f6
- (id)selectionPathWithInfos:(id)arg1;	// IMP=0x001000000009e473
- (id)selectionPathWithInfo:(id)arg1;	// IMP=0x001000000009e3f0
@property(readonly, nonatomic) CRLCanvasSelection *canvasSelection;
@property(readonly, nonatomic) _TtC8Freeform21CRLEditingCoordinator *editingCoordinator;
@property(readonly, nonatomic) CRLInteractiveCanvasController *interactiveCanvasController;
@property(readonly, nonatomic) CRLCanvasEditorHelper *canvasEditorHelper;
@property(retain, nonatomic) CRLEditorController *editorController;
- (void)teardown;	// IMP=0x001000000009e1cb
- (id)initWithInteractiveCanvasController:(id)arg1;	// IMP=0x001000000009e11d
- (void)presentMediaCompatibilityAlertWithReasons:(long long)arg1 forMediaType:(long long)arg2 forSingleMediaObject:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000009e089
- (void)selectParent:(id)arg1;	// IMP=0x001000000009e017
- (void)sendToBack:(id)arg1;	// IMP=0x001000000009dfa5
- (void)sendBackward:(id)arg1;	// IMP=0x001000000009df33
- (void)bringForward:(id)arg1;	// IMP=0x001000000009dec1
- (void)bringToFront:(id)arg1;	// IMP=0x001000000009de4f
- (void)distributeDrawablesEvenly:(id)arg1;	// IMP=0x001000000009de12
- (void)distributeDrawablesVertically:(id)arg1;	// IMP=0x001000000009ddd0
- (void)distributeDrawablesHorizontally:(id)arg1;	// IMP=0x001000000009dd8e
- (void)alignDrawablesByHorizontalCenter:(id)arg1;	// IMP=0x001000000009dd4c
- (void)alignDrawablesByBottomEdge:(id)arg1;	// IMP=0x001000000009dd0a
- (void)alignDrawablesByTopEdge:(id)arg1;	// IMP=0x001000000009dcc8
- (void)alignDrawablesByVerticalCenter:(id)arg1;	// IMP=0x001000000009dc86
- (void)alignDrawablesByRightEdge:(id)arg1;	// IMP=0x001000000009dc44
- (void)alignDrawablesByLeftEdge:(id)arg1;	// IMP=0x001000000009dc05
- (const struct CGPath *)newDragAndDropHighlightPathWithInset:(double)arg1;	// IMP=0x001000000009db64
- (_Bool)insertBoardItemsFromDragAndDrop:(id)arg1 atPoint:(struct CGPoint)arg2 onRep:(id)arg3 insertionContext:(id)arg4 alreadyPositionedInputInfos:(_Bool)arg5;	// IMP=0x001000000009daa1
- (_Bool)wantsToHighlightRep:(id)arg1 forDragOperationWithDragInfo:(id)arg2 atPoint:(struct CGPoint)arg3 allowNonPlaceholderReplacement:(_Bool)arg4;	// IMP=0x001000000009d9f7
- (void)hideDragAndDropUI;	// IMP=0x001000000009d9ba
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 dragInfo:(id)arg2;	// IMP=0x001000000009d931
- (id)repToHighlightForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x001000000009d897
- (_Bool)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;	// IMP=0x001000000009d803
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x001000000009d775
- (void)reduceFileSizeForSelectedImages:(id)arg1;	// IMP=0x001000000009d703
- (void)reduceDocumentFileSize:(id)arg1;	// IMP=0x001000000009d691
- (void)enterQuickSelectMode:(id)arg1;	// IMP=0x001000000009d61f
- (void)maskWithShapeType:(id)arg1;	// IMP=0x001000000009d3e2
- (void)maskWithShape:(id)arg1;	// IMP=0x001000000009d3a5
- (void)mask:(id)arg1;	// IMP=0x001000000009d368
- (void)maskWithSelection:(id)arg1;	// IMP=0x001000000009d2d2
- (void)addMiniFormatterElementsToArray:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x001000000009d249
- (void)crlaxAddContextualMenuOptionsToArray:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x001000000009cdb6
- (void)addContextualMenuElementsToArray:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x001000000009cd2d
- (void)addContextualMenuItemsToArray:(id)arg1;	// IMP=0x001000000009ccbb
- (void)duplicate:(id)arg1;	// IMP=0x001000000009cc49
- (_Bool)isLayoutSelectable:(id)arg1;	// IMP=0x001000000009cbd2
- (void)deselectAll:(id)arg1;	// IMP=0x001000000009cb60
- (void)unlock:(id)arg1;	// IMP=0x001000000009caee
- (void)lock:(id)arg1;	// IMP=0x001000000009ca7c
- (void)cut:(id)arg1;	// IMP=0x001000000009ca0a
- (void)delete:(id)arg1;	// IMP=0x001000000009c998
- (void)endEditing;	// IMP=0x001000000009c3cc
- (void)beginEditingWith:(id)arg1;	// IMP=0x001000000009c35a
- (void)tabKeyPressed;	// IMP=0x001000000009c30c
- (void)arrowKeyReceivedInDirection:(unsigned long long)arg1 withModifierKeys:(id)arg2;	// IMP=0x001000000009c294
@property(readonly, nonatomic) _Bool wantsRawArrowKeyEvents;
- (_Bool)wantsToInterceptDeleteEvents;	// IMP=0x001000000009c284
@property(readonly, nonatomic) _Bool wantsVisibleKeyboard;
- (_Bool)wantsToReceiveTextInput;	// IMP=0x001000000009c274
@property(readonly, nonatomic) id <_TtP8Freeform20CRLKeyInputReceiving_> keyInputReceiver;
@property(readonly, nonatomic) id <CRLTextInputReceiving> textInputReceiver;
@property(readonly, nonatomic) id <CRLTextSelecting> textSelectionDelegate;
- (_Bool)shouldBeginTextInputWith:(id)arg1;	// IMP=0x001000000009c1f8
- (_Bool)wantsDoneButtonWhenEditing;	// IMP=0x001000000009c1f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <CRLSearchReference> editingSearchReference;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) double liftDelayOverride;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAccessibilityDescription;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAttribution;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEditRecording;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFreehandAnimations;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReplacement;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) _Bool shouldPreventQuickSelect;
@property(readonly) Class superclass;

@end

