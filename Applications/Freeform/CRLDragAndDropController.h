//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvasRep, CRLDragToInsertController, CRLInteractiveCanvasController, CRLPasteboardMultipleImportableBoardItemProvider, NSMutableArray;
@protocol CRLCanvasElementInfo, CRLDragAndDropControllerDelegate, OS_dispatch_queue;

@interface CRLDragAndDropController : NSObject
{
    CRLInteractiveCanvasController *_interactiveCanvasController;	// 8 = 0x8
    unsigned long long _dragState;	// 16 = 0x10
    unsigned long long _lastReturnedDragOperation;	// 24 = 0x18
    struct CGPoint _lastProvidedDragPoint;	// 32 = 0x20
    _Bool _canvasDidLayoutSinceLastUpdate;	// 48 = 0x30
    struct CGPoint _finalUnscaledDragPoint;	// 56 = 0x38
    unsigned long long _highlightState;	// 72 = 0x48
    CRLCanvasRep *_repShowingDragAndDropHighlight;	// 80 = 0x50
    NSObject<CRLCanvasElementInfo> *_infoToTargetForIndirectDropOperation;	// 88 = 0x58
    _Bool _isIndirectDropOperation;	// 96 = 0x60
    unsigned long long _targetZOrderForDropOperation;	// 104 = 0x68
    _Bool _infosAreReadyToBeInserted;	// 112 = 0x70
    _Bool _infosJustBecameReadyToBeInserted;	// 113 = 0x71
    NSMutableArray *_infosToBeInserted;	// 120 = 0x78
    CRLPasteboardMultipleImportableBoardItemProvider *_importableInfosToBeInsertedProvider;	// 128 = 0x80
    CRLDragToInsertController *_dragToInsertController;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_infosToBeInsertedAccessQueue;	// 144 = 0x90
    id <CRLDragAndDropControllerDelegate> _delegate;	// 152 = 0x98
}

+ (unsigned long long)p_dragOperationForSupportedDragOperations:(unsigned long long)arg1;	// IMP=0x00200000003d4b1b
- (void).cxx_destruct;	// IMP=0x00200000003d7e83
@property(readonly, nonatomic) __weak CRLInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
@property(readonly, nonatomic) __weak id <CRLDragAndDropControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)canvasDidUpdateReps:(id)arg1;	// IMP=0x00100000003d7e4a
- (void)insertDroppedImportableBoardItemsFromProviders:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 onRep:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000003d7426
- (_Bool)insertNativePasteboardBoardItems:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 onRep:(id)arg3;	// IMP=0x00100000003d6c80
- (_Bool)insertDroppedNativeBoardItemsFromProviders:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 onRep:(id)arg3 isCrossAppSource:(_Bool)arg4 isCrossDocument:(_Bool)arg5;	// IMP=0x00100000003d66bc
- (id)p_accessibilityDescriptionForDropTarget:(id)arg1;	// IMP=0x00100000003d662b
- (void)p_announceAccessibilityDropTarget:(id)arg1;	// IMP=0x00100000003d6547
- (void)p_hideDragAndDropHighlightOnCanvasEditor;	// IMP=0x00100000003d64c0
- (void)p_showDragAndDropHighlightForCanvasEditorWithDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d6260
- (void)p_hideDragAndDropHighlightOnRep;	// IMP=0x00100000003d6229
- (void)p_showDragAndDropHighlightForRep:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 draggingInfo:(id)arg3;	// IMP=0x00100000003d6194
- (void)p_updateHighlightStateForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 dragOperation:(unsigned long long)arg3 dragDestination:(id)arg4;	// IMP=0x00100000003d5f49
- (void)targetScrollViewDidScroll;	// IMP=0x00100000003d5e9c
- (unsigned long long)p_dragOperationForDragInsideWithDraggingInfo:(id)arg1 atScaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d4f7b
- (id)p_dragDestinationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d4b32
- (void)cleanupEndOfDragOperation;	// IMP=0x00100000003d4795
- (_Bool)p_performDragOperationWithDragInfo:(id)arg1 onDragDestination:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;	// IMP=0x00100000003d3dfb
- (_Bool)p_shouldInsertDraggedBoardItems:(id)arg1;	// IMP=0x00100000003d3d51
- (_Bool)performIndirectDragOperationWithDragInfo:(id)arg1 inContainer:(id)arg2 targetZOrder:(unsigned long long)arg3;	// IMP=0x00100000003d379b
- (_Bool)performIndirectDragOperationWithDragInfo:(id)arg1 onInfo:(id)arg2;	// IMP=0x00100000003d31a5
- (void)concludeDragOperation:(id)arg1;	// IMP=0x00100000003d30a2
- (_Bool)performDragOperation:(id)arg1 atScaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d2a88
- (_Bool)prepareForDragOperation:(id)arg1;	// IMP=0x00100000003d2a80
- (void)draggingExited:(id)arg1;	// IMP=0x00100000003d26a7
- (unsigned long long)draggingUpdated:(id)arg1 atScaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d1eb4
- (unsigned long long)draggingEntered:(id)arg1 atScaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000003d0836
@property(readonly, nonatomic) _Bool shouldCleanupAfterSuccessfulDragOperation;
- (_Bool)insertBoardItemsForDragInfo:(id)arg1 atPoint:(struct CGPoint)arg2 onRep:(id)arg3;	// IMP=0x00100000003d080e
- (_Bool)canCreateBoardItemsFromDragInfo:(id)arg1;	// IMP=0x00100000003d0806
- (id)nativeProvidersForDynamicDragInsertionWithDragInfo:(id)arg1;	// IMP=0x00100000003d07fe
- (id)p_errorPresenter;	// IMP=0x00100000003d07ae
- (id)p_modalOperationPresenter;	// IMP=0x00100000003d075e
- (id)p_alertPresenter;	// IMP=0x00100000003d070e
- (void)dealloc;	// IMP=0x00100000003d04c8
- (id)init;	// IMP=0x00100000003d01e0
- (id)initWithDelegate:(id)arg1 interactiveCanvasController:(id)arg2;	// IMP=0x00100000003d011b

@end

