//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLEditableBezierPathSource, CRLShapeLayout, NSMutableDictionary, NSString, NSUUID, _TtC8Freeform12CRLShapeItem;
@protocol CRLShapeRepFreehandDrawingDynamicFillErasingDelegate;

@interface CRLShapeRep
{
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;	// 8 = 0x8
    _Bool mFrameInUnscaledCanvasIsValid;	// 40 = 0x28
    _Bool mDirectlyManagesLayerContentCacheValid;	// 41 = 0x29
    _Bool mDirectlyManagesLayerContent;	// 42 = 0x2a
    struct CGRect mOriginalAliasedAlignmentFrameInLayerFrame;	// 48 = 0x30
    _Bool mShadowOnChildrenDisabled;	// 80 = 0x50
    struct CGContext *mCommittedPathContext;	// 88 = 0x58
    struct CGImage *mCommittedPathImage;	// 96 = 0x60
    struct CGRect mCommittedPathImageUnscaledRect;	// 104 = 0x68
    struct _NSRange mCommittedPointRange;	// 136 = 0x88
    struct _NSRange mAvailableToCommitPointRange;	// 152 = 0x98
    unsigned int mOverrideState:2;	// 168 = 0xa8
    double mOverriddenValue;	// 176 = 0xb0
    struct CGRect mLastDynamicInvalidRect;	// 184 = 0xb8
    _Bool mFillChanged;	// 216 = 0xd8
    _Bool mShouldForceRenderableGeometryUpdate;	// 217 = 0xd9
    _Bool mIsInvisibleCacheValid;	// 218 = 0xda
    _Bool mIsInvisibleCache;	// 219 = 0xdb
    _Bool mNeedsDisplay;	// 220 = 0xdc
    NSMutableDictionary *mHitTestCache;	// 224 = 0xe0
    NSUUID *mDownloadObserverIdentifier;	// 232 = 0xe8
    _Bool _isCurrentlyBeingFreehandDrawn;	// 240 = 0xf0
    id <CRLShapeRepFreehandDrawingDynamicFillErasingDelegate> _freehandDrawingDynamicFillErasingDelegate;	// 248 = 0xf8
}

- (void).cxx_destruct;	// IMP=0x0020000000107431
@property(nonatomic, setter=i_setIsCurrentlyBeingFreehandDrawn:) _Bool i_isCurrentlyBeingFreehandDrawn; // @synthesize i_isCurrentlyBeingFreehandDrawn=_isCurrentlyBeingFreehandDrawn;
@property(nonatomic) _Bool shadowOnChildrenDisabled; // @synthesize shadowOnChildrenDisabled=mShadowOnChildrenDisabled;
@property(nonatomic) __weak id <CRLShapeRepFreehandDrawingDynamicFillErasingDelegate> freehandDrawingDynamicFillErasingDelegate; // @synthesize freehandDrawingDynamicFillErasingDelegate=_freehandDrawingDynamicFillErasingDelegate;
- (_Bool)wantsContextMenuWhenEditingDisabledAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000001073dc
- (void)documentModeDidChange;	// IMP=0x001000000010739b
- (_Bool)i_editMenuOverlapsEndKnobs;	// IMP=0x00100000001070ed
- (struct CGRect)boundsForCollaboratorCursorRenderable;	// IMP=0x0010000000106df5
- (_Bool)p_canApplyFillToRenderable;	// IMP=0x0010000000106d59
- (_Bool)p_canApplyStrokeToRenderable;	// IMP=0x0010000000106c32
- (_Bool)p_pathIsAxisAlignedRect;	// IMP=0x0010000000106a6b
- (void)p_endDynamicallyResizingOrMovingLineEnd;	// IMP=0x00100000001069ee
- (void)p_beginDynamicallyResizingOrMovingLineEnd;	// IMP=0x0010000000106971
- (void)p_handleAssetPreparationCompletion;	// IMP=0x00100000001068f9
- (void)p_listenForAssetChangesIfAppropriate;	// IMP=0x00100000001064e5
- (void)willBeRemoved;	// IMP=0x001000000010625a
- (struct CGRect)p_scaledCanvasScrollViewBounds;	// IMP=0x0010000000106124
- (struct _NSRange)p_uncommittedPointRange;	// IMP=0x0010000000105eb0
- (void)dynamicallySetBezierPathSource:(id)arg1 atUnscaledOrigin:(struct CGPoint)arg2 withCommittedPointRange:(struct _NSRange)arg3;	// IMP=0x0010000000105a5a
- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;	// IMP=0x00100000001059d5
- (void)p_enqueuePathSourceChanges;	// IMP=0x00100000001055c2
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x00100000001054e2
- (id)dynamicMoveSmartShapeKnobDidBegin;	// IMP=0x0010000000105477
@property(readonly, nonatomic) struct CGPoint centerForGuideRenderablePlacement;
- (void)dynamicMoveLineSegmentDidEndWithTracker:(id)arg1;	// IMP=0x00100000001052e5
- (void)dynamicallyMovingLineSegmentWithTracker:(id)arg1;	// IMP=0x0010000000105235
- (id)dynamicMoveLineSegmentDidBegin;	// IMP=0x00100000001051ff
- (void)dynamicMovePathKnobDidEndWithTracker:(id)arg1;	// IMP=0x0010000000105125
- (void)dynamicallyMovedPathKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x0010000000105045
- (void)dynamicMovePathKnobDidBegin;	// IMP=0x0010000000104ff0
- (_Bool)isEditingPath;	// IMP=0x0010000000104fbd
- (id)p_pathEditor;	// IMP=0x0010000000104f15
@property(readonly, nonatomic) struct CGAffineTransform naturalToEditablePathSpaceTransform;
@property(readonly, nonatomic) CRLEditableBezierPathSource *editablePathSource;
- (_Bool)canMakePathEditable;	// IMP=0x0010000000104d77
- (_Bool)isPathEditable;	// IMP=0x0010000000104cfa
- (_Bool)canBeginEditing;	// IMP=0x0010000000104b74
- (void)beginEditing;	// IMP=0x00100000001047e3
- (void)beginEditingWithString:(id)arg1;	// IMP=0x0010000000104449
- (id)dataForUpdateUploadIndicator;	// IMP=0x001000000010432d
- (void)dynamicallyResizingWithTracker:(id)arg1;	// IMP=0x00100000001042ec
- (_Bool)canDrawInParallel;	// IMP=0x00100000001042e4
- (void)invalidateEffectLayersForChildren;	// IMP=0x001000000010423d
@property(readonly, nonatomic) _Bool allowsColorDrop;
- (void)dynamicFreeTransformDidEndWithTracker:(id)arg1;	// IMP=0x00100000001041d1
- (void)dynamicResizeDidEndWithTracker:(id)arg1;	// IMP=0x0010000000104190
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;	// IMP=0x0010000000103d16
- (_Bool)shouldSetPathSourceWhenChangingInfoGeometry;	// IMP=0x0010000000103d0e
- (void)dynamicFreeTransformDidBegin;	// IMP=0x0010000000103ccd
- (id)dynamicResizeDidBegin;	// IMP=0x0010000000103c76
- (id)overlayRenderables;	// IMP=0x0010000000103759
- (id)additionalRenderablesOverRenderable;	// IMP=0x0010000000103250
- (_Bool)selectionIsAppropriateToShowInvisiblePathHighlight;	// IMP=0x00100000001031dc
- (_Bool)shouldShowInvisiblePathHighlight;	// IMP=0x0010000000102f88
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x0010000000102c9d
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withCursorPlatformObject:(id)arg3;	// IMP=0x0010000000102b50
- (void)updatePositionsOfKnobs:(id)arg1;	// IMP=0x001000000010220c
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;	// IMP=0x0010000000102106
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;	// IMP=0x0010000000102081
- (_Bool)shouldShowSmartShapeKnobs;	// IMP=0x0010000000101fe5
- (_Bool)shouldShowAdvancedGradientKnobs;	// IMP=0x0010000000101d29
- (_Bool)shouldShowAdditionalKnobs;	// IMP=0x0010000000101c51
- (void)addSelectionKnobsToArray:(id)arg1;	// IMP=0x001000000010176a
- (_Bool)p_parentFreehandDrawingIsSelected;	// IMP=0x00100000001015f2
- (unsigned long long)enabledKnobMask;	// IMP=0x001000000010153c
- (_Bool)shouldShowKnobs;	// IMP=0x001000000010141b
- (_Bool)canBeUsedForImageMask;	// IMP=0x00100000001011c3
- (void)p_forDragAndDropSetColor:(id)arg1;	// IMP=0x0010000000100c7e
- (_Bool)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;	// IMP=0x001000000010091c
- (_Bool)i_targetsDropsToStroke;	// IMP=0x00100000001008aa
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x001000000010073d
- (id)repToHighlightForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x0010000000100640
- (const struct CGPath *)newHighlightPathInScaledSpace;	// IMP=0x00100000001003d5
- (id)pathSourceForSelectionHighlightBehavior;	// IMP=0x0010000000100385
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;	// IMP=0x00100000001002fa
- (_Bool)shouldIgnoreICCSuppressSelectionKnobs;	// IMP=0x001000000010027e
- (_Bool)shouldSuppressSelectionHighlightDuringMultiselection;	// IMP=0x0010000000100209
- (_Bool)shouldShowSelectionHighlight;	// IMP=0x00100000001000e9
- (struct CGRect)targetRectForEditMenu;	// IMP=0x00100000000fffb6
- (void)dynamicDragDidEnd;	// IMP=0x00100000000ffeba
- (void)dynamicDragDidBegin;	// IMP=0x00100000000ffe3f
- (void)dynamicOperationDidEnd;	// IMP=0x00100000000ffda7
- (struct CGRect)aliasedAlignmentFrameInLayerFrame;	// IMP=0x00100000000ffc1c
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000000ffac9
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;	// IMP=0x00100000000ff999
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;	// IMP=0x00100000000ff6a6
- (_Bool)shouldExpandHitRegionWhenSmall;	// IMP=0x00100000000ff634
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000000fef37
- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2 withPrecision:(_Bool)arg3;	// IMP=0x00100000000fee46
- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2 withPrecision:(_Bool)arg3;	// IMP=0x00100000000fed49
- (void)p_invalidateHitTestCache;	// IMP=0x00100000000fed2c
- (_Bool)shouldHitTestWithFill;	// IMP=0x00100000000feb3f
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x00100000000fd105
- (void)willUpdateRenderable:(id)arg1;	// IMP=0x00100000000fcecf
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x00100000000fcdc8
- (void)viewScaleDidChange;	// IMP=0x00100000000fcd8c
- (struct CGSize)p_sizeForDirectlyManagedImageFromRenderableSize:(struct CGSize)arg1;	// IMP=0x00100000000fcd11
- (_Bool)p_currentlyDrawingSomeOtherShape;	// IMP=0x00100000000fcb63
- (_Bool)p_shouldSkipRenderableRecalculations;	// IMP=0x00100000000fcb30
- (void)i_forceInvalidateLayerFrame;	// IMP=0x00100000000fcad9
- (Class)layerClass;	// IMP=0x00100000000fca63
- (_Bool)isEditingChildRep;	// IMP=0x00100000000fca5b
- (_Bool)wantsRenderableToBeDescendedFromParentRepRenderable;	// IMP=0x00100000000fc9b1
- (_Bool)directlyManagesLayerContent;	// IMP=0x00100000000fc7fc
- (unsigned long long)p_renderingDestination;	// IMP=0x00100000000fc5c0
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;	// IMP=0x00100000000fc578
- (_Bool)skipsRerenderForTranslation;	// IMP=0x00100000000fc4b6
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;	// IMP=0x00100000000fc42f
- (struct CGRect)layerFrameInScaledCanvas;	// IMP=0x00100000000fc3f5
- (struct CGRect)p_layerFrameInScaledCanvasForDirectlyManagedLayer:(_Bool)arg1;	// IMP=0x00100000000fc1d8
- (void)p_forceSetNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x00100000000fc171
- (void)p_forceSetNeedsDisplay;	// IMP=0x00100000000fc135
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x00100000000fc0fe
- (void)setNeedsDisplay;	// IMP=0x00100000000fc07e
- (_Bool)p_isInsidePlayingFreehandDrawing;	// IMP=0x00100000000fc06a
- (id)p_strokeForRenderingIncludingPlaybackFromStroke:(id)arg1;	// IMP=0x00100000000fbfed
- (_Bool)p_shouldUpgradeStrokeForPlayback:(id)arg1;	// IMP=0x00100000000fbf2d
- (_Bool)shouldShowShadow;	// IMP=0x00100000000fbe9d
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;	// IMP=0x00100000000fbd92
- (_Bool)p_drawsSelfInOneStep;	// IMP=0x00100000000fbbbb
- (id)p_brushStrokeFromStroke:(id)arg1;	// IMP=0x00100000000fba4a
- (_Bool)p_hasFreehandDrawingBrushStroke;	// IMP=0x00100000000fb8f5
- (unsigned long long)p_bitmapContextOptionsForContextDestinedToDrawIntoCALayerContextForDrawingStroke:(id)arg1;	// IMP=0x00100000000fb8e3
- (unsigned long long)p_bitmapContextOptionsForDrawingStroke:(id)arg1;	// IMP=0x00100000000fb8c5
- (_Bool)p_shouldDrawStrokeWide:(id)arg1;	// IMP=0x00100000000fb840
- (void)p_drawLineEndForHead:(_Bool)arg1 withDelta:(struct CGPoint)arg2 andStroke:(id)arg3 inContext:(struct CGContext *)arg4 useFastDrawing:(_Bool)arg5;	// IMP=0x00000000000fb69f
@property(readonly, nonatomic) _Bool isPartiallyAnimated;
- (double)opacity;	// IMP=0x00100000000fb34b
@property(readonly, nonatomic) double strokeEnd;
- (_Bool)canDrawWithOtherShapeRep:(id)arg1;	// IMP=0x00100000000fb00b
@property(readonly, nonatomic) _Bool isMoreOptimalToDrawWithOtherShapeRepsIfPossible;
- (_Bool)isInvisible;	// IMP=0x00100000000fadbd
- (id)imageOfStroke:(struct CGRect *)arg1;	// IMP=0x00100000000fabe4
- (struct CGRect)strokeBoundsWithOptions:(unsigned long long)arg1 fallbackBounds:(struct CGRect)arg2;	// IMP=0x00100000000fab54
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 usingPathOverride:(id)arg5 patternOffsetsBySubpathOverride:(id)arg6 transparencyLayersBySubpath:(id)arg7;	// IMP=0x00100000000f8cd4
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4;	// IMP=0x00100000000f8ca9
- (void)drawInContext:(struct CGContext *)arg1 usingPathOverride:(id)arg2 patternOffsetsBySubpathOverride:(id)arg3 transparencyLayersBySubpath:(id)arg4;	// IMP=0x00100000000f8c6f
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6 keepingChildrenPassingTest:(CDUnknownBlockType)arg7;	// IMP=0x00100000000f8b8a
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x00100000000f8b41
- (void)p_drawChildrenWithoutOpacityInContext:(struct CGContext *)arg1 keepingChildrenPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000000f8b12
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1 keepingChildrenPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000000f88d1
- (id)colorBehindLayer:(id)arg1;	// IMP=0x00100000000f8802
- (void)p_endApplyOpacity:(struct CGContext *)arg1 apply:(_Bool)arg2;	// IMP=0x00100000000f87ef
- (_Bool)p_beginApplyOpacity:(struct CGContext *)arg1 forDrawingInOneStep:(_Bool)arg2;	// IMP=0x00100000000f8548
- (struct CGRect)clipRect;	// IMP=0x00100000000f84e3
- (struct CGRect)frameInUnscaledCanvas;	// IMP=0x00100000000f8342
@property(readonly, nonatomic) CRLShapeLayout *shapeLayout;
@property(readonly, nonatomic) _TtC8Freeform12CRLShapeItem *shapeInfo;
- (void)dealloc;	// IMP=0x00100000000f8233
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000000f80b0

// Remaining properties
// Error: Property attributes should begin with the type ('T') attribute, property name: debugDescription
// Property attributes: (null)

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

