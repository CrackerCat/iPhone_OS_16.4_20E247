//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLInteractiveCanvasController, NSArray, NSString, UITapGestureRecognizer;

@interface CRLiOSDocumentModeFreehandDrawing
{
    _Bool _didFinishPresentingBottomToolTray;	// 8 = 0x8
    unsigned long long _previousCanvasScrollMinTouchCount;	// 16 = 0x10
    NSArray *_previousFreehandGestureTouchTypes;	// 24 = 0x18
    UITapGestureRecognizer *_editMenuTapGR;	// 32 = 0x20
    _Bool _isObservingICCNotifications;	// 40 = 0x28
    CRLInteractiveCanvasController *_icc;	// 48 = 0x30
}

- (void).cxx_destruct;	// IMP=0x00200000001afcd8
@property(nonatomic) __weak CRLInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_icc;
- (_Bool)p_gestureRecognizer:(id)arg1 shouldReceiveTouchAtLocation:(struct CGPoint)arg2 touchType:(long long)arg3;	// IMP=0x00100000001af9ae
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00100000001af8ac
- (id)toolTray;	// IMP=0x00100000001af858
- (void)beginDrawingTransformMode;	// IMP=0x00100000001af770
- (void)p_updatePanAndDrawingGestureRecognizersForState;	// IMP=0x00100000001af395
- (void)p_editMenuTapReceived:(id)arg1;	// IMP=0x00100000001af254
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 touchType:(long long)arg2;	// IMP=0x00100000001af07a
- (void)p_deselectAllInfosNotInDrawingsOrDrawings;	// IMP=0x00100000001aed57
- (void)prefersPencilOnlyDrawingDidChange;	// IMP=0x00100000001aed16
- (_Bool)isValidForEditorController:(id)arg1;	// IMP=0x00100000001aebcb
- (_Bool)wantsToSuppressMediaReplacementKnobs;	// IMP=0x00100000001aebc3
- (_Bool)wantsToSuppressSelectionKnobs;	// IMP=0x00100000001aebbb
- (void)toolkitDidUpdateCurrentToolSelection;	// IMP=0x00100000001aea27
- (_Bool)allowedToEnterQuickSelectModeForCanvasViewController:(id)arg1;	// IMP=0x00100000001aea1f
@property(readonly, nonatomic) _Bool allowsFingerDrawing;
- (id)cursorAtPoint:(struct CGPoint)arg1 withCursorPlatformObject:(id)arg2;	// IMP=0x00100000001ae257
- (_Bool)wantsAlternateContextMenuBehaviorAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000001ae1c3
- (void)modeDidPresentBottomToolTray;	// IMP=0x00100000001ae19b
- (void)modeDidEndForMode:(id)arg1 forced:(_Bool)arg2;	// IMP=0x00100000001ae0b3
- (void)modeWillEndForMode:(id)arg1 forced:(_Bool)arg2;	// IMP=0x00100000001ada93
- (void)modeDidBeginFromMode:(id)arg1 forced:(_Bool)arg2;	// IMP=0x00100000001ad768
- (void)modeWillBeginFromMode:(id)arg1 forced:(_Bool)arg2;	// IMP=0x00100000001ad3c6
- (void)selectionPathDidChange:(id)arg1;	// IMP=0x00100000001ad098
- (_Bool)wantsDoneButtonInCompact;	// IMP=0x00100000001ad090
- (void)p_removeObservationOfInteractiveCanvasController:(id)arg1;	// IMP=0x00100000001acfd5
- (void)p_addObservationOfInteractiveCanvasController:(id)arg1;	// IMP=0x00100000001acf12
- (_Bool)wantsLegacyEditMenu;	// IMP=0x00100000001ace5f
- (_Bool)wantsToEndForNonPopoverPresentations;	// IMP=0x00100000001ace57
- (_Bool)wantsToSuppressBottomToolbarInCompact;	// IMP=0x00100000001ace4f
- (_Bool)wantsToSuppressMiniFormatter;	// IMP=0x00100000001ace47
- (_Bool)wantsToSuppressMultiselectionWithSingleBounds;	// IMP=0x00100000001ace3f
- (_Bool)wantsToSuppressZoomInResponseToSelectionChange;	// IMP=0x00100000001ace37
- (id)allowedKeyCommandsFromKeyCommands:(id)arg1;	// IMP=0x00100000001ace2f
- (id)gesturesToAdjustIfPencilShouldSelectAndScrollFromGestures:(id)arg1;	// IMP=0x00100000001acd35
- (_Bool)allowGestureInRestrictedGestureMode:(id)arg1;	// IMP=0x00100000001acabd
- (_Bool)wantsCanvasInRestrictedGestureMode;	// IMP=0x00100000001acab5
- (unsigned long long)pencilModeType;	// IMP=0x00100000001acaaa
- (_Bool)shouldProhibitAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00100000001aca32
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000001ac9e2
- (id)initWithBoardViewController:(id)arg1 andInteractiveCanvasController:(id)arg2;	// IMP=0x00100000001ac962

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

