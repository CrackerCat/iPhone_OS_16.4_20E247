//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CALayer, CRLCanvas, CRLCanvasAnimation, CRLCanvasGuideController, CRLCanvasLayer, CRLCanvasLayoutController, CRLCanvasRep, CRLCanvasView, CRLChangeNotifier, CRLColor, CRLDynamicOperationController, CRLEditorController, CRLFreehandDrawingToolkit, CRLGestureDispatcher, CRLInteractiveCanvasLayerHelper, CRLRealTimeSyncDecorator, CRLSelectionModelTranslator, CRLSelectionPath, CRLTrackerManipulatorCoordinator, NSArray, NSDictionary, NSFormatter, NSMapTable, NSMutableArray, NSMutableSet, NSNumberFormatter, NSSet, NSString, _TtC8Freeform20CRLCommandController, _TtC8Freeform21CRLEditingCoordinator, _TtC8Freeform21CRLTextInputResponder, _TtC8Freeform24CRLMultiselectResizeInfo, _TtC8Freeform8CRLBoard;
@protocol CRLCanvasContainerRep, CRLCanvasEditor, CRLCanvasLayerHosting, CRLCollaboratorCursorRendererDelegate, CRLContainerInfo, CRLInteractiveCanvasControllerDelegate, CRLInteractiveCanvasLayerUpdater, CRLMediaReplacer, CRLSearchReference;

@interface CRLInteractiveCanvasController : NSObject
{
    id <CRLCollaboratorCursorRendererDelegate> mCollaboratorCursorDelegate;	// 8 = 0x8
    id <CRLInteractiveCanvasControllerDelegate> mDelegate;	// 16 = 0x10
    _Bool mCreateRepsForOffscreenLayouts;	// 24 = 0x18
    id <CRLInteractiveCanvasLayerUpdater> mLayerUpdater;	// 32 = 0x20
    NSObject<CRLCanvasEditor> *mCanvasEditor;	// 40 = 0x28
    _Bool mIsTearingDown;	// 48 = 0x30
    _Bool mHasBeenTornDown;	// 49 = 0x31
    _TtC8Freeform21CRLTextInputResponder *mTextInputResponder;	// 56 = 0x38
    CRLCanvas *mCanvas;	// 64 = 0x40
    id <CRLCanvasLayerHosting> mLayerHost;	// 72 = 0x48
    id mObservedDocumentRoot;	// 80 = 0x50
    CRLEditorController *mEditorController;	// 88 = 0x58
    CRLCanvasGuideController *mGuideController;	// 96 = 0x60
    _Bool mHasCanvasEverLaidOut;	// 104 = 0x68
    _Bool mHadLayerHost;	// 105 = 0x69
    _Bool mLayerHostHasBeenTornDown;	// 106 = 0x6a
    CRLInteractiveCanvasController *mTextInputResponderSource;	// 112 = 0x70
    unsigned long long mTextInputResponderShareCount;	// 120 = 0x78
    long long mNotifyTIRSelectionChangedAfterLayout;	// 128 = 0x80
    _Bool mNotifyTIRTextChangedAfterLayout;	// 136 = 0x88
    NSFormatter *mUnitFormatter;	// 144 = 0x90
    NSNumberFormatter *mNumberFormatter;	// 152 = 0x98
    _Bool mResizeCanvasOnLayout;	// 160 = 0xa0
    struct CGRect mUnscaledRectToGrowCanvasDuringDynamicOperation;	// 168 = 0xa8
    struct CGRect mRectToIncludeWhenGrowingCanvasToFitContent;	// 200 = 0xc8
    NSMutableSet *mRepsToSetNeedsDisplay;	// 232 = 0xe8
    NSMapTable *mRepsToRectsToInvalidate;	// 240 = 0xf0
    NSMutableSet *mRepsDrawnIntoAncestorToSetNeedsDisplayOnUpdatedGeometry;	// 248 = 0xf8
    _Bool mOverlayLayerSuppressed;	// 256 = 0x100
    NSMutableArray *mDecorators;	// 264 = 0x108
    NSMutableSet *mDecoratorsWithInvalidLayers;	// 272 = 0x110
    _Bool mAllDecoratorLayersAreInvalid;	// 280 = 0x118
    _Bool mShowGrayOverlay;	// 281 = 0x119
    unsigned long long mDynamicOperationState;	// 288 = 0x120
    _Atomic int mDynamicOperationCounter;	// 296 = 0x128
    _Bool mDocumentIsSharedReadOnly;	// 300 = 0x12c
    CRLColor *mSelectionHighlightColor;	// 304 = 0x130
    _Bool mShowInvisibleObjects;	// 312 = 0x138
    long long mIsFetchingEditorController;	// 320 = 0x140
    _Bool mSelectionIsCurrentlyOnscreen;	// 328 = 0x148
    _Bool mDidTransform;	// 329 = 0x149
    CRLRealTimeSyncDecorator *mLiveSyncDecorator;	// 336 = 0x150
    CRLCanvasAnimation *mCurrentAnimation;	// 344 = 0x158
    CRLTrackerManipulatorCoordinator *mTMCoordinator;	// 352 = 0x160
    CRLDynamicOperationController *mDynOpController;	// 360 = 0x168
    _TtC8Freeform24CRLMultiselectResizeInfo *mMultiselectResizeInfo;	// 368 = 0x170
    NSMutableSet *mCurrentCollaboratorPresences;	// 376 = 0x178
    NSMapTable *mCollaboratorPresenceToCollaboratorHUDControllerDictionary;	// 384 = 0x180
    NSMapTable *mCollaboratorPresenceToCollaboratorHUDControllerDictionaryForFastSizing;	// 392 = 0x188
    NSSet *mInfosPreviouslyShowingCollabCursors;	// 400 = 0x190
    _Bool mCollaboratorCursorsInvalidated;	// 408 = 0x198
    NSSet *mLayoutsShowingCollabCursorsDuringLayerUpdate;	// 416 = 0x1a0
    CRLGestureDispatcher *mGestureDispatcher;	// 424 = 0x1a8
    struct CGRect mVisibleBoundsRectForTiling;	// 432 = 0x1b0
    struct CGRect mVisibleUnscaledRect;	// 464 = 0x1d0
    struct CGRect mUnobscuredScrollViewFrame;	// 496 = 0x1f0
    struct CGRect mUnobscuredScrollViewFrameIgnoringObscuringRectangles;	// 528 = 0x210
    NSSet *mRepsToHideForCurrentTracker;	// 560 = 0x230
    _Bool mCurrentlyScrolling;	// 568 = 0x238
    _Bool mAnimatingScroll;	// 569 = 0x239
    _Bool mTextGesturesInFlight;	// 570 = 0x23a
    _Bool mSelectionDidChangeDuringTextGestures;	// 571 = 0x23b
    _Bool mDidSuppressScrollToSelectionDuringTextGestures;	// 572 = 0x23c
    _Bool mShouldAnimateScrollAfterTextGestures;	// 573 = 0x23d
    _Bool mShouldSuppressRendering;	// 574 = 0x23e
    NSMutableSet *mNotificationsToPostWithValidLayouts;	// 576 = 0x240
    NSMutableArray *mBlocksToPerformOnMainThreadWithValidLayouts;	// 584 = 0x248
    NSMutableArray *mLayersWithZoomFadeAnimation;	// 592 = 0x250
    _Bool mDynamicallyZooming;	// 600 = 0x258
    double mDynamicViewScale;	// 608 = 0x260
    _Bool mUsesAlternateDrawableSelectionHighlight;	// 616 = 0x268
    _Bool mAllowsSelectionKnobs;	// 617 = 0x269
    _Bool mAllowsSelectionHighlight;	// 618 = 0x26a
    _Bool mAnimatingViewScale;	// 619 = 0x26b
    struct CGPoint mZoomCenterInBounds;	// 624 = 0x270
    NSMutableArray *mBackgroundRenderingObjects;	// 640 = 0x280
    _Bool mShouldClipThemeContentToCanvas;	// 648 = 0x288
    _Bool mIsDraggingToInsertBoardItems;	// 649 = 0x289
    CRLSelectionPath *mSelectionPathToScrollTo;	// 656 = 0x290
    unsigned long long mOptionsForScrollingToSelection;	// 664 = 0x298
    _Bool mSelectionShouldBeClearedInDidProcessAllChanges;	// 672 = 0x2a0
    NSMutableSet *mVisibleCollaboratorPresences;	// 680 = 0x2a8
    _Bool mDiscardingEdits;	// 688 = 0x2b0
    _Bool _shouldCanvasScrollingSizeGrowToFitBoardContent;	// 689 = 0x2b1
    _Bool mDisplaysMultiselectionWithSingleBounds;	// 690 = 0x2b2
    _Bool mPreventSettingNilEditorOnTextResponder;	// 691 = 0x2b3
    _Bool mSuppressesCollaboratorHUD;	// 692 = 0x2b4
    _Bool _floatingCursorInMotion;	// 693 = 0x2b5
    CRLFreehandDrawingToolkit *mFreehandDrawingToolkit;	// 696 = 0x2b8
    NSArray *_temporaryAdditionalBoardItemsToDisplay;	// 704 = 0x2c0
    NSObject<CRLSearchReference> *_primaryFindResultSearchReference;	// 712 = 0x2c8
    NSDictionary *_searchReferencesToHighlight;	// 720 = 0x2d0
}

+ (double)defaultAutoZoomAnimationDuration;	// IMP=0x0020000000430a03
+ (id)keyPathsForValuesAffectingEditingDisabled;	// IMP=0x0010000000424ffe
+ (double)smallRepOutsetForHitTestingWithPrecision:(_Bool)arg1;	// IMP=0x001000000041ce16
+ (id)keyPathsForValuesAffectingCurrentViewScale;	// IMP=0x0010000000414fcd
+ (id)keyPathsForValuesAffectingViewScale;	// IMP=0x0010000000414ec6
+ (id)keyPathsForValuesAffectingEditorController;	// IMP=0x001000000040e696
+ (_Bool)selectorIsActionMethod:(SEL)arg1;	// IMP=0x0010000000409904
+ (double)maximumRecommendedViewScale;	// IMP=0x0010000000c2d2c0
+ (double)minimumRecommendedViewScale;	// IMP=0x0010000000c2d2b0
- (void).cxx_destruct;	// IMP=0x0010000000430d5f
@property(retain, nonatomic) NSDictionary *searchReferencesToHighlight; // @synthesize searchReferencesToHighlight=_searchReferencesToHighlight;
@property(retain, nonatomic) NSObject<CRLSearchReference> *primaryFindResultSearchReference; // @synthesize primaryFindResultSearchReference=_primaryFindResultSearchReference;
@property(nonatomic) _Bool floatingCursorInMotion; // @synthesize floatingCursorInMotion=_floatingCursorInMotion;
@property(nonatomic) _Bool showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) _Bool allowsSelectionHighlight; // @synthesize allowsSelectionHighlight=mAllowsSelectionHighlight;
@property(nonatomic) _Bool allowsSelectionKnobs; // @synthesize allowsSelectionKnobs=mAllowsSelectionKnobs;
@property(nonatomic) _Bool documentIsSharedReadOnly; // @synthesize documentIsSharedReadOnly=mDocumentIsSharedReadOnly;
@property(nonatomic) _Bool suppressesCollaboratorHUD; // @synthesize suppressesCollaboratorHUD=mSuppressesCollaboratorHUD;
@property(nonatomic) _Bool showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) _Bool overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(copy, nonatomic) NSArray *temporaryAdditionalBoardItemsToDisplay; // @synthesize temporaryAdditionalBoardItemsToDisplay=_temporaryAdditionalBoardItemsToDisplay;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(readonly, nonatomic) _Bool currentlyScrolling; // @synthesize currentlyScrolling=mCurrentlyScrolling;
@property(nonatomic) _Bool createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(readonly, nonatomic, getter=isDiscardingEdits) _Bool discardingEdits; // @synthesize discardingEdits=mDiscardingEdits;
@property(nonatomic) _Bool isDraggingToInsertBoardItems; // @synthesize isDraggingToInsertBoardItems=mIsDraggingToInsertBoardItems;
@property(nonatomic) _Bool preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(retain, nonatomic) _TtC8Freeform21CRLTextInputResponder *textInputResponder; // @synthesize textInputResponder=mTextInputResponder;
@property(retain, nonatomic) NSObject<CRLCanvasEditor> *canvasEditor; // @synthesize canvasEditor=mCanvasEditor;
@property(nonatomic) _Bool resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(retain, nonatomic) CRLFreehandDrawingToolkit *freehandDrawingToolkit; // @synthesize freehandDrawingToolkit=mFreehandDrawingToolkit;
@property(nonatomic) _Bool textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(nonatomic) _Bool displaysMultiselectionWithSingleBounds; // @synthesize displaysMultiselectionWithSingleBounds=mDisplaysMultiselectionWithSingleBounds;
@property(readonly, nonatomic) _Bool animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) _Bool shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(nonatomic) __weak id <CRLCollaboratorCursorRendererDelegate> collaboratorCursorDelegate; // @synthesize collaboratorCursorDelegate=mCollaboratorCursorDelegate;
@property(nonatomic) __weak id <CRLInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) CRLCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) __weak id <CRLCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
@property(nonatomic) _Bool shouldCanvasScrollingSizeGrowToFitBoardContent; // @synthesize shouldCanvasScrollingSizeGrowToFitBoardContent=_shouldCanvasScrollingSizeGrowToFitBoardContent;
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000430a11
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 orientation:(long long)arg4;	// IMP=0x001000000042fb40
- (void)p_consumeRepsDrawnIntoAncestorToSetNeedsDisplayOnUpdatedGeometry;	// IMP=0x001000000042f53f
- (struct CGRect)p_convertNeedsDisplayRect:(struct CGRect)arg1 fromRep:(id)arg2 toRepForDrawing:(id)arg3;	// IMP=0x001000000042f28c
- (_Bool)p_setNeedsDisplayIfNeededForAncestorRepOf:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x001000000042f1bf
- (void)p_setNeedsDisplayIfNeededForAncestorRepOf:(id)arg1;	// IMP=0x001000000042f12f
- (struct CGRect)outsetSelectionRect:(struct CGRect)arg1;	// IMP=0x001000000042f07c
- (void)p_setTargetPointSize:(double)arg1;	// IMP=0x001000000042f01c
- (double)targetPointSize;	// IMP=0x001000000042ef8f
@property(readonly, nonatomic) double defaultTargetPointSize;
- (void)p_selectionDoneChangingWithFlags:(unsigned long long)arg1;	// IMP=0x001000000042eea7
- (id)p_infosByAddingAllAncestors:(id)arg1;	// IMP=0x001000000042ec88
- (void)p_selectionPathDidChangeFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2;	// IMP=0x001000000042e873
- (void)p_textGesturesDidEndNotification:(id)arg1;	// IMP=0x001000000042e465
- (void)p_textGesturesWillBeginNotification:(id)arg1;	// IMP=0x001000000042e39e
- (void)p_viewScrollingEnded;	// IMP=0x001000000042e380
- (void)i_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;	// IMP=0x001000000042dde6
- (_Bool)i_isRepContentPlatformView:(id)arg1;	// IMP=0x001000000042db8c
- (void)p_updateCanvasSizeFromLayouts;	// IMP=0x001000000042d800
- (id)i_descriptionForViewScale:(double)arg1 zoomMethod:(long long)arg2;	// IMP=0x001000000042d6d9
@property(readonly, nonatomic) CRLCanvasAnimation *i_currentAnimation;
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x001000000042d521
- (void)i_repNeedsDisplay:(id)arg1;	// IMP=0x001000000042d3ff
- (void)i_recordUserViewScale;	// IMP=0x001000000042d2dd
- (void)i_viewScrollingEnded;	// IMP=0x001000000042d0e1
- (void)i_viewScrollDidChange;	// IMP=0x001000000042cf1d
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2 isFastPinch:(_Bool)arg3;	// IMP=0x001000000042ca31
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;	// IMP=0x001000000042c985
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2 isFastPinch:(_Bool)arg3;	// IMP=0x001000000042c4bd
- (void)i_viewScaleDidChange;	// IMP=0x001000000042c33b
- (void)i_canvasWideGamutValueDidChange;	// IMP=0x001000000042c1f9
- (void)i_canvasContentsScaleDidChange;	// IMP=0x001000000042bfac
- (void)viewDidEndZooming;	// IMP=0x001000000042bcaa
- (void)i_viewDidZoomToViewScale:(double)arg1;	// IMP=0x001000000042bb04
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;	// IMP=0x001000000042baee
- (void)i_viewWillBeginZooming;	// IMP=0x001000000042b7fc
- (void)i_layout;	// IMP=0x001000000042b5fb
- (void)i_canvasWillLayout:(id)arg1;	// IMP=0x001000000042b026
- (void)commitAnimations;	// IMP=0x001000000042ae20
- (void)beginAnimations:(id)arg1;	// IMP=0x001000000042abce
- (void)i_selectionDidChange;	// IMP=0x001000000042a9c8
- (void)i_textDidChange;	// IMP=0x001000000042a7c1
- (void)setTextResponderEditorTo:(id)arg1 withFlags:(unsigned long long)arg2;	// IMP=0x001000000042a738
- (void)performDiscreteFrameChangingOperationOnDrawables:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000042a726
- (_Bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x001000000042a68b
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x001000000042a5f1
- (void)i_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;	// IMP=0x001000000042a25a
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x0010000000429d97
- (void)p_updateInfosToDisplayIfNeeded;	// IMP=0x00100000004299e3
- (_Bool)selectionPathContainsOnlyInfosOnCanvas:(id)arg1;	// IMP=0x00100000004299db
- (void)didProcessAllChanges;	// IMP=0x0010000000429896
- (_Bool)shouldCancelScrollingToSelectionPath:(id)arg1 forChanges:(id)arg2 withChangeSource:(id)arg3;	// IMP=0x001000000042988e
- (void)preprocessChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x0010000000429819
- (void)p_setCurrentlyScrolling:(_Bool)arg1;	// IMP=0x00100000004295a1
- (void)p_scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x00100000004294e2
- (void)scrollViewDidScrollToTop:(id)arg1;	// IMP=0x00100000004294bc
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;	// IMP=0x001000000042943b
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x001000000042922f
- (void)scrollView:(id)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;	// IMP=0x0010000000429211
- (void)scrollViewDidChangeAdjustedContentInset:(id)arg1;	// IMP=0x00100000004291ff
- (void)contentInsetsDidChangeForScrollView:(id)arg1;	// IMP=0x0010000000429195
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x001000000042914c
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x00100000004290cd
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0010000000429057
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x0010000000428884
- (_Bool)scrollViewShouldOptOutOfUIScrollViewContentOffsetAnimationForScrollView:(id)arg1;	// IMP=0x0010000000428816
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;	// IMP=0x001000000042809e
- (_Bool)shouldLayoutTilingLayer:(id)arg1;	// IMP=0x001000000042801b
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000004279f9
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000427991
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000004275bf
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000427448
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x0010000000427057
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2 inputType:(long long)arg3;	// IMP=0x0010000000426f09
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;	// IMP=0x0010000000426f03
- (void)updateSelectionForInteractionWithRep:(id)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x0010000000426c1a
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x0010000000426bc9
@property(readonly, nonatomic) CRLGestureDispatcher *gestureDispatcher;
- (id)customRotateTrackerForCurrentSelection;	// IMP=0x0010000000426923
@property(readonly, retain, nonatomic) CRLTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) CRLDynamicOperationController *dynamicOperationController;
- (void)p_endZoomingOperation;	// IMP=0x0010000000426464
- (void)p_beginZoomingOperation;	// IMP=0x0010000000425ddb
- (void)endScrollingOperation;	// IMP=0x0010000000425c95
- (void)beginScrollingOperation;	// IMP=0x0010000000425b4f
- (void)i_invalidateSelectionHighlightLayers;	// IMP=0x00100000004259f2
- (id)additionalChildInfosForLayout:(id)arg1;	// IMP=0x00100000004258f4
- (id)additionalDependentLayoutsForBoardItem:(id)arg1;	// IMP=0x001000000042581a
- (_Bool)shouldSuppressSelectionKnobsForRep:(id)arg1;	// IMP=0x0010000000425780
@property(nonatomic) _Bool usesAlternateDrawableSelectionHighlight;
- (void)documentEditabilityDidChange;	// IMP=0x0010000000425252
- (void)copyEditabilityPropertiesFromInteractiveCanvasController:(id)arg1;	// IMP=0x001000000042503c
@property(readonly, nonatomic) _Bool editingDisabled;
- (unsigned long long)p_editingDisabledReasons;	// IMP=0x0010000000424fe8
- (_Bool)p_areAnyCollaboratorsPresent;	// IMP=0x0010000000424fa0
@property(readonly, nonatomic) _Bool shouldAllowKeyCommands;
- (_Bool)isInInspectorDynamicOperation;	// IMP=0x0010000000424ec2
- (void)endPossiblyParallelInspectorDynamicOperation;	// IMP=0x0010000000424ca5
- (void)beginPossiblyParallelInspectorDynamicOperation;	// IMP=0x0010000000424c5a
@property(readonly, nonatomic) _Bool shouldSupportedDynamicOperationsEnqueueCommandsInRealTime;
@property(readonly, nonatomic) _Bool isDynamicOperationEnding;
@property(readonly, nonatomic) _Bool isInDynamicOperation;
- (void)endDynamicOperation;	// IMP=0x00100000004245b1
- (void)willEndDynamicOperation;	// IMP=0x00100000004243cc
- (void)beginDynamicOperation;	// IMP=0x0010000000423c3c
- (_Bool)openURL:(id)arg1;	// IMP=0x0010000000423c34
- (_Bool)canCustomizeHyperlinkViewController;	// IMP=0x0010000000423c2c
- (void)toggleHyperlinkUIForRep:(id)arg1;	// IMP=0x0010000000423c26
- (_Bool)allowedToShowHyperlinkContextMenuForRep:(id)arg1;	// IMP=0x0010000000423c1e
- (_Bool)isHyperlinkKnobEnabledForRep:(id)arg1;	// IMP=0x0010000000423c16
@property(readonly, nonatomic) _Bool shouldShowHyperlinkKnob;
@property(readonly, nonatomic) _Bool canModifyHyperlinks;
@property(readonly, nonatomic) double visibleCanvasWidth;
@property(readonly, nonatomic) double contentsScale;
- (void)positionDidUpdateForCollaboratorHUDController:(id)arg1;	// IMP=0x001000000042395b
- (void)updatePositionForCollaboratorHUDController:(id)arg1;	// IMP=0x001000000042361a
- (void)removeCollaboratorHUDController:(id)arg1;	// IMP=0x00100000004233c1
- (void)addCollaboratorHUDController:(id)arg1;	// IMP=0x0010000000422f27
- (id)filteredMainCanvasRestoredSelectionPath:(id)arg1;	// IMP=0x0010000000422f11
- (void)setShouldSuppressesCollaboratorHUD:(_Bool)arg1;	// IMP=0x0010000000422dc3
- (void)removeAllCollaboratorHUDControllers;	// IMP=0x0010000000422c5e
- (id)p_layoutForShowingCollaboratorCursorHUDAtSelectionPath:(id)arg1;	// IMP=0x0010000000422a50
- (CDStruct_7df06a46)p_collaboratorHUDPositionForSelectionPath:(id)arg1 collaboratorPresence:(id)arg2 allowScroll:(_Bool)arg3 hudSize:(unsigned long long)arg4;	// IMP=0x00100000004214cd
- (void)hideCollaboratorHUDForCollaborator:(id)arg1;	// IMP=0x0010000000421285
- (void)p_showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(_Bool)arg3 hudSize:(unsigned long long)arg4;	// IMP=0x00100000004209b4
- (void)showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(_Bool)arg3;	// IMP=0x001000000042099f
- (void)scrollToCollaborator:(id)arg1 withSelectionPath:(id)arg2;	// IMP=0x0010000000420746
@property(readonly, nonatomic) NSSet *currentCollaboratorPresences;
- (void)collaboratorCursorSelectionPathChangedFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2 collaboratorPresence:(id)arg3;	// IMP=0x001000000041fd50
- (void)p_endCachingLayoutsForCollaboratorCursors;	// IMP=0x001000000041fd30
- (void)p_beginCachingLayoutsForCollaboratorCursors;	// IMP=0x001000000041f8da
- (void)p_performBlockWithCachedLayoutsForCollaboratorCursors:(CDUnknownBlockType)arg1;	// IMP=0x001000000041f88c
- (_Bool)i_shouldShowCollaboratorCursorForLayout:(id)arg1;	// IMP=0x001000000041f837
- (id)i_collaboratorPresenceSelectingLayout:(id)arg1;	// IMP=0x001000000041f4cf
- (id)p_repsForCollaboratorCursorSelectionPath:(id)arg1;	// IMP=0x001000000041f135
@property(readonly, nonatomic) NSArray *i_decorators;
- (void)removeDecorator:(id)arg1;	// IMP=0x001000000041eea6
- (void)addDecorator:(id)arg1;	// IMP=0x001000000041ec6d
- (void)closeOverlays;	// IMP=0x001000000041ebef
@property(readonly, nonatomic) CALayer *overlayLayer;
@property(readonly, nonatomic) _Bool shouldShowPathHighlightOnUnselectedInvisibleShapes;
@property(readonly, nonatomic) _Bool shouldEverShowPathHighlightOnInvisibleShapes;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
@property(readonly, nonatomic) CALayer *repContainerLayer;
- (void)performBlockOnMainThreadAfterLayoutIfNecessary:(CDUnknownBlockType)arg1;	// IMP=0x001000000041e959
- (void)layoutIfNeededIncludingLayerTreeIfYouKnowWhatYouAreDoing;	// IMP=0x000000000041e947
- (void)layoutIfNeeded;	// IMP=0x001000000041e8ac
- (id)mostVisibleParentForFreehandDrawingLayouts;	// IMP=0x001000000041e849
- (id)parentForFreehandDrawingLayoutsAtPoint:(struct CGPoint)arg1;	// IMP=0x001000000041e7f5
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelectionPath:(id)arg2;	// IMP=0x001000000041e47c
- (id)layoutForInfoNearestVisibleRect:(id)arg1;	// IMP=0x001000000041e154
- (id)layoutsForInfo:(id)arg1 intersectingSelectionPath:(id)arg2;	// IMP=0x001000000041dfe4
- (id)layoutForSelectionPath:(id)arg1;	// IMP=0x001000000041df94
- (id)layoutForInfo:(id)arg1;	// IMP=0x001000000041df11
- (id)layoutsForSelectionPath:(id)arg1;	// IMP=0x001000000041daac
- (id)layoutsForInfo:(id)arg1;	// IMP=0x001000000041da29
- (id)validatedLayoutForInfo:(id)arg1;	// IMP=0x001000000041d9a6
@property(readonly, nonatomic) CRLCanvasLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2 returningRep:(id *)arg3;	// IMP=0x001000000041d73b
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2 inRep:(id)arg3 minDistance:(double *)arg4 hitKnob:(id *)arg5 hitRep:(id *)arg6;	// IMP=0x001000000041d304
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;	// IMP=0x001000000041d0ed
- (id)hitRepIgnoringClickThrough:(struct CGPoint)arg1;	// IMP=0x001000000041cf52
- (id)hitRep:(struct CGPoint)arg1;	// IMP=0x001000000041cf3e
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x001000000041cf2a
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x001000000041cf13
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x001000000041ce32
@property(readonly, nonatomic) NSArray *topLevelRepsForHitTesting;
@property(readonly, nonatomic) NSArray *topLevelRepsForDragSelecting;
@property(readonly, nonatomic) id <CRLContainerInfo> topLevelContainerInfoForEditing;
@property(readonly, nonatomic) CRLCanvasRep<CRLCanvasContainerRep> *topLevelContainerRepForEditing;
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;	// IMP=0x001000000041c77e
- (id)unitStringForAngle:(double)arg1 shouldNormalize:(_Bool)arg2;	// IMP=0x001000000041c61b
- (id)unitStringForAngle:(double)arg1;	// IMP=0x001000000041c4d4
- (id)unitStringForNumber:(double)arg1;	// IMP=0x001000000041c382
- (id)unitStringForSize:(struct CGSize)arg1 forAccessibility:(_Bool)arg2;	// IMP=0x001000000041c1a8
- (id)unitStringForPoint:(struct CGPoint)arg1;	// IMP=0x001000000041bfd1
- (id)numberFormatter;	// IMP=0x001000000041bf8a
- (id)unitFormatter;	// IMP=0x001000000041bf01
@property(readonly, nonatomic) _Bool i_shouldAttemptToPreserveContentOffsetAfterFixFrame;
- (struct CGRect)growUnscaledCanvasLayerRect:(struct CGRect)arg1;	// IMP=0x001000000041b9e1
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;	// IMP=0x001000000041b973
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;	// IMP=0x001000000041b905
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;	// IMP=0x001000000041b897
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;	// IMP=0x001000000041b829
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;	// IMP=0x001000000041b7af
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;	// IMP=0x001000000041b735
@property(readonly, nonatomic) _Bool allowNegativeAutoscroll;
@property(readonly, nonatomic) _Bool allowAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
- (struct CGRect)p_calculateVisibleUnscaledRect;	// IMP=0x001000000041b68f
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;	// IMP=0x001000000041b5bc
@property(readonly, nonatomic) struct CGRect i_visibleBoundsRectForHitTestingCanvasView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(_Bool)arg1 respectObscuredFrame:(_Bool)arg2 respectSafeArea:(_Bool)arg3 respectObscuringRects:(_Bool)arg4;	// IMP=0x001000000041ae9e
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
- (id)repsToHide;	// IMP=0x001000000041ade4
@property(readonly, nonatomic) _Bool allowedToEditMask;
- (void)discardRepForClassChange:(id)arg1;	// IMP=0x001000000041a98d
- (void)recreateAllLayoutsAndReps;	// IMP=0x001000000041a8f7
- (id)containerRenderableForRep:(id)arg1;	// IMP=0x001000000041a691
- (id)renderableForRep:(id)arg1;	// IMP=0x001000000041a60e
- (id)repForLayout:(id)arg1;	// IMP=0x001000000041a5fa
- (id)p_repForLayout:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x001000000041a55c
- (id)repForInfo:(id)arg1;	// IMP=0x001000000041a548
- (id)repForInfo:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x001000000041a217
- (id)repsForInfo:(id)arg1;	// IMP=0x001000000041a033
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;	// IMP=0x00100000004196e3
- (void)clearLayoutsForTopLevelContainerChange;	// IMP=0x00100000004196a6
- (struct CGRect)p_safeAreaLayoutGuideLayoutFrame;	// IMP=0x001000000041959c
@property(copy, nonatomic) NSArray *infosToDisplay;
- (void)transformGuides:(id)arg1 forLayout:(id)arg2;	// IMP=0x00100000004194b7
- (_Bool)shouldGenerateGuidesForLayout:(id)arg1;	// IMP=0x00100000004194af
- (id)provideDynamicGuidesForLayout:(id)arg1;	// IMP=0x00100000004194a2
- (struct CGRect)boundingRectForActiveGuidesForPoint:(struct CGPoint)arg1;	// IMP=0x0010000000419484
@property(readonly, nonatomic) NSArray *infosForGuides;
- (void)translateGuides:(id)arg1 toContainerRect:(struct CGRect)arg2;	// IMP=0x0010000000419326
- (void)clipGuideToContainer:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x001000000041922d
- (void)translateGuide:(id)arg1 toContainerRect:(struct CGRect)arg2;	// IMP=0x00100000004190d3
@property(readonly, nonatomic) CRLCanvasGuideController *guideController;
- (_Bool)p_shouldTransformCurrentSelectionAsSingleEntity;	// IMP=0x001000000041905e
- (void)updateCanvasDotGridVisibilityIfNeeded;	// IMP=0x0010000000418e4a
- (_Bool)shouldEnableToolbarDoneButton;	// IMP=0x0010000000418d27
- (_Bool)shouldShowInstructionalTextForLayout:(id)arg1;	// IMP=0x0010000000418c6d
@property(readonly, nonatomic) _Bool shouldShowTextOverflowGlyphs;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (void)p_spellCheckingStateChangedNotification:(id)arg1;	// IMP=0x0010000000418a67
- (void)p_spellCheckerWordsDidChangeNotification:(id)arg1;	// IMP=0x0010000000418901
- (_Bool)spellCheckingSuppressed;	// IMP=0x001000000041886b
- (_Bool)spellCheckingSupported;	// IMP=0x00100000004187fd
@property(readonly, nonatomic) struct CGRect visibleScaledRectForCanvasUI;
@property(readonly, nonatomic) id <CRLMediaReplacer> mediaReplacer;
@property(readonly, nonatomic) _Bool hasMediaReplacer;
@property(copy, nonatomic) CRLColor *selectionHighlightColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;	// IMP=0x00100000004182b5
- (void)setNeedsDisplayOnLayer:(id)arg1;	// IMP=0x00100000004182a0
- (void)updateCanvasViewSubviewFrames;	// IMP=0x0010000000418263
- (struct CGSize)p_sizeOfScrollViewEnclosingCanvasForVisibleCanvasCalculations;	// IMP=0x001000000041812c
- (struct CGSize)p_calculatedSizeOfScrollViewEnclosingCanvas;	// IMP=0x0010000000417e2d
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
@property(readonly, nonatomic) struct CGPoint contentOffset;
- (void)setContentOffset:(struct CGPoint)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000417bcf
- (void)growCanvasAsNeededToRestoreContentOffset:(struct CGPoint)arg1;	// IMP=0x00100000004178fd
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000417893
- (void)scrollRectToVisible:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x00100000004173ea
- (struct CGPoint)p_contentOffsetToScrollRectToVisible:(struct CGRect)arg1 shouldCenterVertically:(_Bool)arg2 forceCentering:(_Bool)arg3;	// IMP=0x0010000000416520
- (void)updateScrollViewContentOffsetIfNeeded;	// IMP=0x001000000041651a
- (struct CGRect)p_unobscuredScrollViewFrameIgnoringObscuringRectangles;	// IMP=0x0010000000416436
- (void)unobscuredFrameDidChange;	// IMP=0x0010000000416221
- (void)p_updateUnobscuredFrame;	// IMP=0x0010000000415f0b
- (struct CGRect)p_unosbcuredFrameOfView:(id)arg1 includingObscuringRectangles:(_Bool)arg2;	// IMP=0x0010000000415a0b
- (struct CGRect)unobscuredFrameOfView:(id)arg1;	// IMP=0x00100000004159e6
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x00100000004158cc
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x0010000000415830
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;	// IMP=0x00100000004153c8
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 animated:(_Bool)arg3;	// IMP=0x0010000000415211
@property(readonly, nonatomic) _Bool shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) _Bool shouldPreventSyncingContentOffset;
@property(readonly, nonatomic) _Bool shouldPreventSyncingViewScale;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) struct CGColor *canvasEdgeBackgroundColor;
@property(readonly, nonatomic) CRLCanvasLayer *canvasLayer;
@property(readonly, nonatomic) CRLCanvasView *canvasView;
- (void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1;	// IMP=0x0010000000414cce
- (void)p_notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2;	// IMP=0x0010000000414789
- (void)p_notifyRepsForChangeFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2;	// IMP=0x0010000000414677
- (_Bool)p_shouldSuppressMultiselectResizeInfo;	// IMP=0x00100000004145d4
- (void)updateMultiselectResizeInfoIfNeeded;	// IMP=0x0010000000413fd0
- (void)p_editorControllerSelectionPathDidChange:(id)arg1;	// IMP=0x0010000000413d43
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;	// IMP=0x0010000000413c04
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0010000000413bba
- (void)resumeEditing;	// IMP=0x0010000000413829
- (void)teardownTextInputResponder;	// IMP=0x0010000000413808
- (void)setupTextInputResponder;	// IMP=0x00100000004136b7
- (void)stopReusingTextInputResponder;	// IMP=0x00100000004136b1
- (void)reuseTextInputResponderFrom:(id)arg1;	// IMP=0x001000000041369c
- (void)updateRenderableForRep:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000413446
- (void)setShouldSuppressRendering:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00100000004132b8
- (void)invalidateCollaboratorHUDControllers;	// IMP=0x0010000000413162
- (_Bool)i_areLayersInvalidForDecorator:(id)arg1;	// IMP=0x001000000041313c
- (void)invalidateLayersForDecorator:(id)arg1;	// IMP=0x0010000000413106
- (void)invalidateOverlayLayersForRep:(id)arg1;	// IMP=0x00100000004130f0
- (void)invalidateContentLayersForRep:(id)arg1;	// IMP=0x00100000004130da
- (void)invalidateAllLayers;	// IMP=0x00100000004130c4
- (void)invalidateVisibleBounds;	// IMP=0x00100000004130ae
- (void)invalidateReps;	// IMP=0x0010000000413098
- (void)canvasInvalidatedForRep:(id)arg1;	// IMP=0x0010000000413082
- (void)canvasInvalidatedForLayout:(id)arg1;	// IMP=0x001000000041306c
- (void)layoutInvalidated;	// IMP=0x0010000000413056
- (void)p_scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x00100000004129c1
- (struct CGPoint)p_computeClampedUnscaledContentOffsetWithTargetRect:(struct CGRect)arg1 selectionContextRectWhenZooming:(struct CGRect)arg2 viewScale:(double)arg3 unscaledOutset:(double)arg4;	// IMP=0x00100000004123d0
- (double)p_safeAreaMargin;	// IMP=0x00100000004122fe
- (void)clearOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;	// IMP=0x00100000004122ee
- (void)setOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;	// IMP=0x00100000004122e1
- (void)p_clearSelectionScrollingState;	// IMP=0x00100000004122b4
- (void)scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000411d72
- (void)cancelScrollToCurrentSelectionPathAfterLayout;	// IMP=0x0010000000411d60
- (void)scrollToCurrentSelectionPathAfterLayoutWithOptions:(unsigned long long)arg1;	// IMP=0x0010000000411cb9
- (void)scrollToCurrentSelectionPathAfterLayout;	// IMP=0x0010000000411ca5
- (struct CGRect)p_scaledRectToScrollToForSelectionPath:(id)arg1 shouldCenterVertically:(_Bool)arg2;	// IMP=0x0010000000411a6f
- (void)forLayoutNearestVisibleRectForInfosForSelectionPath:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000004118df
- (void);	// IMP=0x001000000041158d
- (void)withLayoutForSelectionPath:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000411576
- (CDStruct_a5f74a6d)p_scrollingInformationForSelectionPath:(id)arg1 allowZoom:(_Bool)arg2;	// IMP=0x0010000000410f39
- (struct CGRect)rectInRootForScrollingToSelectionPath:(id)arg1 onLayout:(id)arg2 allowingZooming:(_Bool)arg3;	// IMP=0x0010000000410eab
- (void)setSelectionPath:(id)arg1 withSelectionFlags:(unsigned long long)arg2;	// IMP=0x0010000000410bc8
- (void)scrollSearchReferenceToVisible:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000410afa
- (Class)wpSelectionClassForStorage:(id)arg1;	// IMP=0x0010000000410ae9
- (id)selectionPathForSearchReference:(id)arg1;	// IMP=0x0010000000410a00
- (void)scrollCurrentSelectionToVisibleWithOptions:(unsigned long long)arg1;	// IMP=0x0010000000410982
- (id)infoToScrollToForSelectionPath:(id)arg1;	// IMP=0x0010000000410970
@property(readonly, nonatomic) NSSet *containersForSelection;
@property(readonly, nonatomic) _Bool hasSelectedInfosInMultipleContainers;
- (_Bool)currentSelectionPathContainsInfo:(id)arg1;	// IMP=0x0010000000410656
@property(readonly, copy, nonatomic) NSSet *infosForCurrentSelectionPath;
- (id)modelsForSelectionPath:(id)arg1;	// IMP=0x00100000004105c4
- (id)infosForSelectionPath:(id)arg1;	// IMP=0x0010000000410541
@property(readonly, nonatomic) CRLSelectionModelTranslator *selectionModelTranslator;
- (id)infoForSelectionPath:(id)arg1;	// IMP=0x001000000040ffe5
@property(readonly, nonatomic) _Bool shouldZoomOnSelectionChange;
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;	// IMP=0x001000000040fc63
- (double)p_targetViewScaleForUnscaledRect:(struct CGRect)arg1;	// IMP=0x001000000040f9e3
- (void)zoomToSelectionPath:(id)arg1;	// IMP=0x001000000040f67b
- (void)zoomToFitAllContent;	// IMP=0x001000000040f2ab
- (void)zoomToCurrentSelection;	// IMP=0x001000000040f23c
- (void)zoomToSelection:(id)arg1;	// IMP=0x001000000040f22a
@property(readonly, nonatomic) struct CGPoint smartZoomCenterForNoSelection;
@property(readonly, nonatomic) _Bool canZoomToCurrentSelection;
- (void)endEditingDiscardingEdits;	// IMP=0x001000000040f0c4
- (void)endEditingWithFlags:(unsigned long long)arg1;	// IMP=0x001000000040eee1
- (void)endEditing;	// IMP=0x001000000040eecd
- (id)newCanvasEditor;	// IMP=0x001000000040ee60
@property(readonly, nonatomic) CRLEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000040e601
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000040e57b
- (void)canvas:(id)arg1 createdRep:(id)arg2;	// IMP=0x001000000040e509
- (id)additionalVisibleInfosForCanvas:(id)arg1;	// IMP=0x001000000040e25c
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;	// IMP=0x001000000040e21d
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;	// IMP=0x001000000040e1c3
- (void)updateLayerTreeForInteractiveCanvas:(id)arg1;	// IMP=0x001000000040cf27
- (void)p_validateLayerSuppressionAPIAccess;	// IMP=0x001000000040cb56
- (void)i_endSuppressingLayerUpdates;	// IMP=0x001000000040c923
- (void)i_beginSuppressingLayerUpdatesExceptForReps:(id)arg1;	// IMP=0x001000000040c6c4
@property(readonly, nonatomic) _Bool i_currentlySuppressingLayerUpdates;
- (void)canvasDidUpdateRepsFromLayouts:(id)arg1;	// IMP=0x001000000040c67a
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;	// IMP=0x001000000040c4df
- (_Bool)p_currentSelectionIsOnscreen;	// IMP=0x001000000040c079
- (void)p_collabParticipantsDidChange:(id)arg1;	// IMP=0x001000000040bf37
- (void)p_documentSessionControllerDidUpdateRevision:(id)arg1;	// IMP=0x001000000040bf31
- (void)canvasDidLayout:(id)arg1;	// IMP=0x001000000040bcd0
- (void)canvasDidValidateLayouts:(id)arg1;	// IMP=0x001000000040bc4c
- (void)canvasWillValidateLayouts:(id)arg1;	// IMP=0x001000000040bbc8
- (void)i_canvasDidUpdateVisibleBounds;	// IMP=0x001000000040bb5e
- (void)canvasDidInvalidateAllLayers:(id)arg1;	// IMP=0x001000000040bb51
- (void)canvasLayoutInvalidated:(id)arg1;	// IMP=0x001000000040babe
- (id)boardItemOwnerForCanvas:(id)arg1;	// IMP=0x001000000040baac
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
- (id)backgroundColorAtUnscaledCanvasPoint:(struct CGPoint)arg1;	// IMP=0x001000000040ba7d
@property(readonly, nonatomic) _Bool shouldSuppressFontSmoothing;
@property(readonly, nonatomic) CRLChangeNotifier *changeNotifier;
@property(readonly, nonatomic) _TtC8Freeform20CRLCommandController *commandController;
@property(readonly, nonatomic) _TtC8Freeform21CRLEditingCoordinator *editingCoordinator;
@property(readonly, nonatomic) _TtC8Freeform8CRLBoard *board;
- (void)p_endObservingDocumentRootIfNeeded;	// IMP=0x001000000040b365
- (void)p_realTimeStateDidChange:(id)arg1;	// IMP=0x001000000040b16a
- (void)p_realTimeSessionNewParticipantDidJoin:(id)arg1;	// IMP=0x001000000040b13c
- (void)p_beginObservingDocumentRoot;	// IMP=0x001000000040ac4c
@property(readonly, nonatomic) _Bool textMagnifierIsUp;
- (void)removeBackgroundRenderingObject:(id)arg1;	// IMP=0x001000000040a6c2
- (void)addBackgroundRenderingObject:(id)arg1;	// IMP=0x001000000040a614
- (void)teardownBackgroundRendering;	// IMP=0x001000000040a489
@property(readonly, nonatomic) CRLInteractiveCanvasLayerHelper *i_interactiveCanvasLayerHelper;
- (void)layerHostHasBeenTornDown;	// IMP=0x001000000040a3b7
- (void)teardown;	// IMP=0x001000000040a013
- (void)teardownCollaboratorCursorInfrastructureInvalidatingLayers:(_Bool)arg1;	// IMP=0x0010000000409e58
- (void)p_teardownCanvasEditor;	// IMP=0x0010000000409d74
- (void)forwardInvocation:(id)arg1;	// IMP=0x0010000000409a2c
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0010000000409a18
- (_Bool)respondsToSelector:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0010000000409948
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0010000000409638
- (void)dealloc;	// IMP=0x0010000000409052
- (void)p_commonInit;	// IMP=0x0010000000408e26
- (void)removeCommonObservers;	// IMP=0x0010000000408d19
- (void)addCommonObservers;	// IMP=0x0010000000408b8e
- (id)init;	// IMP=0x0010000000408b3f
- (void)p_recursivelyAddRep:(id)arg1 forStorage:(id)arg2 toSet:(id)arg3;	// IMP=0x001000000012a560
- (id)p_repsForStorage:(id)arg1;	// IMP=0x001000000012a3a0
- (id)closestRepToPoint:(struct CGPoint)arg1 forStorage:(id)arg2;	// IMP=0x001000000012a0a8
- (void)withLayoutNearestPoint:(struct CGPoint)arg1 forStorage:(id)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000129fe6
- (_Bool)p_accessibilityShouldCheckAncestorCanPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x001000000058c764
@property(nonatomic, readonly) CRLCanvasRep *repForTextEditingInspecting;
- (_Bool)wantsToSuppressMultiselectionForPenTool;	// IMP=0x0010000000c2d270
- (void)sendRealTimeEnterToPeersIfNecessary;	// IMP=0x0010000000c2ccf0
- (void)sendSelectionPathToPeersIfNecessary;	// IMP=0x0010000000c2c660

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

