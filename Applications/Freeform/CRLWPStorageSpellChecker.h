//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLWPGrammarResults, CRLWPMutableDirtyRangeArray, CRLWPMutableRangeArray, CRLWPRangeArray, CRLWPSpellingResults, _TtC8Freeform12CRLWPStorage;
@protocol CRLSearchCanvasDelegate;

@interface CRLWPStorageSpellChecker : NSObject
{
    _TtC8Freeform12CRLWPStorage *_storage;	// 8 = 0x8
    CRLWPMutableRangeArray *_checkedRanges;	// 16 = 0x10
    CRLWPSpellingResults *_spellingResults;	// 24 = 0x18
    CRLWPGrammarResults *_grammarResults;	// 32 = 0x20
    CRLWPMutableDirtyRangeArray *_dirtyRanges;	// 40 = 0x28
    NSObject<CRLSearchCanvasDelegate> *_searchCanvasDelegate;	// 48 = 0x30
}

+ (void)p_inputLanguageDidChangeNotification:(id)arg1;	// IMP=0x00400000005acd77
+ (_Bool)canCheckSpelling;	// IMP=0x00100000005acd62
+ (id)conditionalSpellCheckerForStorage:(id)arg1;	// IMP=0x00100000005accf5
+ (id)newSpellCheckerForStorage:(id)arg1 selectionPath:(id)arg2 orSearchCanvasDelegate:(id)arg3;	// IMP=0x00100000005acc41
+ (Class)concreteClass;	// IMP=0x00100000005acc30
- (void).cxx_destruct;	// IMP=0x00200000005b11af
@property(retain, nonatomic) id <CRLSearchCanvasDelegate> searchCanvasDelegate; // @synthesize searchCanvasDelegate=_searchCanvasDelegate;
- (void)i_addMisspelledWord:(id)arg1 atIndex:(unsigned long long)arg2 ifValidForRange:(struct _NSRange)arg3 toResults:(id)arg4;	// IMP=0x00100000005b1099
- (struct _NSRange)dirtyRange;	// IMP=0x00100000005b1083
- (void)findErrorsInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2 stop:(_Bool *)arg3;	// IMP=0x00100000005b0651
- (struct _NSRange)rangeOfNumericalSuffixPrecedingCharIndex:(unsigned long long)arg1 forLocale:(id)arg2;	// IMP=0x00100000005af9f2
- (struct _NSRange)rangeOfNumericalSuffixPrecedingCharIndex:(unsigned long long)arg1;	// IMP=0x00100000005af62e
- (void)i_resetSpellCheckingForNotification:(id)arg1;	// IMP=0x00100000005af5e0
- (_Bool)i_addSpellingAndGrammarMarksInRange:(struct _NSRange)arg1 spellingResults:(id)arg2 grammarResults:(id)arg3 sync:(_Bool)arg4;	// IMP=0x00100000005af1de
- (struct _NSRange)firstErrorInRange:(struct _NSRange)arg1;	// IMP=0x00100000005af0d5
- (struct _NSRange)rangeOfMisspelledWordAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000005aef41
- (_Bool)hasValidResultsForRange:(struct _NSRange)arg1;	// IMP=0x00100000005aef13
- (_Bool)hasValidResultsForWordAtCharIndex:(unsigned long long)arg1 outRange:(out struct _NSRange *)arg2;	// IMP=0x00100000005aee6b
- (_Bool)shouldCheckAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000005aeb88
- (_Bool)i_setResults:(id)arg1 grammarResults:(id)arg2 shouldSync:(_Bool)arg3;	// IMP=0x00100000005aea1b
- (void)checkRange:(struct _NSRange)arg1 synchronously:(_Bool)arg2;	// IMP=0x00100000005ad9e6
- (void)synchronouslyCheckRange:(struct _NSRange)arg1;	// IMP=0x00100000005ad9ce
- (_Bool)isBusy;	// IMP=0x00100000005ad9c6
- (id)grammarResults;	// IMP=0x00100000005ad9b0
@property(readonly, nonatomic) CRLWPRangeArray *ungrammaticRanges;
- (id)spellingErrors;	// IMP=0x00100000005ad961
@property(readonly, nonatomic) CRLWPRangeArray *misspelledRanges;
- (void)cleanup;	// IMP=0x00100000005ad93b
- (void)dealloc;	// IMP=0x00100000005ad629
- (id)initWithStorage:(id)arg1 selectionPath:(id)arg2 orSearchCanvasDelegate:(id)arg3;	// IMP=0x00100000005ad25a
- (struct _NSRange)p_extendRangeToBeChecked:(struct _NSRange)arg1 delta:(long long)arg2;	// IMP=0x00100000005acdfb
- (id)p_textSourceWithoutDeletionsWithSubRange:(struct _NSRange)arg1;	// IMP=0x00100000005acde5
- (id)suggestionsForRange:(struct _NSRange)arg1;	// IMP=0x00100000005acd6a

@end

