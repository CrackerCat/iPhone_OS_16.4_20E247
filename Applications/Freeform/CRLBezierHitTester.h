//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable;

@interface CRLBezierHitTester : NSObject
{
    struct unordered_map<CGPoint, std::set<CRLBezierHitTesterPointInfo, PointCompare>, CGPointHash, CGPointEquality, std::allocator<std::pair<const CGPoint, std::set<CRLBezierHitTesterPointInfo, PointCompare>>>> _pointInfoGridMap;	// 8 = 0x8
    NSHashTable *_allPathTable;	// 48 = 0x30
    struct unordered_map<unsigned long, CRLBezierPath *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CRLBezierPath *>>> _allPathMap;	// 56 = 0x38
    struct unordered_map<CRLBezierPath *, std::set<CRLBezierHitTesterPointInfo, PointCompare>, CRLBezierPathPointerHash, CRLBezierPathPointerEquality, std::allocator<std::pair<CRLBezierPath *const, std::set<CRLBezierHitTesterPointInfo, PointCompare>>>> _allNonFilledPointInfosForPathMap;	// 96 = 0x60
    struct unordered_map<CRLBezierPath *, std::set<CRLBezierHitTesterPointInfo, PointCompare>, CRLBezierPathPointerHash, CRLBezierPathPointerEquality, std::allocator<std::pair<CRLBezierPath *const, std::set<CRLBezierHitTesterPointInfo, PointCompare>>>> _allFilledPointInfosForPathMap;	// 136 = 0x88
    unsigned long long _bucketSize;	// 176 = 0xb0
    unsigned long long _nextPathIdForInsertion;	// 184 = 0xb8
    _Bool _hasAtLeastOneOpenPath;	// 192 = 0xc0
    _Bool _hasAtLeastOneFilledPath;	// 193 = 0xc1
    _Bool _allowsLargeCrawlingDistances;	// 194 = 0xc2
}

- (id).cxx_construct;	// IMP=0x002000000001c4e1
- (void).cxx_destruct;	// IMP=0x001000000001c49d
@property(nonatomic) _Bool allowsLargeCrawlingDistances; // @synthesize allowsLargeCrawlingDistances=_allowsLargeCrawlingDistances;
- (void)p_iterateOverEveryNonEmptyBucketNear:(struct CGPoint)arg1 withSearchThreshold:(double)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000001c3e3
- (void)p_iterateOverEveryNonEmptyBucketInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c2d7
- (void)p_iterateOverEveryExistingBucketPointInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000001bfe5
- (void)p_iterateOverEveryBucketPointInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000001bdfd
- (void)p_addFilledPathToGrid:(id)arg1 withPathId:(unsigned long long)arg2 clippedToRect:(struct CGRect)arg3;	// IMP=0x001000000001bc12
- (void)p_addOpenPathToGrid:(id)arg1 withPathId:(unsigned long long)arg2 crawlingDistance:(double)arg3 clippedToRect:(struct CGRect)arg4;	// IMP=0x001000000001bb1a
- (void)p_addPointInfoStruct:(CDStruct_68a6f4ad *)arg1;	// IMP=0x001000000001b92b
- (id)p_wrapHitInfos:(vector_b7401b0f)arg1;	// IMP=0x001000000001b79c
- (id)p_bucketPointValueForPoint:(struct CGPoint)arg1;	// IMP=0x001000000001b731
- (id)pathsWithPercentage:(double)arg1 approximatelyInsidePath:(id)arg2 requiringPercentForFilledEdges:(_Bool)arg3;	// IMP=0x001000000001b05a
- (id)pathsCrossingPath:(id)arg1 withSearchThreshold:(double)arg2;	// IMP=0x001000000001a935
- (_Bool)isAnyPathNearPoint:(struct CGPoint)arg1 withSearchThreshold:(double)arg2;	// IMP=0x001000000001a765
- (id)wrappedAllHitsAlongPath:(id)arg1 withSearchThreshold:(double)arg2;	// IMP=0x001000000001a6e1
- (vector_b7401b0f)allHitsAlongPath:(id)arg1 withSearchThreshold:(double)arg2;	// IMP=0x0010000000019f5a
- (id)wrappedClosestHitsTo:(struct CGPoint)arg1 withSearchThreshold:(double)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x0010000000019ed6
- (vector_b7401b0f)closestHitsTo:(struct CGPoint)arg1 withSearchThreshold:(double)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x0010000000019a07
- (void)removePath:(id)arg1;	// IMP=0x0010000000019456
- (void)addPath:(id)arg1 filled:(_Bool)arg2;	// IMP=0x0010000000019415
- (void)addPath:(id)arg1 filled:(_Bool)arg2 clippedToRect:(struct CGRect)arg3;	// IMP=0x00100000000193da
- (void)addPath:(id)arg1 filled:(_Bool)arg2 pathID:(unsigned long long)arg3;	// IMP=0x00100000000193a0
- (void)addPath:(id)arg1 filled:(_Bool)arg2 crawlingDistance:(double)arg3;	// IMP=0x0010000000019367
- (void)addPath:(id)arg1 filled:(_Bool)arg2 pathID:(unsigned long long)arg3 crawlingDistance:(double)arg4;	// IMP=0x0010000000019335
- (void)addPath:(id)arg1 filled:(_Bool)arg2 pathID:(unsigned long long)arg3 crawlingDistance:(double)arg4 clippedToRect:(struct CGRect)arg5;	// IMP=0x0010000000018ca7
@property(readonly, nonatomic) unsigned long long pathCount;
- (id)initWithBucketSize:(double)arg1;	// IMP=0x0010000000018bd0

@end

