//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLCanvasKnobAccessibility, CRLCanvasRepAccessibility;

@interface CRLCanvasKnobAccessibilityElement
{
    CRLCanvasRepAccessibility *_parentRep;	// 8 = 0x8
    unsigned long long _knobTag;	// 16 = 0x10
    unsigned long long _knobNodeIndex;	// 24 = 0x18
}

- (void).cxx_destruct;	// IMP=0x001000000035c133
@property(nonatomic) unsigned long long knobNodeIndex; // @synthesize knobNodeIndex=_knobNodeIndex;
@property(nonatomic) unsigned long long knobTag; // @synthesize knobTag=_knobTag;
@property(nonatomic) __weak CRLCanvasRepAccessibility *parentRep; // @synthesize parentRep=_parentRep;
@property(readonly, nonatomic) CRLCanvasKnobAccessibility *knob;
- (_Bool)isEqualToKnob:(id)arg1;	// IMP=0x001000000035bfe2
- (id)accessibilityUserInputLabels;	// IMP=0x001000000035bf92
- (id)initWithAccessibilityParent:(id)arg1;	// IMP=0x001000000035bf1f
- (id)initWithKnobTag:(unsigned long long)arg1 nodeIndex:(unsigned long long)arg2 parentRep:(id)arg3;	// IMP=0x001000000035be91
- (void)_performAccessibilityIncrementDecrementForShapeControlKnob:(_Bool)arg1;	// IMP=0x0010000000024177
- (id)accessibilityCustomActions;	// IMP=0x00100000000233da
- (void)accessibilityDecrement;	// IMP=0x00100000000232eb
- (void)accessibilityIncrement;	// IMP=0x00100000000231f2
- (_Bool)accessibilityActivate;	// IMP=0x0010000000023161
- (_Bool)_accessibilitySupportsActivateAction;	// IMP=0x001000000002311d
- (struct CGRect)accessibilityFrame;	// IMP=0x00100000000230bf
- (unsigned long long)accessibilityTraits;	// IMP=0x0010000000022fc7
- (id)accessibilityValue;	// IMP=0x0010000000022f77
- (id)accessibilityHint;	// IMP=0x0010000000022f27
- (id)accessibilityLabel;	// IMP=0x0010000000022ed7
- (_Bool)isAccessibilityElement;	// IMP=0x0010000000022d45

@end

