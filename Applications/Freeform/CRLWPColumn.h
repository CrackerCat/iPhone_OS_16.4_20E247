//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSString, _TtC8Freeform12CRLWPStorage;
@protocol CRLWPStyleProvider;

@interface CRLWPColumn : NSObject
{
    _TtC8Freeform12CRLWPStorage *_storage;	// 8 = 0x8
    struct CGRect _frameBounds;	// 16 = 0x10
    struct CGAffineTransform _transformFromWP;	// 48 = 0x30
    unsigned long long _startCharIndex;	// 96 = 0x60
    unsigned long long _characterCount;	// 104 = 0x68
    struct _NSRange _anchoredAttachmentRange;	// 112 = 0x70
    unsigned long long _nextWidowPullsDownFromCharIndex;	// 128 = 0x80
    double _contentBottom;	// 136 = 0x88
    double _erasableContentBottom;	// 144 = 0x90
    double _nextLinePosition;	// 152 = 0x98
    unsigned long long _layoutResultFlags;	// 160 = 0xa0
    unsigned long long _columnIndex;	// 168 = 0xa8
    unsigned long long _pageNumber;	// 176 = 0xb0
    unsigned long long _scaleTextPercent;	// 184 = 0xb8
    struct shared_ptr<CRLWPLineFragmentArray> _lineFragmentArray;	// 192 = 0xc0
    unsigned long long _storageChangeCount;	// 208 = 0xd0
    NSMutableArray *_paragraphAdornments;	// 216 = 0xd8
    _Bool _textIsVertical;	// 224 = 0xe0
    unsigned long long nextWidowPullsDownFromCharIndex;	// 232 = 0xe8
    double _contentBlockBottom;	// 240 = 0xf0
    id <CRLWPStyleProvider> _styleProvider;	// 248 = 0xf8
}

+ (_Bool)partitionedAttachmentStartsAtCharIndex:(unsigned long long)arg1 withColumns:(id)arg2;	// IMP=0x002000000026d632
+ (struct CGRect)labelRectForCharIndex:(unsigned long long)arg1 withColumns:(id)arg2;	// IMP=0x001000000026ca25
+ (struct CGRect)columnRectForRange:(struct _NSRange)arg1 withColumns:(id)arg2;	// IMP=0x001000000026c7c9
+ (struct CGPoint)pinPoint:(struct CGPoint)arg1 toBottomOfLineFragmentInColumns:(id)arg2;	// IMP=0x0010000000268be2
+ (struct _NSRange)rangeOfColumns:(id)arg1;	// IMP=0x0010000000267ba4
+ (id)columnForCharIndex:(unsigned long long)arg1 allowEndOfColumn:(_Bool)arg2 withColumns:(id)arg3;	// IMP=0x00100000002675f9
+ (struct CGRect)boundsRectForSelection:(id)arg1 columnArray:(id)arg2 includeRuby:(_Bool)arg3 includePaginatedAttachments:(_Bool)arg4;	// IMP=0x00100000002671ee
+ (id)pathForHighlightWithRange:(struct _NSRange)arg1 columnArray:(id)arg2 pathStyle:(int)arg3;	// IMP=0x0010000000266d3b
+ (id)smartFieldWithAttributeKind:(unsigned long long)arg1 inColumnArray:(id)arg2 atPoint:(struct CGPoint)arg3;	// IMP=0x0010000000266c21
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 pastCenterGoesToNextChar:(_Bool)arg4 constrainToAscentAndDescent:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7 ignoreEmptyColumns:(_Bool)arg8 inLayoutTarget:(id)arg9;	// IMP=0x0010000000266780
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 pastCenterGoesToNextChar:(_Bool)arg4 constrainToAscentAndDescent:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7 inLayoutTarget:(id)arg8;	// IMP=0x001000000026674c
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 pastCenterGoesToNextChar:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6 inLayoutTarget:(id)arg7;	// IMP=0x0010000000266721
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 constrainToAscentAndDescent:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6 inLayoutTarget:(id)arg7;	// IMP=0x00100000002666ed
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 isAtEndOfLine:(_Bool *)arg4 leadingEdge:(_Bool *)arg5 inLayoutTarget:(id)arg6;	// IMP=0x00100000002666bd
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 constrainToAscentAndDescent:(_Bool)arg3 isAtEndOfLine:(_Bool *)arg4 inLayoutTarget:(id)arg5;	// IMP=0x0010000000266698
+ (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 isAtEndOfLine:(_Bool *)arg3 inLayoutTarget:(id)arg4;	// IMP=0x001000000026667d
+ (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1 isTail:(_Bool)arg2 selectionType:(unsigned long long)arg3 inLayoutTarget:(id)arg4;	// IMP=0x00100000002664e9
+ (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1 inLayoutTarget:(id)arg2;	// IMP=0x0010000000266456
+ (struct CGPoint)pinToNaturalBounds:(struct CGPoint)arg1 andLastLineFragment:(_Bool)arg2 inLayoutTarget:(id)arg3;	// IMP=0x0010000000265f12
+ (struct CGPoint)p_pinPoint:(struct CGPoint)arg1 toRect:(struct CGRect)arg2;	// IMP=0x0010000000265ed4
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 constrainToAscentAndDescent:(_Bool)arg6 ignoreEmptyColumns:(_Bool)arg7 isAtEndOfLine:(_Bool *)arg8 leadingEdge:(_Bool *)arg9;	// IMP=0x0010000000265dc4
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 ignoreEmptyColumns:(_Bool)arg6 isAtEndOfLine:(_Bool *)arg7 leadingEdge:(_Bool *)arg8;	// IMP=0x0010000000265d8f
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 ignoreEmptyColumns:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7;	// IMP=0x0010000000265d59
+ (struct _NSRange)charRangeForPencilAnnotationStartPoint:(struct CGPoint)arg1 toEndPoint:(struct CGPoint)arg2 inLayoutTarget:(id)arg3 onSingleLineFragment:(_Bool)arg4;	// IMP=0x0010000000265aa2
+ (id)closestColumnInColumnsArray:(id)arg1 forPoint:(struct CGPoint)arg2 ignoreEmptyColumns:(_Bool)arg3 ignoreDrawableOnlyColumns:(_Bool)arg4;	// IMP=0x0010000000265752
+ (struct CGPoint)connectionLinePointForChangeRange:(struct _NSRange)arg1 withColumns:(id)arg2 layoutTarget:(id)arg3;	// IMP=0x0010000000264ecc
+ (id)commentKnobBaseOriginForHighlightAtTextRange:(struct _NSRange)arg1 withColumns:(id)arg2 positionForRTL:(_Bool)arg3;	// IMP=0x0010000000264b0f
+ (void)populateHeadAndTailCharIndicesInSelection:(id)arg1 forColumns:(id)arg2;	// IMP=0x001000000026419b
+ (id)selectionRectsforColumns:(id)arg1 forSelection:(id)arg2;	// IMP=0x0010000000263be7
+ (void)calculateSelectionPinRectsForSelection:(id)arg1 inColumns:(id)arg2 outSelectionPinRect:(out struct CGRect *)arg3 outSelectionTailPinRect:(out struct CGRect *)arg4;	// IMP=0x00100000002620c6
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2 useParagraphModeRects:(_Bool)arg3;	// IMP=0x001000000026157f
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2;	// IMP=0x001000000026155a
+ (struct CGRect)caretRectForInsertionPoint:(id)arg1 withColumns:(id)arg2;	// IMP=0x0010000000261066
+ (struct CGRect)frameBoundsOfColumns:(id)arg1;	// IMP=0x0010000000260e53
+ (id)contentRectsToAvoidPencilAnnotationOverlapWithColumns:(id)arg1;	// IMP=0x0010000000260b8c
- (id).cxx_construct;	// IMP=0x0020000000272cba
- (void).cxx_destruct;	// IMP=0x0010000000272c77
@property(nonatomic) _Bool textIsVertical; // @synthesize textIsVertical=_textIsVertical;
@property(nonatomic) __weak id <CRLWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(nonatomic) unsigned long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) double erasableContentBottom; // @synthesize erasableContentBottom=_erasableContentBottom;
@property(nonatomic) double nextLinePosition; // @synthesize nextLinePosition=_nextLinePosition;
@property(nonatomic) unsigned long long characterCount; // @synthesize characterCount=_characterCount;
@property(nonatomic) unsigned long long startCharIndex; // @synthesize startCharIndex=_startCharIndex;
@property(nonatomic) struct CGAffineTransform transformFromWP; // @synthesize transformFromWP=_transformFromWP;
@property(nonatomic) unsigned long long storageChangeCount; // @synthesize storageChangeCount=_storageChangeCount;
@property(nonatomic) unsigned long long scaleTextPercent; // @synthesize scaleTextPercent=_scaleTextPercent;
@property(nonatomic) unsigned long long layoutResultFlags; // @synthesize layoutResultFlags=_layoutResultFlags;
@property(nonatomic) double contentBlockBottom; // @synthesize contentBlockBottom=_contentBlockBottom;
@property(readonly, nonatomic) _TtC8Freeform12CRLWPStorage *storage; // @synthesize storage=_storage;
@property(nonatomic) struct CGRect frameBounds; // @synthesize frameBounds=_frameBounds;
@property(nonatomic) unsigned long long nextWidowPullsDownFromCharIndex; // @synthesize nextWidowPullsDownFromCharIndex;
- (void)enumerateParagraphAdornmentsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000272915
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned long long)arg2;	// IMP=0x001000000027289a
- (void)renderWithRenderer:(id)arg1 currentSelection:(id)arg2 limitSelection:(id)arg3 listRange:(struct _NSRange)arg4 rubyGlyphRange:(struct _NSRange)arg5 isCanvasInteractive:(_Bool)arg6 isInDrawingMode:(_Bool)arg7 spellChecker:(id)arg8 suppressedMisspellingRange:(struct _NSRange)arg9 blackAndWhite:(_Bool)arg10 dictationInterpretations:(id)arg11 autocorrections:(id)arg12 markedRange:(struct _NSRange)arg13 markedText:(id)arg14 renderMode:(unsigned long long)arg15 pageCount:(unsigned long long)arg16 suppressInvisibles:(_Bool)arg17 currentCanvasSelection:(id)arg18;	// IMP=0x0010000000271910
- (_Bool)p_pencilAnnotationsShouldSkipLineFragment:(const void *)arg1;	// IMP=0x00100000002718f2
- (unsigned long long)p_charIndexWithTextClosestToWPPoint:(struct CGPoint)arg1 pastCenterGoesToNextChar:(_Bool)arg2 outFragment:(const struct CRLWPLineFragment **)arg3 leadingEdge:(_Bool *)arg4;	// IMP=0x00100000002716e3
- (unsigned long long)charIndexFromWPPoint:(struct CGPoint)arg1 pastCenterGoesToNextChar:(_Bool)arg2 allowNotFound:(_Bool)arg3 constrainToAscentAndDescent:(_Bool)arg4 outFragment:(const struct CRLWPLineFragment **)arg5 leadingEdge:(_Bool *)arg6;	// IMP=0x0010000000271100
- (unsigned long long)charIndexForSelectionFromPoint:(struct CGPoint)arg1 isTail:(_Bool)arg2;	// IMP=0x0010000000270a01
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 constrainToAscentAndDescent:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 outFragment:(const struct CRLWPLineFragment **)arg7 leadingEdge:(_Bool *)arg8;	// IMP=0x001000000027041a
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 outFragment:(const struct CRLWPLineFragment **)arg6 leadingEdge:(_Bool *)arg7;	// IMP=0x00100000002703ef
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;	// IMP=0x00100000002703c8
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 constrainToAscentAndDescent:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7;	// IMP=0x00100000002703a5
- (id)drawableIntersectionRectsForSelection:(id)arg1 inTarget:(id)arg2;	// IMP=0x001000000026f9a8
- (struct CGRect)erasableRectForSelectionRange:(struct _NSRange)arg1;	// IMP=0x001000000026f81b
- (id)rectsForSelection:(id)arg1 ranges:(id *)arg2 includePaginatedAttachments:(_Bool)arg3;	// IMP=0x001000000026f70c
- (id)rectsForSelection:(id)arg1 ranges:(id *)arg2;	// IMP=0x001000000026f6e7
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(unsigned long long)arg2 forParagraphMode:(_Bool)arg3 includeRuby:(_Bool)arg4 includePaginatedAttachments:(_Bool)arg5;	// IMP=0x001000000026f636
- (id)rectsForSelectionRanges:(id)arg1 selectionType:(unsigned long long)arg2;	// IMP=0x001000000026f3b7
- (id)pTransformReturnRects:(id)arg1;	// IMP=0x001000000026f1b4
- (id)pMutableRectsForSelectionRange:(struct _NSRange)arg1 selectionType:(unsigned long long)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7 includePaginatedAttachments:(_Bool)arg8 inranges:(id)arg9 outranges:(id *)arg10;	// IMP=0x001000000026d937
- (const void *)pColumnEndingPartitionedLineFragmentInSelectionRange:(struct _NSRange)arg1;	// IMP=0x001000000026d8c7
- (struct CGRect)firstRectForSelection:(id)arg1 includeSpaceAfter:(_Bool)arg2 includeSpaceBefore:(_Bool)arg3 includeLeading:(_Bool)arg4;	// IMP=0x001000000026d71a
- (_Bool)p_isFirstPartitionForCharIndex:(unsigned long long)arg1;	// IMP=0x001000000026d6a8
- (id)lineSelectionsForSelection:(id)arg1;	// IMP=0x001000000026d383
@property(readonly, nonatomic) struct CGRect typographicBounds;
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;	// IMP=0x001000000026cfc6
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;	// IMP=0x001000000026c725
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;	// IMP=0x001000000026c5d1
- (unsigned int)fontTraitsForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;	// IMP=0x001000000026c11d
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;	// IMP=0x001000000026b900
- (struct CGRect)caretRectForSelection:(id)arg1;	// IMP=0x001000000026a4c3
- (unsigned long long)lineIndexForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2;	// IMP=0x001000000026a309
- (unsigned long long)pRemapCharIndex:(unsigned long long)arg1 outIsAfterBreak:(out _Bool *)arg2 outWithTextSource:(out id *)arg3;	// IMP=0x001000000026a224
- (void)pInfoForCharIndex:(unsigned long long)arg1 isAtStart:(out _Bool *)arg2 isAtEnd:(out _Bool *)arg3;	// IMP=0x001000000026a1e7
- (const void *)nearestLineFragmentWithSameVerticalPositionAs:(unsigned long long)arg1 xPos:(double)arg2;	// IMP=0x001000000026a055
- (const void *)lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(unsigned long long)arg3;	// IMP=0x001000000026997c
- (const void *)lineFragmentClosestToPoint:(struct CGPoint)arg1 knobTag:(unsigned long long)arg2;	// IMP=0x0010000000269876
- (double)horizontalOffsetForCharIndex:(unsigned long long)arg1 lineFragmentIndex:(unsigned long long)arg2 bumpPastHyphen:(_Bool)arg3 allowPastLineBounds:(_Bool)arg4;	// IMP=0x0010000000269836
- (CDStruct_9f83f5df)lineMetricsAtCharIndex:(unsigned long long)arg1 allowEndOfLine:(_Bool)arg2;	// IMP=0x00100000002694d0
- (unsigned int)hyphenCharOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000269490
- (struct _NSRange)rangeOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000269459
- (double)baselineOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x001000000026943f
- (struct CRLWPFontHeightInfo)fontHeightInfoAtCharIndex:(unsigned long long)arg1;	// IMP=0x001000000026935c
- (struct CGRect)rawGlyphRectOfRange:(struct _NSRange)arg1;	// IMP=0x0010000000269280
- (id)partitionedLayoutOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000269264
- (struct CGRect)boundsOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00100000002691d5
- (void)makeEmpty:(unsigned long long)arg1 anchoredRange:(struct _NSRange)arg2 layoutResultFlags:(unsigned long long)arg3;	// IMP=0x0010000000269136
- (unsigned long long)lineFragmentCountForBaseline:(double)arg1;	// IMP=0x0010000000269125
- (void)offsetLineFragmentsBy:(struct CGSize)arg1;	// IMP=0x00100000002690d4
- (const void *)lineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00100000002690c0
- (void)setLineFragmentArray:(const void *)arg1;	// IMP=0x0010000000269056
- (const void *)lineFragmentArrayForUnitTests;	// IMP=0x0010000000269049
- (const void *)lineFragmentArray;	// IMP=0x001000000026903c
@property(readonly, nonatomic) unsigned long long lineCount;
@property(readonly, nonatomic) struct CGAffineTransform transformToWP;
- (void)clearAdornments;	// IMP=0x0010000000268b05
- (void)addAdornmentRect:(id)arg1;	// IMP=0x0010000000268aeb
- (_Bool)requiresGlyphVectorsForHeightMeasurement;	// IMP=0x0010000000268a6a
- (double)textHeight;	// IMP=0x0010000000268a23
@property(readonly, nonatomic) double textBlockBottom;
- (struct CGRect)erasableBounds:(unsigned long long)arg1;	// IMP=0x00100000002686eb
- (double)minimumHeightForLayoutOnPage;	// IMP=0x0010000000268608
- (struct CGSize)maxSize;	// IMP=0x001000000026833e
@property(nonatomic) struct _NSRange anchoredRange;
- (unsigned long long)anchoredCharCount;	// IMP=0x001000000026807b
- (unsigned long long)startAnchoredCharIndex;	// IMP=0x0010000000268071
@property(nonatomic) struct _NSRange range;
- (double)logicalBoundsBottom;	// IMP=0x0010000000267fd1
- (double)logicalBoundsTop;	// IMP=0x0010000000267fad
- (void)dealloc;	// IMP=0x0010000000267f2b
- (id)initForTestingWithStorage:(id)arg1 frameBounds:(struct CGRect)arg2;	// IMP=0x0010000000267e79
- (id)initWithStorage:(id)arg1 frameBounds:(struct CGRect)arg2;	// IMP=0x0010000000267cd8
- (struct CGRect)boundsIncludingDropCapRectsForSelectionType:(unsigned long long)arg1;	// IMP=0x0010000000263bbe
@property(readonly, nonatomic) _Bool terminatedByBreak;
@property(readonly, nonatomic) _Bool lastLineIsEmptyAndHasListLabel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

