//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvasRep, CRLImageRepSizingState, TSDSizedImageDescription, _TtC8Freeform8CRLAsset;
@protocol CRLImageRepDrawingDataSource, OS_dispatch_queue;

@interface CRLImageRepDrawingHelper : NSObject
{
    NSObject<OS_dispatch_queue> *_sizedImageAccessQueue;	// 8 = 0x8
    CRLImageRepSizingState *_sizingState;	// 16 = 0x10
    _Bool _sizingStateReady;	// 24 = 0x18
    struct CGImage *_sizedImage;	// 32 = 0x20
    TSDSizedImageDescription *_sizedImageDescription;	// 40 = 0x28
    long long _sizedImageOrientation;	// 48 = 0x30
    struct CGPath *_sizedImageMaskPath;	// 56 = 0x38
    CRLCanvasRep<CRLImageRepDrawingDataSource> *_rep;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00200000004ffa39
@property(readonly, nonatomic) __weak CRLCanvasRep<CRLImageRepDrawingDataSource> *rep; // @synthesize rep=_rep;
- (void)retryGeneratingSizedImageIfNeeded;	// IMP=0x00100000004ff91f
@property(readonly, nonatomic) _Bool isGeneratingSizedImageWithBakedMask;
- (void)p_invalidateSizedImageOnAccessQueue;	// IMP=0x00100000004ff7b9
- (void)invalidateSizedImageIfNeededForBakedMaskPathFromBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000004ff1cd
- (void)invalidateSizedImageIfItHasBakedMask;	// IMP=0x00100000004ff11f
- (void)invalidateSizedImage;	// IMP=0x00100000004ff0be
@property(readonly, nonatomic) struct CGImage *sizedImage;
- (void)p_retryGeneratingSizedImageIfPossible;	// IMP=0x00100000004feee2
- (void)p_takeSizedImageFromStateIfReady;	// IMP=0x00100000004fea3f
- (_Bool)p_generateSizedImage:(id)arg1;	// IMP=0x00100000004fe91a
- (void)p_startGeneratingSizedImage;	// IMP=0x00100000004fe52b
- (void)p_prepareToGenerateSizedImageWithDescription:(id)arg1;	// IMP=0x00100000004fdfe6
- (struct CGSize)p_desiredSizedImageSize;	// IMP=0x00100000004fdc1b
- (id)p_desiredSizedImageDescription;	// IMP=0x00100000004fd977
- (void)generateSizedImageIfNeeded;	// IMP=0x00100000004fd681
- (id)p_validatedThumbnailImageProvider;	// IMP=0x00100000004fd3e7
- (id)p_validatedBitmapImageProvider;	// IMP=0x00100000004fd388
- (id)p_validatedImageProvider;	// IMP=0x00100000004fd2fc
- (id)p_imageProvider;	// IMP=0x00100000004fd273
- (struct CGSize)p_imagePixelSize;	// IMP=0x00100000004fcfa6
@property(readonly, nonatomic) _Bool shouldShowLoadingUI;
@property(readonly, nonatomic) _Bool imagePrefersDrawing;
@property(readonly, nonatomic) _Bool drawsBitmap;
@property(readonly, nonatomic) _Bool drawsError;
@property(readonly, nonatomic) _TtC8Freeform8CRLAsset *imageDataForDrawing;
- (id)p_contentsRecipeForDirectlyManagedRenderable:(id)arg1 requiringProperlySizedImage:(_Bool)arg2;	// IMP=0x00100000004fc2c2
- (_Bool)canRenderDirectlyManagedForRenderable:(id)arg1;	// IMP=0x00100000004fc28d
- (id)contentsRecipeForDirectlyManagedRenderable:(id)arg1;	// IMP=0x00100000004fc276
- (_Bool)p_canDrawThumbnailAsSizedImage;	// IMP=0x00100000004fbfcf
- (struct CGRect)p_antialiasingDefeatedRectForRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000004fbc0a
- (void)drawInContext:(struct CGContext *)arg1 forLayer:(_Bool)arg2 forShadowOrHitTest:(_Bool)arg3;	// IMP=0x00100000004fb2d7
- (struct CGRect)imageRectInContext:(struct CGContext *)arg1;	// IMP=0x00100000004faf6d
- (void)teardown;	// IMP=0x00100000004faf03
- (void)dealloc;	// IMP=0x00100000004faec0
- (id)initWithRep:(id)arg1;	// IMP=0x00100000004fae40

@end

