//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVAsset, CRLAVPlayerController, CRLCanvasRenderable, CRLCanvasShapeRenderable, CRLMediaPlayerTimeController, CRLMovieKnob, NSObject, NSString, NSUUID, _TtC8Freeform12CRLMovieItem;
@protocol CRLMediaPlayerController;

@interface CRLAudioRep
{
    CRLAVPlayerController *_playerController;	// 8 = 0x8
    CRLMediaPlayerTimeController *_timeController;	// 16 = 0x10
    _Bool _didCheckPlayability;	// 24 = 0x18
    _Bool _isPlayable;	// 25 = 0x19
    AVAsset *_assetForPlayabilityCheck;	// 32 = 0x20
    CRLMovieKnob *_playButtonKnob;	// 40 = 0x28
    CRLCanvasRenderable *_spinnerRenderable;	// 48 = 0x30
    CRLCanvasRenderable *_playPauseRenderable;	// 56 = 0x38
    CRLCanvasShapeRenderable *_progressRenderable;	// 64 = 0x40
    float _dynamicVolume;	// 72 = 0x48
    _Bool _isChangingDynamicVolume;	// 76 = 0x4c
    unsigned long long _playbackState;	// 80 = 0x50
    NSUUID *_downloadObserverIdentifier;	// 88 = 0x58
    CRLCanvasShapeRenderable *_audioImageRenderable;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x00100000005b65d3
@property(readonly, nonatomic, getter=isPlayable) _Bool playable; // @synthesize playable=_isPlayable;
@property(readonly, nonatomic) CRLCanvasShapeRenderable *audioImageRenderable; // @synthesize audioImageRenderable=_audioImageRenderable;
- (void)p_workspaceDidActivate:(id)arg1;	// IMP=0x00100000005b65a0
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000005b622f
- (void)p_updateDownloadSpinnerState;	// IMP=0x00100000005b61e3
- (void)p_handleAssetPreparationCompletion;	// IMP=0x00100000005b6142
- (void)p_listenForAssetChangesIfAppropriate;	// IMP=0x00100000005b5d18
- (void)playbackDidStopForPlayerController:(id)arg1;	// IMP=0x00100000005b5cec
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;	// IMP=0x00100000005b5bf0
- (void)stopPlaybackIfNeeded;	// IMP=0x00100000005b5bde
- (void)pausePlaybackIfNeeded;	// IMP=0x00100000005b5ba7
@property(readonly, nonatomic) NSObject<CRLMediaPlayerController> *playerController;
- (void)p_teardownPlayerController;	// IMP=0x00100000005b5774
- (void)p_setUpPlayerControllerIfNecessary;	// IMP=0x00100000005b4d1d
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;	// IMP=0x00100000005b4d15
- (void)dynamicVolumeChangeDidEnd;	// IMP=0x00100000005b4d04
- (void)dynamicVolumeUpdateToValue:(float)arg1;	// IMP=0x00100000005b4ce6
- (void)dynamicVolumeChangeDidBegin;	// IMP=0x00100000005b4cb2
@property(readonly, nonatomic) float volume;
- (double)uploadIndicatorInset;	// IMP=0x00100000005b4c39
- (id)dataForUpdateUploadIndicator;	// IMP=0x00100000005b4b78
- (void)p_setUpSpinnerAnimationIfNeeded;	// IMP=0x00100000005b4a11
- (void)p_updatePlayPauseButton;	// IMP=0x00100000005b462c
- (_Bool)canDrawDownloadProgressPlaceholderImage;	// IMP=0x00100000005b4624
- (id)downloadProgressPlaceholderImage;	// IMP=0x00100000005b461c
- (_Bool)shouldShowDownloadProgressIndicator;	// IMP=0x00100000005b4614
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000005b44ef
- (_Bool)shouldShowKnobs;	// IMP=0x00100000005b44e7
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;	// IMP=0x00100000005b44df
- (_Bool)shouldShowSelectionHighlight;	// IMP=0x00100000005b44d7
- (id)p_selectionPath;	// IMP=0x00100000005b43f1
- (void)handleSingleTapWithinTableCell;	// IMP=0x00100000005b43df
- (void)i_togglePlayback;	// IMP=0x00100000005b43cd
- (_Bool)p_togglePlayPause;	// IMP=0x00100000005b435b
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000005b4346
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000005b4334
- (_Bool)wantsToHandleTapsWhenLocked;	// IMP=0x00100000005b432c
- (_Bool)noKnobTogglePlayAndMiniFormatter;	// IMP=0x00100000005b42d0
- (void)didEndZooming;	// IMP=0x00100000005b42be
- (void)willBeginZooming;	// IMP=0x00100000005b42ac
@property(readonly, nonatomic) _Bool shouldBecomeSelectedWhenPlaying;
- (void)p_updateEndTime;	// IMP=0x00100000005b4187
- (void)p_updateStartTime;	// IMP=0x00100000005b411d
- (void)p_updateVolume;	// IMP=0x00100000005b40e7
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000005b4024
@property(readonly, nonatomic) double absoluteCurrentTime;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)p_cancelPlayabilityCheck;	// IMP=0x00100000005b3f6a
- (void)p_updatePlayabilityIfNecessary;	// IMP=0x00100000005b3b44
- (void)p_positionPauseButtonImage;	// IMP=0x00100000005b3a96
- (void)p_positionPlayButtonImage;	// IMP=0x00100000005b39de
- (id)p_unpauseButtonImage;	// IMP=0x00100000005b39b0
- (id)p_pauseButtonImage;	// IMP=0x00100000005b3972
- (id)p_playButtonImage;	// IMP=0x00100000005b3934
- (struct CGSize)p_playButtonSize;	// IMP=0x00100000005b3923
- (void)p_showPlayButton;	// IMP=0x00100000005b37e4
- (void)p_hidePlayButton;	// IMP=0x00100000005b36a6
- (id)p_playButtonKnob;	// IMP=0x00100000005b35e1
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;	// IMP=0x00100000005b336b
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;	// IMP=0x00100000005b32e6
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;	// IMP=0x00100000005b3261
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x00100000005b3176
- (void)p_playTriggeredFromKnob;	// IMP=0x00100000005b313f
- (unsigned long long)enabledKnobMask;	// IMP=0x00100000005b30bd
- (void)addKnobsToArray:(id)arg1;	// IMP=0x00100000005b304f
- (void)p_addPlayButtonToKnobs:(id)arg1;	// IMP=0x00100000005b2fcc
- (_Bool)shouldAllowReplacementFromDrop;	// IMP=0x00100000005b2fc4
- (_Bool)shouldAllowReplacementFromPaste;	// IMP=0x00100000005b2fbc
- (void)i_willShowEditingUI;	// IMP=0x00100000005b2faa
- (void)documentEditabilityDidChange;	// IMP=0x00100000005b2eec
- (void)becameNotSelected;	// IMP=0x00100000005b2e37
- (void)becameSelected;	// IMP=0x00100000005b2dd4
- (id)additionalRenderablesOverRenderable;	// IMP=0x00100000005b2cd6
- (void)p_setUpRenderables;	// IMP=0x00100000005b28e4
- (id)p_audioKnobRenderable;	// IMP=0x00100000005b28ad
- (void)p_updateAudioImageRenerableAndTrack;	// IMP=0x00100000005b287f
- (void)p_setUpAudioImageRenderablePath:(struct CGSize)arg1;	// IMP=0x00100000005b277d
- (id)unscaledPathToIncludeForSystemPreviewOutline;	// IMP=0x00100000005b25fe
- (_Bool)shouldShowMediaReplaceUI;	// IMP=0x00100000005b25f6
- (long long)preferredReplacingInterfaceKind;	// IMP=0x00100000005b25eb
- (_Bool)directlyManagesLayerContent;	// IMP=0x00100000005b25e3
- (void)willBeRemoved;	// IMP=0x00100000005b22d5
- (void)viewScaleDidChange;	// IMP=0x00100000005b2294
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x00100000005b1690
- (_Bool)p_playButtonFitsInFrame;	// IMP=0x00100000005b15e1
- (double)p_playButtonAndTitleHeightWithRepSize:(struct CGSize)arg1;	// IMP=0x00100000005b1567
- (double)p_playButtonAndMinPaddingHeight:(_Bool)arg1;	// IMP=0x00100000005b14f2
- (double)p_unscaledPlayButtonAndMinPaddingHeight;	// IMP=0x00100000005b14d3
- (_Bool)drawAlbumArtInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;	// IMP=0x00100000005b1465
- (_Bool)hasAlbumArt;	// IMP=0x00100000005b1432
- (id)imageProviderForAlbumArt;	// IMP=0x00100000005b1350
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6 keepingChildrenPassingTest:(CDUnknownBlockType)arg7;	// IMP=0x00100000005b133e
@property(readonly, nonatomic) _TtC8Freeform12CRLMovieItem *movieItem;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000005b1201
- (double)p_titleTextHeightWithSize:(struct CGSize)arg1;	// IMP=0x00100000005d1e50
- (double)p_creatorTextHeightWithRect:(struct CGRect)arg1;	// IMP=0x00100000005d1ab0
- (double)ifFitsDrawCreatorWithContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 topPadding:(double)arg3;	// IMP=0x00100000005d16d0
- (double)ifFitsDrawTitleWithContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;	// IMP=0x00100000005d1380
- (void)enterPreviewMode;	// IMP=0x0010000000731a00
- (void)prepareForPreview;	// IMP=0x00100000007319c0
@property(nonatomic, readonly) _Bool wantsToHandleDoubleTapsWhenLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

