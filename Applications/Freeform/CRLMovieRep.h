//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVAsset, CRLCanvasRenderable, CRLMovieKnob, NSObject, NSString, NSTimer, NSUUID, _TtC8Freeform12CRLMovieItem;
@protocol CRLCanvasRenderableMediaPlayerController, CRLMediaPlayerController, NSObject;

@interface CRLMovieRep
{
    NSObject<CRLCanvasRenderableMediaPlayerController> *_playerController;	// 8 = 0x8
    _Bool _currentlyObservingPlayerLayer;	// 16 = 0x10
    _Bool _playerLayerShouldBeDisplayed;	// 17 = 0x11
    _Bool _directlyManagesLayerContent;	// 18 = 0x12
    CRLCanvasRenderable *_playerRenderable;	// 24 = 0x18
    CRLCanvasRenderable *_renderableToStroke;	// 32 = 0x20
    CRLCanvasRenderable *_playerStrokeRenderable;	// 40 = 0x28
    AVAsset *_assetForPlayability;	// 48 = 0x30
    _Bool _didCheckPlayability;	// 56 = 0x38
    _Bool _isPlayable;	// 57 = 0x39
    id <NSObject> _observationTokenForPlayingStatus;	// 64 = 0x40
    CRLMovieKnob *_playButtonKnob;	// 72 = 0x48
    _Bool _playButtonShowingPause;	// 80 = 0x50
    _Bool _didCancelUpdatingPlayButtonVisibility;	// 81 = 0x51
    NSTimer *_hideControlsTimeoutTimer;	// 88 = 0x58
    unsigned long long _isChangingDynamicVisibleTimeCount;	// 96 = 0x60
    float _dynamicVolume;	// 104 = 0x68
    _Bool _isChangingDynamicVolume;	// 108 = 0x6c
    _Bool _needsTeardownPlayerController;	// 109 = 0x6d
    _Bool _delayTearingDownPlayerController;	// 110 = 0x6e
    NSUUID *_downloadObserverIdentifier;	// 112 = 0x70
}

+ (id)CRLMovieButtonFillColor;	// IMP=0x00200000000efbf9
+ (void)initialize;	// IMP=0x00100000000e6dd0
- (void).cxx_destruct;	// IMP=0x00100000000efe96
@property(readonly, nonatomic, getter=isPlayable) _Bool playable; // @synthesize playable=_isPlayable;
- (void)willBeginEyedropperMode;	// IMP=0x00100000000efe1f
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000000efe0a
- (_Bool);	// IMP=0x00100000000efdbf
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000000efa35
- (void)dynamicVolumeChangeDidEnd;	// IMP=0x00100000000efa24
- (void)dynamicVolumeUpdateToValue:(float)arg1;	// IMP=0x00100000000efa06
- (void)dynamicVolumeChangeDidBegin;	// IMP=0x00100000000ef9d2
@property(readonly, nonatomic) float volume;
- (void)dynamicVisibleTimeChangeDidEnd;	// IMP=0x00100000000ef550
- (void)dynamicVisibleTimeUpdateToValue:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ef132
- (void)dynamicVisibleTimeChangeDidBegin;	// IMP=0x00100000000eeef0
@property(readonly, nonatomic) double absoluteCurrentTime;
@property(readonly, nonatomic) double visibleTime;
- (void)dynamicFreeTransformDidEndWithTracker:(id)arg1;	// IMP=0x00100000000eedc2
- (void)dynamicFreeTransformDidBegin;	// IMP=0x00100000000eed7c
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000000eec57
- (void)dynamicResizeDidEndWithTracker:(id)arg1;	// IMP=0x00100000000eebf3
- (id)dynamicResizeDidBegin;	// IMP=0x00100000000eeba6
- (_Bool)shouldShowLoadingUI;	// IMP=0x00100000000eeb1f
- (id)visuallySignificantDataSet;	// IMP=0x00100000000ee9d5
- (void)p_handleAssetPreparationCompletionForAsset:(id)arg1;	// IMP=0x00100000000ee86d
- (void)p_listenForAssetChangesIfAppropriate;	// IMP=0x00100000000ee3c9
- (void)setNeedsDisplay;	// IMP=0x00100000000ee388
- (id)additionalRenderablesOverRenderable;	// IMP=0x00100000000ee2b3
- (void)p_updateEndTime;	// IMP=0x00100000000ee20d
- (void)p_updateStartTime;	// IMP=0x00100000000ee167
- (void)p_updateVolume;	// IMP=0x00100000000ee0f1
- (void)p_teardownPlayerControllerIfNeeded;	// IMP=0x00100000000edba7
- (void)p_setNeedsTeardownPlayerControllerOnUpdateRenderable;	// IMP=0x00100000000edb96
- (void)p_teardownPlayerController;	// IMP=0x00100000000ed98f
- (void)p_setupPlayerControllerIfNecessary;	// IMP=0x00100000000ece69
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;	// IMP=0x00100000000ece61
- (void)updateUI_toMatchPlayer;	// IMP=0x00100000000ecdb1
- (void)p_togglePlaying;	// IMP=0x00100000000eccdf
- (void)p_togglePlayPauseTriggeredFromKnob;	// IMP=0x00100000000ecbbe
- (void)p_pauseTriggeredFromKnob;	// IMP=0x00100000000ecbac
- (void)p_playTriggeredFromKnob;	// IMP=0x00100000000ecb2b
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)playbackDidStopForPlayerController:(id)arg1;	// IMP=0x00100000000ecaac
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;	// IMP=0x00100000000ec98f
- (void)stopPlaybackIfNeeded;	// IMP=0x00100000000ec915
- (void)pausePlaybackIfNeeded;	// IMP=0x00100000000ec8de
@property(readonly, nonatomic) NSObject<CRLMediaPlayerController> *playerController;
- (void)p_updatePlayButtonVisibility;	// IMP=0x00100000000ec3d0
- (_Bool)p_playButtonFitsInFrame;	// IMP=0x00100000000ec283
- (_Bool)p_shouldAllowPlaybackWhenEditingDisabled;	// IMP=0x00100000000ec271
- (void)p_cancelUpdatingUIStateForMoviePlayability;	// IMP=0x00100000000ec249
- (void)p_stopUpdatingUIStateForMoviePlayability;	// IMP=0x00100000000ec205
- (void)p_updateUIStateForMoviePlayability;	// IMP=0x00100000000ebbb8
- (void)p_positionPauseButtonImage;	// IMP=0x00100000000ebab2
- (void)p_positionPlayButtonImage;	// IMP=0x00100000000eb996
- (void)p_updateUsePlayPauseButtonToMatchIsPlaying:(_Bool)arg1;	// IMP=0x00100000000eb974
- (void)p_usePlayButtonKnobImage;	// IMP=0x00100000000eb8e8
- (void)p_usePauseButtonKnobImage;	// IMP=0x00100000000eb85c
- (id)p_playButtonKnob;	// IMP=0x00100000000eb74f
- (id)playButtonImage;	// IMP=0x00100000000eb690
- (void)documentEditabilityDidChange;	// IMP=0x00100000000eb5fa
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;	// IMP=0x00100000000eb4b7
- (struct CGPoint)positionOfPlayKnobForBounds:(struct CGRect)arg1 viewScale:(double)arg2;	// IMP=0x00100000000eb400
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;	// IMP=0x00100000000eb391
- (void)didEndZooming;	// IMP=0x00100000000eb330
- (void)willBeginZooming;	// IMP=0x00100000000eb31e
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;	// IMP=0x00100000000eb2b0
- (_Bool)p_isMovieKnob:(id)arg1;	// IMP=0x00100000000eb265
- (void)p_hideControlsWithDelay:(double)arg1;	// IMP=0x00100000000eb082
- (void)p_invalidateHideControlsTimeoutTimer;	// IMP=0x00100000000eb04a
- (void)toggleShowingControls;	// IMP=0x00100000000eafc4
- (void)p_hideControls;	// IMP=0x00100000000eaf3d
- (void)p_hidePlayButtonIndependently;	// IMP=0x00100000000ead7c
- (void)p_showControls;	// IMP=0x00100000000eab34
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x00100000000eaa49
- (unsigned long long)enabledKnobMask;	// IMP=0x00100000000ea9c7
- (void)addKnobsToArray:(id)arg1;	// IMP=0x00100000000ea959
- (void)p_addPlayButtonToKnobs:(id)arg1;	// IMP=0x00100000000ea8c9
- (id)pauseButtonImage;	// IMP=0x00100000000ea80a
- (_Bool)noKnobTogglePlayAndMiniFormatter;	// IMP=0x00100000000ea7ae
- (_Bool)p_miniFormatterIsPresentingSecondLayer;	// IMP=0x00100000000ea719
- (_Bool)p_isMiniFormatterShowing;	// IMP=0x00100000000ea684
- (void)p_hideMiniFormatter;	// IMP=0x00100000000ea5ee
- (void)p_showMiniFormatter;	// IMP=0x00100000000ea528
- (void)toggleMiniFormatter;	// IMP=0x00100000000ea460
- (id)p_selectionPath;	// IMP=0x00100000000ea37a
- (_Bool)manuallyControlsMiniFormatter;	// IMP=0x00100000000ea334
- (void)screenScaleDidChange;	// IMP=0x00100000000ea2ea
- (_Bool)shouldShowSelectionHighlight;	// IMP=0x00100000000ea2e2
- (_Bool)wantsToHandleTapsWhenLocked;	// IMP=0x00100000000ea2da
- (void)becameNotSelected;	// IMP=0x00100000000ea287
- (void)becameSelected;	// IMP=0x00100000000ea1b0
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000000e9fc5
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000000e9fac
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x00100000000e9f81
- (void)p_updateStrokeRenderablesForStroke:(id)arg1 repRenderable:(id)arg2;	// IMP=0x00100000000e9bf0
- (void)p_applyBasicStroke:(id)arg1 toRenderable:(id)arg2 bounds:(struct CGRect)arg3;	// IMP=0x00100000000e9aeb
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x00100000000e9902
- (void)p_setPositionAndBoundsIfDifferent:(id)arg1 position:(struct CGPoint)arg2 bounds:(struct CGRect)arg3;	// IMP=0x00100000000e9812
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x00100000000e8fd9
- (void)willUpdateRenderable:(id)arg1;	// IMP=0x00100000000e8ed5
- (void)p_arrangeRenderableVisibility:(id)arg1;	// IMP=0x00100000000e8dc4
- (struct CGRect)p_strokeFrameForRenderableFrame:(struct CGRect)arg1;	// IMP=0x00100000000e8c96
- (void)p_drawStrokeInContext:(struct CGContext *)arg1;	// IMP=0x00100000000e8c84
- (void)p_commonDrawStrokeInContext:(struct CGContext *)arg1;	// IMP=0x00100000000e8beb
- (void)p_setupStrokeRenderables:(_Bool)arg1;	// IMP=0x00100000000e8bae
- (void)p_checkAndSyncTilingState:(_Bool)arg1;	// IMP=0x00100000000e8b50
- (void)p_setupPlayerStrokeRenderables:(_Bool)arg1;	// IMP=0x00100000000e8b2e
- (_Bool)p_needsTilingForStroke:(id)arg1;	// IMP=0x00100000000e8ad4
- (void)p_setupShapePlayerStrokeRenderable;	// IMP=0x00100000000e8a30
- (void)p_setupTilingPlayerStrokeRenderable;	// IMP=0x00100000000e898e
- (id)p_playerStrokeRenderable;	// IMP=0x00100000000e8979
- (id)p_shapeRenderableForPlayerStroke;	// IMP=0x00100000000e894b
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000000e88aa
- (id)p_pathForRoundedCornerMaskWithBounds:(struct CGRect)arg1;	// IMP=0x00100000000e87fb
- (void)p_applyRoundedCornersTo:(id)arg1;	// IMP=0x00100000000e8707
- (_Bool)p_cornerRadiusValueIsSignificant;	// IMP=0x00100000000e86b6
- (void)p_setupPlayerLayerIfNecessary;	// IMP=0x00100000000e82bf
- (void)p_disposeStrokeRenderable;	// IMP=0x00100000000e827b
- (_Bool)directlyManagesLayerContent;	// IMP=0x00100000000e8187
- (void)willBeRemoved;	// IMP=0x00100000000e7e0e
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6 keepingChildrenPassingTest:(CDUnknownBlockType)arg7;	// IMP=0x00100000000e7d9f
- (void)p_drawPlayButtonForNonInteractiveCanvasInContext:(struct CGContext *)arg1;	// IMP=0x00100000000e7b43
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 forShadowOrHitTest:(_Bool)arg5;	// IMP=0x00100000000e77f7
- (void)p_drawPosterImageInContext:(struct CGContext *)arg1 forShadowOrHitTest:(_Bool)arg2;	// IMP=0x00100000000e7240
- (void)updateFromLayout;	// IMP=0x00100000000e71ff
- (void)dealloc;	// IMP=0x00100000000e6fc8
- (id)movieLayout;	// IMP=0x00100000000e6f69
@property(readonly, nonatomic) _TtC8Freeform12CRLMovieItem *movieItem;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000000e6e2c
- (void)enterPreviewMode;	// IMP=0x0010000000c093f0
- (void)prepareForPreview;	// IMP=0x0010000000c093b0
@property(nonatomic, readonly) _Bool wantsToHandleDoubleTapsWhenLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

