//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLBezierPath, CRLCanvasInfoGeometry, CRLEditableBezierPathSource, CRLFill, CRLLineEnd, CRLMutableStroke, CRLPathSource, CRLStroke, NSArray, _TtC8Freeform12CRLShapeItem;
@protocol CRLSmartPathSource;

@interface CRLShapeLayout
{
    struct {
        unsigned int path:1;
        unsigned int pathIsOpen:1;
        unsigned int pathIsLineSegment:1;
        unsigned int pathHasAtLeastTwoVisuallyDistinctSubregions:1;
        unsigned int headAndTail:1;
        unsigned int headLineEnd:1;
        unsigned int tailLineEnd:1;
        unsigned int clippedPath:1;
    } mShapeInvalidFlags;	// 8 = 0x8
    CRLBezierPath *mCachedPath;	// 16 = 0x10
    _Bool mCachedPathIsOpen;	// 24 = 0x18
    _Bool mCachedPathIsLineSegment;	// 25 = 0x19
    _Bool mCachedPathHasAtLeastTwoVisuallyDistinctSubregions;	// 26 = 0x1a
    CDStruct_5bfcb38a mCachedPathBoundsStruct;	// 32 = 0x20
    CDStruct_5bfcb38a mCachedPathBoundsWithoutStrokeStruct;	// 104 = 0x68
    CRLBezierPath *mCachedClippedPath;	// 176 = 0xb0
    CDStruct_5bfcb38a mCachedClippedPathStroked;	// 184 = 0xb8
    CDStruct_5bfcb38a mCachedClippedPathRotatedStroked;	// 256 = 0x100
    struct CGAffineTransform mClippedPathRotatedTransform;	// 328 = 0x148
    CDStruct_5bfcb38a mCachedAlignmentFrame;	// 376 = 0x178
    CDStruct_5bfcb38a mCachedAlignmentFrameInRoot;	// 448 = 0x1c0
    struct CGAffineTransform mCachedAlignmentFrameInRootTransformInRoot;	// 520 = 0x208
    struct CGPoint mHeadPoint;	// 568 = 0x238
    struct CGPoint mTailPoint;	// 584 = 0x248
    struct CGPoint mHeadLineEndPoint;	// 600 = 0x258
    struct CGPoint mTailLineEndPoint;	// 616 = 0x268
    double mHeadLineEndAngle;	// 632 = 0x278
    double mTailLineEndAngle;	// 640 = 0x280
    long long mHeadCutSegment;	// 648 = 0x288
    long long mTailCutSegment;	// 656 = 0x290
    double mHeadCutT;	// 664 = 0x298
    double mTailCutT;	// 672 = 0x2a0
    CRLPathSource *mShrunkenPathSource;	// 680 = 0x2a8
    CRLPathSource *mOriginalShrunkenPathSource;	// 688 = 0x2b0
    CRLEditableBezierPathSource *mCachedEditableBezierPathSource;	// 696 = 0x2b8
    CRLPathSource *mCachedPathSource;	// 704 = 0x2c0
    CRLPathSource *mDynamicPathSource;	// 712 = 0x2c8
    CRLCanvasInfoGeometry *mDynamicInfoGeometry;	// 720 = 0x2d0
    CRLPathSource *mInitialPathSource;	// 728 = 0x2d8
    CRLCanvasInfoGeometry *mInitialInfoGeometry;	// 736 = 0x2e0
    CRLStroke *mInitialStroke;	// 744 = 0x2e8
    CRLMutableStroke *mDynamicStroke;	// 752 = 0x2f0
    CRLFill *mDynamicFill;	// 760 = 0x2f8
    NSArray *mDynamicStrokeOffsetArray;	// 768 = 0x300
    _Bool mIsDynamicallyInvisible;	// 776 = 0x308
    struct CGSize mLastParentLimitedSize;	// 784 = 0x310
    _Bool mOkayToSetGeometry;	// 800 = 0x320
    NSArray *mDynamicPatternOffsetsBySubpath;	// 808 = 0x328
}

- (void).cxx_destruct;	// IMP=0x00200000004929dc
@property(readonly, nonatomic) NSArray *dynamicPatternOffsetsBySubpath; // @synthesize dynamicPatternOffsetsBySubpath=mDynamicPatternOffsetsBySubpath;
@property(retain, nonatomic) CRLFill *dynamicFill; // @synthesize dynamicFill=mDynamicFill;
- (id)commandForSettingCalloutTailPositionY:(double)arg1;	// IMP=0x00100000004928e3
- (id)commandForSettingCalloutTailPositionX:(double)arg1;	// IMP=0x0010000000492802
- (double)adjustedCalloutTailPositionXWithValue:(double)arg1;	// IMP=0x0010000000492716
- (id)commandForSettingCalloutTailSize:(double)arg1;	// IMP=0x0010000000492660
- (id)commandForSettingCalloutCornerRadius:(double)arg1;	// IMP=0x00100000004925aa
- (id)p_calloutPathSourceForCommand;	// IMP=0x001000000049251c
- (id)commandForSettingArrowIndent:(double)arg1;	// IMP=0x001000000049246c
- (id)commandForSettingArrowHead:(double)arg1;	// IMP=0x00100000004923bc
- (id)commandForSettingStarRadius:(double)arg1;	// IMP=0x001000000049230c
- (id)commandForSettingStarPoints:(double)arg1;	// IMP=0x001000000049225c
- (id)commandForSettingNumberOfSides:(double)arg1;	// IMP=0x001000000049224a
- (id)commandForSettingCornerRadius:(double)arg1;	// IMP=0x0010000000492238
- (id)p_commandForSettingPathSourcePointValue:(struct CGPoint)arg1 onPathSource:(id)arg2;	// IMP=0x0010000000492178
- (id)p_commandToSetPathSourceScalarValue:(double)arg1;	// IMP=0x0010000000492077
- (void)p_updateResizeInfoGeometryFromDynamicPathSource;	// IMP=0x0010000000491f95
- (id)p_unitePath:(id)arg1 withLineEndForHead:(_Bool)arg2 stroke:(id)arg3;	// IMP=0x0010000000491e13
- (struct CGRect)p_boundsOfLineEndForHead:(_Bool)arg1 transform:(struct CGAffineTransform)arg2;	// IMP=0x0010000000491c88
- (id)p_createClippedPath;	// IMP=0x0010000000491a9e
- (void)p_validateTailLineEnd;	// IMP=0x00100000004918d6
- (void)p_validateHeadLineEnd;	// IMP=0x001000000049170b
- (void)p_validateHeadAndTail;	// IMP=0x001000000049168e
- (void)p_invalidateClippedPath;	// IMP=0x001000000049164a
- (void)p_invalidateTail;	// IMP=0x001000000049162d
- (void)p_invalidateHead;	// IMP=0x0010000000491610
- (_Bool)p_cachedPathHasAtLeastTwoVisuallyDistinctSubregions;	// IMP=0x0010000000491599
- (_Bool)p_cachedPathIsLineSegment;	// IMP=0x0010000000491522
- (_Bool)p_cachedPathIsOpen;	// IMP=0x00100000004914ab
- (struct CGRect)p_cachedPathBoundsWithoutStroke;	// IMP=0x00100000004913fe
- (struct CGRect)p_updatedCachedClipRectIfNeededForRotation:(struct CGAffineTransform)arg1;	// IMP=0x00100000004911b7
- (struct CGRect)p_cachedClippedPathStroked;	// IMP=0x0010000000490ee8
- (struct CGRect)p_cachedPathBounds;	// IMP=0x0010000000490c83
- (id)p_cachedPath;	// IMP=0x0010000000490bec
- (void)validate;	// IMP=0x0010000000490b70
- (id)commandToClampModelToLayoutSizeWithAdditionalTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000004909c7
- (void)transferLayoutGeometryToInfo:(id)arg1 withAdditionalTransform:(struct CGAffineTransform)arg2 assertIfInDocument:(_Bool)arg3;	// IMP=0x001000000049090d
- (id)computeWrapPathClosed:(_Bool)arg1;	// IMP=0x001000000049068a
- (id)computeWrapPath;	// IMP=0x0010000000490611
- (void)dynamicallyMakeShapeInvisible;	// IMP=0x0010000000490565
- (void)dynamicallySetBezierPathSource:(id)arg1 atUnscaledOrigin:(struct CGPoint)arg2 withPatternOffsetsBySubpath:(id)arg3;	// IMP=0x00100000004900fe
- (void)dynamicallySetBezierPathSource:(id)arg1 atUnscaledOrigin:(struct CGPoint)arg2;	// IMP=0x001000000048fece
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;	// IMP=0x001000000048fe28
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x001000000048fd81
@property(readonly, nonatomic) unsigned long long numberOfControlKnobs;
@property(readonly, nonatomic) CRLLineEnd *strokeTailLineEnd;
@property(readonly, nonatomic) CRLLineEnd *strokeHeadLineEnd;
@property(readonly, nonatomic) struct CGPoint unclippedTailPoint;
@property(readonly, nonatomic) struct CGPoint unclippedHeadPoint;
- (_Bool)isBeingManipulated;	// IMP=0x001000000048fa7b
- (id)finalInfoGeometryForFreeTransform;	// IMP=0x001000000048fa66
- (void)takeFreeTransformFromTracker:(id)arg1;	// IMP=0x001000000048f94d
- (void)takeRotationFromTracker:(id)arg1;	// IMP=0x001000000048f7bc
- (_Bool)supportsRotation;	// IMP=0x001000000048f7b4
- (void)dynamicMovePathKnobDidEnd;	// IMP=0x001000000048f765
- (void)dynamicallyMovedPathKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x001000000048f72a
- (void)dynamicMovePathKnobDidBegin;	// IMP=0x001000000048f60a
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x001000000048f524
- (void)dynamicMoveSmartShapeKnobDidBegin;	// IMP=0x001000000048f51e
- (void)setDynamicGeometry:(id)arg1;	// IMP=0x001000000048f456
- (void)offsetGeometryBy:(struct CGPoint)arg1;	// IMP=0x001000000048f21d
- (void)dynamicallyMovingLineSegmentWithTracker:(id)arg1;	// IMP=0x001000000048f159
- (id)finalInfoGeometryForResize;	// IMP=0x001000000048f144
- (void)p_endResizeOrFreeTransform;	// IMP=0x001000000048efb0
- (void)endFreeTransform;	// IMP=0x001000000048ef6f
- (void)endResize;	// IMP=0x001000000048ef2e
- (_Bool)i_shouldTryToScaleCachedRectsDuringResize;	// IMP=0x001000000048ef1c
- (void)p_applyResizeTransform:(struct CGAffineTransform)arg1 transformInParentSpace:(struct CGAffineTransform)arg2 preservingAspectRatio:(_Bool)arg3 layoutSize:(struct CGSize)arg4 geometryForLayout:(id)arg5 hasHorizontalFlip:(_Bool)arg6 hasVerticalFlip:(_Bool)arg7;	// IMP=0x001000000048db7c
- (void)takeSizeFromTracker:(id)arg1;	// IMP=0x001000000048d99c
- (_Bool)p_canResizeViaTransform;	// IMP=0x001000000048d849
- (struct CGSize)minimumSizeForResizingKnob:(id)arg1;	// IMP=0x001000000048d837
- (struct CGSize)minimumSize;	// IMP=0x001000000048d71e
- (void)endDynamicOperation;	// IMP=0x001000000048cf5c
- (id)captureDynamicInfoGeometryToBeginDynamicOperation;	// IMP=0x001000000048ccb0
- (void)beginDynamicOperationWithRealTimeCommands:(_Bool)arg1;	// IMP=0x001000000048bf21
- (void)p_beginResizeOrFreeTransform;	// IMP=0x001000000048bd9a
- (void)beginFreeTransform;	// IMP=0x001000000048bd59
- (void)beginResize;	// IMP=0x001000000048bd18
- (_Bool)p_dynamicallyUpdatingStrokedFramesDuringResize;	// IMP=0x001000000048bc85
- (_Bool)i_isInsideResizingFreehandDrawing;	// IMP=0x001000000048bb4e
- (void)invalidatePathBounds;	// IMP=0x001000000048bad8
- (void)invalidatePath;	// IMP=0x001000000048ba69
- (void)invalidateFrame;	// IMP=0x001000000048b8f6
- (_Bool)supportsCalloutAttributes;	// IMP=0x001000000048b884
@property(readonly, nonatomic) _Bool canResetTextAndObjectHandles;
@property(readonly, nonatomic) _Bool canBeDivided;
@property(readonly, nonatomic) _Bool canBeIntersected;
@property(readonly, nonatomic) CRLFill *fill;
- (void)aliasPathForScale:(double)arg1 originalStroke:(id)arg2 adjustedStroke:(id *)arg3 adjustedPath:(id *)arg4 startDelta:(struct CGPoint *)arg5 endDelta:(struct CGPoint *)arg6;	// IMP=0x001000000048a8a1
- (void)aliasPathForScale:(double)arg1 adjustedStroke:(id *)arg2 adjustedPath:(id *)arg3 startDelta:(struct CGPoint *)arg4 endDelta:(struct CGPoint *)arg5;	// IMP=0x001000000048a822
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;	// IMP=0x001000000048a411
- (struct CGPoint)centerForConnecting;	// IMP=0x001000000048a343
- (_Bool);	// IMP=0x001000000048a20c
- (_Bool)isInvisible;	// IMP=0x001000000048a1fc
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1 strokeDrawOptions:(unsigned long long)arg2;	// IMP=0x0010000000489f3e
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1;	// IMP=0x0010000000489efd
@property(readonly, nonatomic) CRLBezierPath *clippedPathForLineEnds;
- (double)lineEndScale:(_Bool)arg1;	// IMP=0x0010000000489e09
@property(readonly, nonatomic) _Bool isTailEndOnLeft;
@property(readonly, nonatomic) double tailLineEndAngle;
@property(readonly, nonatomic) double headLineEndAngle;
@property(readonly, nonatomic) struct CGPoint tailLineEndPoint;
@property(readonly, nonatomic) struct CGPoint headLineEndPoint;
@property(readonly, nonatomic) struct CGPoint tailPoint;
@property(readonly, nonatomic) struct CGPoint headPoint;
@property(readonly, nonatomic) CRLCanvasInfoGeometry *layoutInfoGeometry;
@property(readonly, nonatomic) _Bool pathIsLineSegment;
@property(readonly, nonatomic) _Bool pathIsOpen;
@property(readonly, nonatomic) CRLPathSource<CRLSmartPathSource> *smartPathSource;
@property(readonly, nonatomic) struct CGRect pathBoundsWithoutStroke;
@property(readonly, nonatomic) struct CGRect pathBounds;
@property(readonly, nonatomic) CRLBezierPath *path;
- (id)editablePathSource;	// IMP=0x00100000004897e7
@property(readonly, nonatomic) CRLPathSource *pathSource;
@property(readonly, nonatomic) _TtC8Freeform12CRLShapeItem *shapeInfo;
- (_Bool)currentlySupportsAddingFrames;	// IMP=0x00100000004896f7
- (_Bool)isStrokeBeingManipulated;	// IMP=0x00100000004896e2
- (void)dynamicStrokeWidthChangeDidEnd;	// IMP=0x00100000004896c1
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;	// IMP=0x00100000004893e2
- (void)dynamicStrokeWidthChangeDidBegin;	// IMP=0x0010000000489197
- (id)stroke;	// IMP=0x001000000048912e
@property(readonly, nonatomic) _Bool shouldAdjustForStrokeWidthForCollabCursor;
- (void)dragBy:(struct CGPoint)arg1;	// IMP=0x0010000000488db7
- (id)dependentLayoutsForDrag;	// IMP=0x0010000000488d15
- (struct CGRect)frameForPartitioning;	// IMP=0x0010000000488cc3
- (struct CGRect)frameForCullingWithBaseFrame:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;	// IMP=0x0010000000488c2c
- (struct CGRect)boundsForStandardKnobs;	// IMP=0x0010000000488b70
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x0010000000488a02
- (struct CGRect)alignmentFrameInRoot;	// IMP=0x001000000048885b
- (struct CGRect)baseFrameForFrameForCullingWithAdditionalTransform:(struct CGAffineTransform)arg1;	// IMP=0x0010000000488707
- (struct CGRect)alignmentFrame;	// IMP=0x0010000000488654
- (void)setGeometry:(id)arg1;	// IMP=0x001000000048804d
- (void)p_performBlockOkayToSetGeometry:(CDUnknownBlockType)arg1;	// IMP=0x0010000000487e3b
- (struct CGAffineTransform)computeLayoutTransform;	// IMP=0x0010000000487d66
- (id)computeLayoutGeometry;	// IMP=0x001000000048791a
- (id)layoutGeometryFromInfo;	// IMP=0x00100000004878a6
- (void)dealloc;	// IMP=0x001000000048769c
- (id)initWithInfo:(id)arg1;	// IMP=0x00100000004875f4

@end

