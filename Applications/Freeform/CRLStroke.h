//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLColor, CRLStrokePattern, NSString;

@interface CRLStroke : NSObject
{
    CRLColor *_color;	// 8 = 0x8
    double _width;	// 16 = 0x10
    unsigned long long _cap;	// 24 = 0x18
    unsigned long long _join;	// 32 = 0x20
    double _miterLimit;	// 40 = 0x28
    CRLStrokePattern *_pattern;	// 48 = 0x30
    double _actualWidth;	// 56 = 0x38
}

+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(unsigned long long)arg3 join:(unsigned long long)arg4 pattern:(id)arg5;	// IMP=0x00200000003adfa0
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 pattern:(id)arg3;	// IMP=0x00100000003adf13
+ (id)strokeWithColor:(id)arg1 width:(double)arg2;	// IMP=0x00100000003ade73
+ (id)emptyStroke;	// IMP=0x00100000003adde6
+ (id)stroke;	// IMP=0x00100000003add59
+ (id)i_newEmptyStroke;	// IMP=0x00100000003adcc5
+ (id)i_newStroke;	// IMP=0x00100000003adc31
+ (id)colorOnSuppressedBackgrounds;	// IMP=0x00100000003ad50d
+ (Class)mutableClass;	// IMP=0x00100000003ad3dd
- (void).cxx_destruct;	// IMP=0x00200000003b0756
@property(nonatomic, setter=i_setActualWidth:) double i_actualWidth; // @synthesize i_actualWidth=_actualWidth;
@property(copy, nonatomic, setter=i_setPattern:) CRLStrokePattern *i_pattern; // @synthesize i_pattern=_pattern;
@property(nonatomic) double i_miterLimit; // @synthesize i_miterLimit=_miterLimit;
@property(nonatomic) unsigned long long i_join; // @synthesize i_join=_join;
@property(nonatomic, setter=i_setCap:) unsigned long long i_cap; // @synthesize i_cap=_cap;
@property(nonatomic, setter=i_setWidth:) double i_width; // @synthesize i_width=_width;
@property(copy, nonatomic) CRLColor *i_color; // @synthesize i_color=_color;
- (_Bool)canDrawWithOtherStroke:(id)arg1;	// IMP=0x00100000003b06d7
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000003b0650
@property(readonly, nonatomic) _Bool shouldAntialiasDefeat;
@property(readonly, nonatomic) _Bool drawsInOneStep;
- (void)applyToShapeRenderable:(id)arg1 insideStroke:(_Bool)arg2 withScale:(double)arg3;	// IMP=0x00100000003b02cd
- (void)applyToShapeRenderable:(id)arg1 withScale:(double)arg2;	// IMP=0x00100000003b02b9
@property(readonly, nonatomic) _Bool prefersToApplyToShapeRenderableDuringManipulation;
@property(readonly, nonatomic) _Bool canApplyToShapeRenderable;
- (void)applyToRepRenderable:(id)arg1 withScale:(double)arg2;	// IMP=0x00100000003affba
@property(readonly, nonatomic) _Bool canApplyDirectlyToRepRenderable;
- (_Bool)requiresOutlineOnBackgroundWithAppearance:(unsigned long long)arg1;	// IMP=0x00100000003afe55
@property(readonly, nonatomic) _Bool isNearlyWhite;
@property(readonly, nonatomic) double suggestedMinimumLineWidth;
@property(readonly, nonatomic) _Bool supportsLineOptions;
@property(readonly, nonatomic) _Bool supportsColor;
@property(readonly, nonatomic) _Bool supportsWidth;
@property(readonly, nonatomic) _Bool supportsPattern;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000003af8fe
- (double)horizontalMarginForSwatch;	// IMP=0x00100000003af8ab
- (id)pathForLineEnd:(id)arg1 wrapPath:(_Bool)arg2 atPoint:(struct CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5;	// IMP=0x00100000003af634
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;	// IMP=0x00100000003af343
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;	// IMP=0x00100000003af0f4
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;	// IMP=0x00100000003af0dc
- (void)p_strokePathChunk:(const struct CGPath *)arg1 inContext:(struct CGContext *)arg2 wantsInteriorStroke:(_Bool)arg3;	// IMP=0x00100000003af084
- (void)paintPath:(const struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4 parameterized:(_Bool)arg5 shouldReverseDrawOrder:(_Bool)arg6;	// IMP=0x00100000003aecb1
- (void)paintPath:(const struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;	// IMP=0x00100000003aec93
- (void)paintPath:(const struct CGPath *)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000003aec7c
- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;	// IMP=0x00100000003aec14
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00100000003aebfd
- (id)colorForCGContext:(struct CGContext *)arg1;	// IMP=0x00100000003aebab
- (id)strokeLineEnd:(id)arg1;	// IMP=0x00100000003aeab3
- (double)lineEndInsetAdjustment;	// IMP=0x00100000003aeaa5
@property(readonly, nonatomic) _Bool shouldRender;
@property(readonly, nonatomic) _Bool isNullStroke;
- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;	// IMP=0x00100000003aea44
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;	// IMP=0x00000000003ae966
- (void)applyToContext:(struct CGContext *)arg1;	// IMP=0x00100000003ae952
- (void)i_setPatternPropertiesFromStroke:(id)arg1;	// IMP=0x00100000003ae889
- (void)i_setPropertiesFromStroke:(id)arg1;	// IMP=0x00100000003ae75e
@property(readonly, nonatomic) struct _CRLStrokeOutsets outsets;
- (id)pathToStrokeFromCRLBezierPath:(id)arg1;	// IMP=0x00100000003ae611
- (const struct CGPath *)pathToStrokeFromCGPath:(const struct CGPath *)arg1;	// IMP=0x00100000003ae608
@property(readonly, nonatomic) _Bool needsToExtendJoinsForBoundsCalculation;
@property(readonly, nonatomic) _Bool drawsOutsideStrokeBounds;
@property(readonly, nonatomic) _Bool isRoundDash;
@property(readonly, nonatomic) _Bool isDash;
@property(readonly, nonatomic) double dashSpacing;
@property(readonly, nonatomic) double renderedWidth;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000003ae03a
@property(readonly, nonatomic) double actualWidth;
@property(readonly, copy, nonatomic) CRLStrokePattern *pattern;
@property(readonly, nonatomic) double miterLimit;
@property(readonly, nonatomic) unsigned long long join;
@property(readonly, nonatomic) unsigned long long cap;
@property(readonly, nonatomic) double width;
@property(readonly, copy, nonatomic) CRLColor *color;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000003ad3ee
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000003ad3d2
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(unsigned long long)arg3 join:(unsigned long long)arg4 pattern:(id)arg5;	// IMP=0x00100000003ad3b5
- (id)init;	// IMP=0x00100000003ad326
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(unsigned long long)arg3 join:(unsigned long long)arg4 pattern:(id)arg5 miterLimit:(double)arg6;	// IMP=0x00100000003ad026

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

