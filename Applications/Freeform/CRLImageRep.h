//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CALayer, CRLCanvasLayoutGeometry, CRLCanvasRenderable, CRLCanvasShapeRenderable, CRLImageLayout, CRLImageRepDrawingHelper, CRLImageRepLayerContentsRecipe, CRLMaskInfo, CRLMaskLayout, MISSING_TYPE, NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSUUID, _TtC8Freeform12CRLImageItem, _TtC8Freeform8CRLAsset;
@protocol OS_dispatch_semaphore;

@interface CRLImageRep
{
    CRLCanvasLayoutGeometry *_lastImageGeometryInRoot;	// 8 = 0x8
    CRLCanvasLayoutGeometry *_lastMaskGeometryInRoot;	// 16 = 0x10
    struct CGAffineTransform _lastLayoutToImageTransform;	// 24 = 0x18
    MISSING_TYPE *_frameInUnscaledCanvasRelativeToSuper;	// 72 = 0x48
    _Bool _frameInUnscaledCanvasIsValid;	// 104 = 0x68
    CRLImageRepDrawingHelper *_drawingHelper;	// 112 = 0x70
    CRLImageRepLayerContentsRecipe *_directlyManagedLayerContentsRecipe;	// 120 = 0x78
    CRLCanvasRenderable *_contentsRenderable;	// 128 = 0x80
    CRLCanvasShapeRenderable *_maskPathRenderable;	// 136 = 0x88
    CRLCanvasShapeRenderable *_maskSubrenderable;	// 144 = 0x90
    struct CGAffineTransform _lastPictureFrameLayerTransform;	// 152 = 0x98
    CRLCanvasShapeRenderable *_strokeRenderable;	// 200 = 0xc8
    CALayer *_frameMaskLayer;	// 208 = 0xd0
    struct CGRect _lastPictureFrameLayerRect;	// 216 = 0xd8
    _Bool _directlyManagesLayerContent;	// 248 = 0xf8
    _Bool _sizedImageNeedsDisplay;	// 249 = 0xf9
    _Bool _showImageHighlight;	// 250 = 0xfa
    struct CGAffineTransform _baseMaskLayoutTransform;	// 256 = 0x100
    NSMutableDictionary *_hitTestCache;	// 304 = 0x130
    NSMutableSet *_disabledCanvasViewGRs;	// 312 = 0x138
    NSMutableArray *_updateFromLayoutBlocks;	// 320 = 0x140
    NSObject<OS_dispatch_semaphore> *_updateFromLayoutBlocksLock;	// 328 = 0x148
    NSUUID *_downloadObserverIdentifier;	// 336 = 0x150
    _Bool _backgroundRemovalUnavailable;	// 344 = 0x158
    struct CGImage *_imageForRemoveBackground;	// 352 = 0x160
    unsigned long long _imageForRemoveBackgroundAssetDataHash;	// 360 = 0x168
    struct CGImage *_cachedBackgroundRemovedImage;	// 368 = 0x170
    NSArray *_cachedBackgroundRemovedImageOffset;	// 376 = 0x178
    _Bool _backgroundRemovalOperationIsRunning;	// 384 = 0x180
    _Bool _userInitiatedBackgroundRemovalOperationIsRunning;	// 385 = 0x181
    _Bool _autoBackgroundRemovalOperationIsRunning;	// 386 = 0x182
    CRLCanvasShapeRenderable *_maskRenderable;	// 392 = 0x188
}

+ (_Bool)p_canRenderWithMaskToBoundsWithImageLayout:(id)arg1;	// IMP=0x00200000003c0049
+ (const struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(long long)arg3;	// IMP=0x00100000003bf263
- (void).cxx_destruct;	// IMP=0x00100000003c334d
@property(retain, nonatomic) CRLCanvasShapeRenderable *maskRenderable; // @synthesize maskRenderable=_maskRenderable;
- (void)willEnterForeground;	// IMP=0x00100000003c32cb
- (void)p_popoverViewPresented:(id)arg1;	// IMP=0x00100000003c32b9
- (_Bool)supportsAlternatePressureDrag;	// IMP=0x00100000003c3250
- (long long)dragTypeAtCanvasPoint:(struct CGPoint)arg1 forTouchType:(long long)arg2;	// IMP=0x00100000003c2f91
- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2;	// IMP=0x00100000003c2ef0
- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2;	// IMP=0x00100000003c2e5b
- (void)p_invalidateHitTestCache;	// IMP=0x00100000003c2e3e
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withCursorPlatformObject:(id)arg3;	// IMP=0x00100000003c2c2c
- (double)additionalRotationForKnobOrientation;	// IMP=0x00100000003c2acc
- (void)addKnobsToArray:(id)arg1;	// IMP=0x00100000003c2826
- (id)newSelectionKnobForType:(unsigned long long)arg1 tag:(unsigned long long)arg2;	// IMP=0x00100000003c274d
- (void)updatePositionsOfKnobs:(id)arg1;	// IMP=0x00100000003c23ce
- (_Bool)shouldShowSmartMaskKnobs;	// IMP=0x00100000003c2159
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x00100000003c20c4
- (void)p_calcNewImageGeometryAndReplaceImageWithNewCGImage:(struct CGImage *)arg1 offset:(id)arg2 dismissMiniFormatter:(_Bool)arg3;	// IMP=0x00100000003c1d9b
- (struct CGRect)p_calcNewImageItemRectWithRawSize:(struct CGSize)arg1 offset:(id)arg2;	// IMP=0x00100000003c18ad
- (void)p_replaceImageDataWithNewCGImage:(struct CGImage *)arg1 rect:(struct CGRect)arg2;	// IMP=0x00100000003c0d13
- (struct CGImage *)imageForRemoveBackground;	// IMP=0x00100000003c0d02
- (unsigned long long)p_maxPixelAreaForBackgroundRemoval;	// IMP=0x00100000003c0c9e
- (struct CGImage *)p_createImageForRemoveBackground;	// IMP=0x00100000003c095d
- (void)removeBackgroundFromImage;	// IMP=0x00100000003c02de
- (_Bool)canRemoveBackgroundFromImage;	// IMP=0x00100000003c02ca
- (_Bool)p_shouldRenderWithMaskMatchingImage;	// IMP=0x00100000003c022a
- (_Bool)p_shouldRenderWithMaskToBounds;	// IMP=0x00100000003c017d
- (_Bool)p_shouldBakeMaskIntoSizedImage;	// IMP=0x00100000003bfdff
- (void)p_injectSizedImageIntoLayerContentsIfReady;	// IMP=0x00100000003bf681
- (void)p_generateSizedImageIfNecessary;	// IMP=0x00100000003bf224
- (_Bool)p_okayToGenerateSizedImage;	// IMP=0x00100000003bf20f
- (void)p_updateMaskSublayersForMaskEditMode;	// IMP=0x00100000003bef7a
- (void)p_createMaskRenderableForRenderable:(id)arg1;	// IMP=0x00100000003bee2b
- (void)p_disposeMaskRenderable;	// IMP=0x00100000003becec
- (void)p_disposeStrokeLayer;	// IMP=0x00100000003bebf6
- (void)p_updateHUD;	// IMP=0x00100000003beb60
- (void)p_cleanUpMaskModeUI;	// IMP=0x00100000003be9d2
- (void)p_setUpMaskModeUI;	// IMP=0x00100000003be868
- (void)p_endEditingMask;	// IMP=0x00100000003be60d
- (void)p_setDefaultMaskWithActionString:(id)arg1;	// IMP=0x00100000003be437
- (id)additionalRenderablesOverRenderable;	// IMP=0x00100000003be100
- (void)p_updateStrokeLayerForStroke:(id)arg1 repRenderable:(id)arg2;	// IMP=0x00100000003bdbd9
- (void)p_updateMaskRenderable:(id)arg1 forRepRenderable:(id)arg2 shouldIncludeMask:(_Bool)arg3 shouldIncludeInstantAlpha:(_Bool)arg4 siblingLayer:(_Bool)arg5;	// IMP=0x00100000003bd0fe
- (void)p_updateCornerRadiusOnRenderable:(id)arg1;	// IMP=0x00100000003bcf62
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x00100000003bbbda
- (void)willUpdateRenderable:(id)arg1;	// IMP=0x00100000003bb515
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x00100000003bae12
- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;	// IMP=0x00100000003baa37
- (_Bool)p_directlyManagesContentForRenderable:(id)arg1;	// IMP=0x00100000003ba6ff
- (void)p_updateDirectlyManagesLayerContentForRenderable:(id)arg1;	// IMP=0x00100000003ba5ea
- (_Bool)directlyManagesLayerContent;	// IMP=0x00100000003ba5da
- (void)p_handleAssetPreparationCompletion;	// IMP=0x00100000003ba51b
- (void)p_listenForAssetChangesIfAppropriate;	// IMP=0x00100000003ba106
- (void)beginEditingMaskInMaskEditMode:(long long)arg1;	// IMP=0x00100000003ba036
- (_Bool)canEditMaskInMaskEditMode:(long long)arg1;	// IMP=0x00100000003ba02e
- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;	// IMP=0x00100000003b9e76
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x00100000003b9cdb
- (void)dynamicMoveSmartShapeKnobDidBegin;	// IMP=0x00100000003b9c86
@property(readonly, nonatomic) struct CGPoint centerForGuideRenderablePlacement;
- (id)actionStringForRotate;	// IMP=0x00100000003b9b7f
- (struct CGPoint)unscaledGuidePosition;	// IMP=0x00100000003b996a
- (_Bool)shouldRasterizeRenderableDuringRotation;	// IMP=0x00100000003b9955
- (double)angleForRotation;	// IMP=0x00100000003b9881
- (struct CGPoint)centerForRotation;	// IMP=0x00100000003b97c3
- (id)actionStringForResize;	// IMP=0x00100000003b96eb
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000003b92cb
- (_Bool)wantsGuidesWhileResizing;	// IMP=0x00100000003b923e
- (id)infoForTransforming;	// IMP=0x00100000003b91a1
- (id)dynamicResizeDidBegin;	// IMP=0x00100000003b8ffb
- (_Bool)allowDragAcrossPageBoundaries;	// IMP=0x00100000003b8f7e
- (_Bool)demandsExclusiveSelection;	// IMP=0x00100000003b8f0c
- (void)dynamicOperationDidEnd;	// IMP=0x00100000003b8e1d
- (_Bool)dragDidChangeGeometry;	// IMP=0x00100000003b8d8f
- (_Bool)maskGeometryDidChange;	// IMP=0x00100000003b8ca2
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;	// IMP=0x00100000003b8481
- (_Bool)p_currentEditOperationDidChangeTheImageGeometry;	// IMP=0x00100000003b821b
- (struct CGPoint)i_dragOffset;	// IMP=0x00100000003b80cf
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;	// IMP=0x00100000003b7c5f
- (id)actionStringForDrag;	// IMP=0x00100000003b7b87
- (_Bool)exclusivelyProvidesGuidesWhileAligning;	// IMP=0x00100000003b7b1e
- (_Bool)providesGuidesWhileAligning;	// IMP=0x00100000003b79df
- (void)dynamicDragDidBegin;	// IMP=0x00100000003b78ed
- (_Bool)shouldShowDragHUD;	// IMP=0x00100000003b78aa
- (struct CGAffineTransform)transformForCollaboratorCursorRenderable;	// IMP=0x00100000003b77e9
- (struct CGRect)boundsForCollaboratorCursorRenderable;	// IMP=0x00100000003b762b
- (_Bool)p_isResizingMaskInMaskEditMode;	// IMP=0x00100000003b75a3
- (_Bool)p_isResizingImageInMaskEditMode;	// IMP=0x00100000003b751b
- (id)commandForAcceptingPasteWithImageInfo:(id)arg1 outSelectionBehavior:(out id *)arg2;	// IMP=0x00100000003b720c
- (_Bool)canPasteDataFromPhysicalKeyboard:(id)arg1;	// IMP=0x00100000003b7153
- (_Bool)shouldAllowReplacementFromPaste;	// IMP=0x00100000003b70e0
- (struct CGAffineTransform)transformForHighlightLayer;	// IMP=0x00100000003b6fdd
- (struct CGRect)boundsForHighlightLayer;	// IMP=0x00100000003b6f46
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;	// IMP=0x00100000003b6d7e
- (_Bool)hitRepChrome:(struct CGPoint)arg1;	// IMP=0x00100000003b6d0a
- (long long)tilingMode;	// IMP=0x00100000003b6cff
- (id)overlayRenderables;	// IMP=0x00100000003b69e3
- (void)documentEditabilityDidChange;	// IMP=0x00100000003b68a5
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;	// IMP=0x00100000003b685d
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000003b615b
- (void)processChanges:(id)arg1;	// IMP=0x00100000003b60f5
- (id)pathSourceForSelectionHighlightBehavior;	// IMP=0x00100000003b607b
- (_Bool)shouldShowSelectionHighlight;	// IMP=0x00100000003b6004
- (void)p_handleImageMask;	// IMP=0x00100000003b5ee6
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000003b5e83
- (_Bool)p_allowedToEditMask;	// IMP=0x00100000003b5e19
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000003b5594
- (void)p_invalidateCachedRemoveBackgroundImage;	// IMP=0x00100000003b51ac
- (void)becameNotSelected;	// IMP=0x00100000003b5126
- (void)becameSelected;	// IMP=0x00100000003b506f
- (void)p_selectionPathDidChange:(id)arg1;	// IMP=0x00100000003b4f6d
- (void)editMaskWithHUD:(_Bool)arg1;	// IMP=0x00100000003b4a59
- (void)p_enterMaskModeIfNecessaryWithHUD:(_Bool)arg1;	// IMP=0x00100000003b4977
- (void)endEditingMask;	// IMP=0x00100000003b475d
- (void)endDynamicallyChangingMaskScale:(double)arg1;	// IMP=0x00100000003b44f6
- (void)dynamicallySetMaskScale:(double)arg1;	// IMP=0x00100000003b4291
- (void)beginDynamicallyChangingMaskScale;	// IMP=0x00100000003b4021
- (id)newMaskResizer;	// IMP=0x00100000003b3fbc
@property(readonly, nonatomic) NSArray *maskScaleDetents;
- (void)maskScaleLimitsReturningMin:(out double *)arg1 max:(out double *)arg2;	// IMP=0x00100000003b3e25
@property(readonly, nonatomic) double maskScale;
@property(readonly, nonatomic) _Bool isMaskScaleFromLayout;
@property(readonly, nonatomic) long long maskEditMode;
- (void)maskWithHUD:(_Bool)arg1;	// IMP=0x00100000003b3bb6
- (void)unhighlightImage;	// IMP=0x00100000003b3b5f
- (void)highlightImage;	// IMP=0x00100000003b3b08
- (_Bool)shouldShowShadow;	// IMP=0x00100000003b3a34
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;	// IMP=0x00100000003b3a22
- (_Bool)p_drawsInOneStep;	// IMP=0x00100000003b391e
- (id)p_validatedBitmapImageProvider;	// IMP=0x00100000003b38bf
- (id)p_validatedImageProvider;	// IMP=0x00100000003b382b
- (struct CGRect)imageDrawingHelperRectForCenteringDownloadProgressPlaceholderImage:(id)arg1;	// IMP=0x00100000003b374b
- (void)imageDrawingHelper:(id)arg1 didGenerateSizedImageSynchronously:(_Bool)arg2;	// IMP=0x00100000003b3355
- (_Bool)imageDrawingHelperShouldRetryGeneratingSizedImageLater:(id)arg1;	// IMP=0x00100000003b330a
- (_Bool)imageDrawingHelperShouldGenerateSizedImageSynchronously:(id)arg1;	// IMP=0x00100000003b3210
- (const struct CGPath *)imageDrawingHelper:(id)arg1 newMaskPathForSizedImageWithSize:(struct CGSize)arg2 orientation:(long long)arg3;	// IMP=0x00100000003b3198
- (_Bool)imageDrawingHelperShouldBakeMaskIntoSizedImage:(id)arg1;	// IMP=0x00100000003b3186
- (_Bool)imageDrawingHelperImageHasAlpha:(id)arg1;	// IMP=0x00100000003b3142
- (struct CGAffineTransform)imageDrawingHelperImageTransformInRootForAntialiasingDefeat:(id)arg1;	// IMP=0x00100000003b30b3
- (struct CGRect)imageDrawingHelperImageRect:(id)arg1;	// IMP=0x00100000003b3037
- (id)imageDrawingHelperThumbnailImageData:(id)arg1;	// IMP=0x00100000003b2fe7
- (id)imageDrawingHelperImageData:(id)arg1;	// IMP=0x00100000003b2f97
- (struct CGRect)clipRect;	// IMP=0x00100000003b2f32
- (struct CGRect)frameInUnscaledCanvas;	// IMP=0x00100000003b2be4
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 forLayer:(_Bool)arg6 forShadow:(_Bool)arg7 forHitTest:(_Bool)arg8;	// IMP=0x00100000003b231b
- (_Bool)canDrawInParallel;	// IMP=0x00100000003b2313
- (id)imageOfStroke:(struct CGRect *)arg1;	// IMP=0x00100000003b202f
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6 keepingChildrenPassingTest:(CDUnknownBlockType)arg7;	// IMP=0x00100000003b1fb3
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x00100000003b1f79
- (id)downloadProgressPlaceholderImage;	// IMP=0x00100000003b1f59
- (_Bool)shouldShowLoadingUI;	// IMP=0x00100000003b1f3c
- (id)visuallySignificantDataSet;	// IMP=0x00100000003b1e95
- (_Bool)allowsSupportedDynamicOperationsToBeRealTime;	// IMP=0x00100000003b1e52
- (void)documentModeDidChange;	// IMP=0x00100000003b1cea
@property(readonly) _TtC8Freeform8CRLAsset *imageDataForRendering;
- (struct CGRect)boundsForStandardKnobs;	// IMP=0x00100000003b1beb
- (struct CGRect)targetRectForEditMenu;	// IMP=0x00100000003b1bcc
- (_Bool)wantsToDistortWithImagerContext;	// IMP=0x00100000003b1b61
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;	// IMP=0x00000000003b1a06
- (void)updateFromLayout;	// IMP=0x00100000003b13c4
- (id)layoutsForChildReps;	// IMP=0x00100000003b125d
- (void)willBeRemoved;	// IMP=0x00100000003b0f4c
@property(readonly, nonatomic) CRLMaskLayout *maskLayout;
@property(readonly, nonatomic) CRLMaskInfo *maskInfo;
@property(readonly, nonatomic) CRLImageLayout *imageLayout;
@property(readonly, nonatomic) _TtC8Freeform12CRLImageItem *imageInfo;
- (void)dealloc;	// IMP=0x00100000003b0cdd
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000003b0a40
- (void)enterPreviewMode;	// IMP=0x0010000000738e30
@property(nonatomic, readonly) _Bool wantsToHandleDoubleTapsWhenLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

