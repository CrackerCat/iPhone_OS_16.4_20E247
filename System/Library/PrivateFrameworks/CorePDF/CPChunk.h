//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x0060000000005549
- (double)rotationAngle;	// IMP=0x0000000000006cba
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x0000000000006caa
- (unsigned int)chunkPosition;	// IMP=0x0000000000006c9a
- (void)translateObjectYBy:(double)arg1;	// IMP=0x0000000000006c81
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x0000000000006b22
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x0000000000006b12
- (_Bool)shrinksWithChildren;	// IMP=0x0000000000006b02
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x0000000000006a98
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x0000000000006a11
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x0000000000006931
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x00000000000068a7
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x000000000000680f
- (int)clusterLevelHint;	// IMP=0x0000000000006807
- (struct CGSize)advance;	// IMP=0x00000000000067ee
- (float)fontSize;	// IMP=0x00000000000067e5
- (double)bottom;	// IMP=0x000000000000679c
- (double)top;	// IMP=0x0000000000006753
- (double)center;	// IMP=0x0000000000006703
- (double)right;	// IMP=0x00000000000066ba
- (double)left;	// IMP=0x0000000000006671
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x0000000000006629
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x0000000000006599
- (long long)compareYDescending:(id)arg1;	// IMP=0x0000000000006541
- (long long)compareTopDescending:(id)arg1;	// IMP=0x00000000000064e9
- (long long)compareYBounds:(id)arg1;	// IMP=0x000000000000642e
- (long long)compareY:(id)arg1;	// IMP=0x00000000000063bf
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x00000000000062c9
- (long long)compareXBounds:(id)arg1;	// IMP=0x000000000000624d
- (long long)compareZDescending:(id)arg1;	// IMP=0x00000000000061ff
- (long long)compareZ:(id)arg1;	// IMP=0x00000000000061b5
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x000000000000616b
- (long long)compareX:(id)arg1;	// IMP=0x0000000000006159
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x0000000000006101
- (long long)compareAnchorX:(id)arg1;	// IMP=0x00000000000060ef
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x0000000000006090
- (long long)compareAnchorY:(id)arg1;	// IMP=0x0000000000006031
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x0000000000006011
- (long long)insertionOrder;	// IMP=0x0000000000006000
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x0000000000005fdb
- (void)resizeWith:(id)arg1;	// IMP=0x0000000000005ec8
- (void)fitBoundsToChildren;	// IMP=0x0000000000005d59
- (float)referenceAdvanceWidth;	// IMP=0x0000000000005d19
- (float)absoluteGapTo:(id)arg1;	// IMP=0x0000000000005c76
- (float)advanceDeltaAfterSpace;	// IMP=0x0000000000005c6d
- (float)clusterGapTo:(id)arg1;	// IMP=0x0000000000005bf6
- (struct CGPoint)anchor;	// IMP=0x0000000000005bde
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x0000000000005b7e
- (id)describeBounds;	// IMP=0x0000000000005b52
- (struct CGRect)renderedBounds;	// IMP=0x0000000000005a0d
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x0000000000005985
- (struct CGRect)bounds;	// IMP=0x000000000000593a
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000005911
- (void)setChildren:(id)arg1;	// IMP=0x0000000000005855
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x00000000000057ed
- (id)newTakeChildren;	// IMP=0x0000000000005784
- (void)removeAll;	// IMP=0x000000000000571b
- (void)remove:(id)arg1;	// IMP=0x00000000000056d2
- (void)addChildrenOf:(id)arg1;	// IMP=0x0000000000005691
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x0000000000005621
- (void)add:(id)arg1;	// IMP=0x00000000000055b1
- (float)opticalLeading;	// IMP=0x00000000000055a8
- (void)accept:(id)arg1;	// IMP=0x000000000000552e
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x0000000000005486
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000005457
- (id)init;	// IMP=0x00000000000053fa

@end

