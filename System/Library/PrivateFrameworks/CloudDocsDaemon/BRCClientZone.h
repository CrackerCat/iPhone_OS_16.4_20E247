//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BRCAccountSession, BRCCreateZoneAndSubscribeOperation, BRCDeadlineSource, BRCFetchRecentAndFavoriteDocumentsOperation, BRCItemID, BRCPQLConnection, BRCServerZone, BRCSyncBudgetThrottle, BRCSyncDownOperation, BRCSyncOperationBackoffRatio, BRCSyncOperationThrottle, BRCSyncUpOperation, BRCThrottle, BRCThrottleBase, BRCZoneRowID, BRMangledID, CKOperationGroup, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSMutableSet, NSSet, NSString, brc_task_tracker;
@protocol BRCClientZoneDelegate, NSObject, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface BRCClientZone : NSObject
{
    BRCAccountSession *_session;	// 8 = 0x8
    BRCServerZone *_serverZone;	// 16 = 0x10
    id <BRCClientZoneDelegate> _delegate;	// 24 = 0x18
    BRCZoneRowID *_dbRowID;	// 32 = 0x20
    NSString *_zoneName;	// 40 = 0x28
    NSString *_ownerName;	// 48 = 0x30
    BRMangledID *_mangledID;	// 56 = 0x38
    BRCPQLConnection *_db;	// 64 = 0x40
    unsigned int _state;	// 72 = 0x48
    _Bool _activated;	// 76 = 0x4c
    _Bool _isInitialCreation;	// 77 = 0x4d
    BRCThrottleBase *_readerThrottle;	// 80 = 0x50
    BRCCreateZoneAndSubscribeOperation *_createZoneOperation;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_createZoneQueue;	// 96 = 0x60
    NSMutableArray *_zoneCreationCompletionBlocks;	// 104 = 0x68
    long long _syncUpRetryAfter;	// 112 = 0x70
    _Atomic unsigned int _syncState;	// 120 = 0x78
    BRCSyncUpOperation *_syncUpOperation;	// 128 = 0x80
    NSError *_lastSyncUpError;	// 136 = 0x88
    _Bool _lastSyncUpErrorWasOnChainedItem;	// 144 = 0x90
    BRCSyncDownOperation *_syncDownOperation;	// 152 = 0x98
    id _syncDeadlineSourceResumer;	// 160 = 0xa0
    NSError *_lastSyncDownError;	// 168 = 0xa8
    BRCSyncOperationThrottle *_syncUpThrottle;	// 176 = 0xb0
    BRCSyncBudgetThrottle *_syncUpBudget;	// 184 = 0xb8
    BRCSyncOperationBackoffRatio *_syncUpBackoffRatio;	// 192 = 0xc0
    BRCSyncOperationThrottle *_syncDownThrottle;	// 200 = 0xc8
    BRCDeadlineSource *_syncDeadlineSource;	// 208 = 0xd0
    NSMutableArray *_blockedOperationsOnInitialSync;	// 216 = 0xd8
    NSMutableDictionary *_runningListOperations;	// 224 = 0xe0
    NSMutableDictionary *_recursiveListOperations;	// 232 = 0xe8
    NSMutableDictionary *_fetchParentOperations;	// 240 = 0xf0
    NSMutableDictionary *_locateRecordOperations;	// 248 = 0xf8
    BRCFetchRecentAndFavoriteDocumentsOperation *_fetchRecentsOperation;	// 256 = 0x100
    _Bool _invokeFetchRecentsOperation;	// 264 = 0x108
    BRCThrottle *_serverStitchingOperationThrottle;	// 272 = 0x110
    NSMutableIndexSet *_appliedTombstoneRanks;	// 280 = 0x118
    long long _lastInsertedRank;	// 288 = 0x120
    NSDate *_lastSyncDownDate;	// 296 = 0x128
    NSDate *_lastAttemptedSyncDownDate;	// 304 = 0x130
    NSObject<OS_dispatch_source> *_resetTimer;	// 312 = 0x138
    NSMutableDictionary *_syncDownBlockToPerformForBookmarkData;	// 320 = 0x140
    _Bool _shouldShowiCloudDriveAppInstallationNotification;	// 328 = 0x148
    NSMutableSet *_itemIDsBlockedFromSyncForCZMProcessing;	// 336 = 0x150
    NSMutableDictionary *_itemsBlockedByAssociationForCZMProcessing;	// 344 = 0x158
    NSMutableArray *_blocksWaitingOnCrossZoneMoveProcessing;	// 352 = 0x160
    NSMutableDictionary *_parentsOfCZMFaults;	// 360 = 0x168
    NSMutableDictionary *_onDiskBlockToPerformForItemID;	// 368 = 0x170
    NSMutableDictionary *_downloadedBlockToPerformForItemID;	// 376 = 0x178
    NSMutableDictionary *_syncDownBlockToPerformForItemID;	// 384 = 0x180
    NSMutableDictionary *_locateBlocksToPerformForRecordID;	// 392 = 0x188
    NSMutableArray *_nextSyncDownBarriers;	// 400 = 0x190
    NSMutableArray *_currentSyncDownBarriers;	// 408 = 0x198
    id <NSObject> _hasWorkDidUpdateObserver;	// 416 = 0x1a0
    NSMutableArray *_nextIdleHandlers;	// 424 = 0x1a8
    NSMutableArray *_directoriesCreatedLastSyncUp;	// 432 = 0x1b0
    CKOperationGroup *_syncDownGroup;	// 440 = 0x1b8
    NSMutableArray *_syncDownDependencies;	// 448 = 0x1c0
    NSMutableArray *_allItemsDidUploadTrackers;	// 456 = 0x1c8
    float _syncUpBatchSizeMultiplier;	// 464 = 0x1d0
    brc_task_tracker *_taskTracker;	// 472 = 0x1d8
    _Bool _needsSave;	// 480 = 0x1e0
    unsigned long long _requestID;	// 488 = 0x1e8
    NSArray *_syncThrottles;	// 496 = 0x1f0
    NSString *_osNameRequiredToSync;	// 504 = 0x1f8
}

- (void).cxx_destruct;	// IMP=0x000000000016142f
@property(readonly, nonatomic) NSDictionary *parentsOfCZMFaults; // @synthesize parentsOfCZMFaults=_parentsOfCZMFaults;
@property(readonly, nonatomic) NSSet *itemIDsBlockedFromSyncForCZMProcessing; // @synthesize itemIDsBlockedFromSyncForCZMProcessing=_itemIDsBlockedFromSyncForCZMProcessing;
@property(retain, nonatomic) NSDate *lastAttemptedSyncDownDate; // @synthesize lastAttemptedSyncDownDate=_lastAttemptedSyncDownDate;
@property(readonly, nonatomic) brc_task_tracker *taskTracker; // @synthesize taskTracker=_taskTracker;
@property(readonly, nonatomic) NSString *osNameRequiredToSync; // @synthesize osNameRequiredToSync=_osNameRequiredToSync;
@property(retain, nonatomic) BRCServerZone *serverZone; // @synthesize serverZone=_serverZone;
@property(readonly, nonatomic) BRCDeadlineSource *syncDeadlineSource; // @synthesize syncDeadlineSource=_syncDeadlineSource;
@property(retain, nonatomic) BRCAccountSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) long long lastInsertedRank; // @synthesize lastInsertedRank=_lastInsertedRank;
@property(readonly, nonatomic) unsigned long long currentRequestID; // @synthesize currentRequestID=_requestID;
@property(readonly, nonatomic) NSString *zoneName; // @synthesize zoneName=_zoneName;
@property(retain, nonatomic) BRCZoneRowID *dbRowID; // @synthesize dbRowID=_dbRowID;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_state;
@property(nonatomic) _Bool needsSave; // @synthesize needsSave=_needsSave;
@property(readonly, nonatomic) BRCPQLConnection *db; // @synthesize db=_db;
@property(retain, nonatomic) id <BRCClientZoneDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool activated; // @synthesize activated=_activated;
- (void)resetSyncUpBackoffRatio;	// IMP=0x00000000001612fc
- (float)syncUpBackoffRatio;	// IMP=0x00000000001612e3
- (float)syncUpBackoffDelay;	// IMP=0x00000000001612c5
- (_Bool)shouldSyncMangledID:(id)arg1;	// IMP=0x00000000001610b4
- (_Bool)dumpActivityToContext:(id)arg1 includeExpensiveActivity:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000015f839
- (_Bool)_dumpItemsToContext:(id)arg1 includeAllItems:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000015e507
- (void)_dumpRecursivePropertiesOfItemByRowID:(unsigned long long)arg1 context:(id)arg2 depth:(int)arg3;	// IMP=0x000000000015e184
- (void)_appendToString:(id)arg1 descriptionOfFieldNamed:(id)arg2 inResultSet:(id)arg3 pos:(int *)arg4 containsSize:(_Bool)arg5 context:(id)arg6;	// IMP=0x000000000015dfa4
- (long long)throttleHashWithItemID:(id)arg1;	// IMP=0x000000000015df21
- (void)networkReachabilityChanged:(_Bool)arg1;	// IMP=0x000000000015dd61
- (id)syncUpAnalyticsError;	// IMP=0x000000000015dc60
- (id)syncDownAnalyticsError;	// IMP=0x000000000015db6b
- (_Bool)removeSyncDownForItemIDBlock:(id)arg1;	// IMP=0x000000000015d9d5
- (_Bool)removeItemIsDownloadedBlock:(id)arg1;	// IMP=0x000000000015d864
- (_Bool)removeItemOnDiskBlock:(id)arg1;	// IMP=0x000000000015d6f3
@property(readonly, nonatomic) _Bool hasHighPriorityWatchers;
- (void)performBlock:(CDUnknownBlockType)arg1 whenLocatingCompletesForItemWithRecordID:(id)arg2;	// IMP=0x000000000015c519
- (void)_enumerateAndClearLocateBlocksForRecordID:(id)arg1 exists:(_Bool)arg2;	// IMP=0x000000000015c39c
- (void)performBlock:(CDUnknownBlockType)arg1 whenSyncDownCompletesLookingForItemID:(id)arg2;	// IMP=0x000000000015b996
- (_Bool)_shouldFailSyncDownWaitImmediately;	// IMP=0x000000000015b835
- (void)_prepareForForegroundSyncDown;	// IMP=0x000000000015b67e
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithIDIsDownloaded:(id)arg2;	// IMP=0x000000000015af0a
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithRecordIDIsOnDisk:(id)arg2;	// IMP=0x000000000015a298
- (CDUnknownBlockType)popDownloadedBlockForItemID:(id)arg1;	// IMP=0x000000000015a1f4
- (CDUnknownBlockType)popOnDiskBlockForItemID:(id)arg1;	// IMP=0x000000000015a0a5
- (void)_removeDownloadedBlockToPerformForItemID:(id)arg1;	// IMP=0x000000000015a005
- (void)_removeOnDiskBlockToPerformForItemID:(id)arg1;	// IMP=0x0000000000159f65
- (void)_removeAllShareAcceptanceBlocks;	// IMP=0x00000000001597b4
- (_Bool)validateStructureLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;	// IMP=0x000000000015967b
- (_Bool)validateItemsLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;	// IMP=0x0000000000159542
- (BOOL)itemTypeByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001594e6
- (_Bool)existsByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001594ce
- (_Bool)existsByItemID:(id)arg1;	// IMP=0x00000000001594b8
- (id)directoryOrRootItemIDByFileID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000159488
- (id)directoryOrRootItemIDByFileID:(unsigned long long)arg1;	// IMP=0x0000000000159472
- (id)itemByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000159336
- (id)itemByRowID:(unsigned long long)arg1;	// IMP=0x0000000000159320
- (id)documentItemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001592b7
- (id)documentItemByItemID:(id)arg1;	// IMP=0x00000000001592a1
- (id)itemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001591f7
- (id)itemByItemID:(id)arg1;	// IMP=0x00000000001591e1
- (id)serverHiddenChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001591b1
- (id)serverQuotaUsageWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000159181
- (_Bool)containsNonRejectedChildWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x000000000015912f
- (id)clientChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001590ff
- (id)serverChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001590cf
- (id)serverItemByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000158fe8
- (id)serverItemByRowID:(unsigned long long)arg1;	// IMP=0x0000000000158fd2
- (id)serverItemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000158ee7
- (id)serverItemByItemID:(id)arg1;	// IMP=0x0000000000158ed1
- (long long)serverRankByItemID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000158e53
- (id)serverItemByRank:(long long)arg1;	// IMP=0x0000000000158d67
- (long long)serverRankByItemID:(id)arg1;	// IMP=0x0000000000158d51
- (id)itemsParentedToThisZoneButLivingInAnOtherZone;	// IMP=0x0000000000158bf3
- (id)allItemsSortedByDepthDescending:(_Bool)arg1;	// IMP=0x00000000001589a9
- (id)allItems;	// IMP=0x000000000015884b
- (_Bool)_resetItemsTable;	// IMP=0x000000000015871b
- (_Bool)dumpTablesToContext:(id)arg1 includeAllItems:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000000001580ea
- (_Bool)dumpStatusToContext:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001570db
- (void)fetchRecentAndFavoriteDocuments:(_Bool)arg1;	// IMP=0x0000000000156681
- (void)fetchRecentAndFavoriteDocuments;	// IMP=0x000000000015666d
- (void)clearAndRefetchRecentAndFavoriteDocuments;	// IMP=0x000000000015651d
- (id)locateRecordIfNecessaryForRecordID:(id)arg1 isUserWaiting:(_Bool)arg2;	// IMP=0x0000000000156196
- (id)fetchParentChainIfNecessaryWithParentItemID:(id)arg1 isUserWaiting:(_Bool)arg2;	// IMP=0x0000000000155dbf
- (id)fetchRecursiveDirectoryContentsIfNecessary:(id)arg1 isUserWaiting:(_Bool)arg2 rescheduleApply:(_Bool)arg3;	// IMP=0x00000000001553d2
- (id)fetchDirectoryContentsIfNecessary:(id)arg1 isUserWaiting:(_Bool)arg2 rescheduleApplyScheduler:(_Bool)arg3;	// IMP=0x0000000000154951
- (_Bool)_isSideSyncOperationBlockedWithName:(id)arg1;	// IMP=0x00000000001547ab
- (id)cancelLocateRecordOperationAndReschedule:(id)arg1;	// IMP=0x00000000001546e3
- (void)_registerLocateRecordOperation:(id)arg1;	// IMP=0x0000000000154605
- (id)cancelFetchParentChainOperationAndReschedule:(id)arg1;	// IMP=0x000000000015453d
- (void)_registerFetchParentChainOperation:(id)arg1;	// IMP=0x000000000015445f
- (void)_blockLowPriorityStitchingOperationsForOperation:(id)arg1;	// IMP=0x000000000015396e
- (id)cancelListOperationAndReschedule:(id)arg1;	// IMP=0x000000000015386f
- (void)_registerListOperation:(id)arg1;	// IMP=0x000000000015360a
- (void)_registerServerStitchingOperation:(id)arg1;	// IMP=0x000000000015316b
- (_Bool)_hasNonDiscretionaryServerStitchingOperation;	// IMP=0x0000000000153050
- (_Bool)_checkIfEnumeratorContainsNonDiscretionaryOp:(id)arg1;	// IMP=0x0000000000152f02
- (_Bool)hasCompletedInitialSyncDownOnce;	// IMP=0x0000000000152ef1
- (void)flushAppliedTombstones;	// IMP=0x0000000000152e5e
- (void)didApplyTombstoneForRank:(long long)arg1;	// IMP=0x0000000000152d98
- (void)didGCTombstoneRanks:(id)arg1;	// IMP=0x0000000000152c13
- (void)handleRootRecordDeletion;	// IMP=0x0000000000152a9a
- (void)recomputeAllItemsDidUploadState;	// IMP=0x0000000000152941
- (void)_allItemsDidUploadWithError:(id)arg1;	// IMP=0x0000000000152694
- (_Bool)_hasAllItemsDidUploadHandlers;	// IMP=0x0000000000152668
- (_Bool)_crossZoneMoveDocumentsToZone:(id)arg1;	// IMP=0x00000000001508d6
- (void)didSyncDownRequestID:(unsigned long long)arg1 maxApplyRank:(long long)arg2 caughtUpWithServer:(_Bool)arg3 syncDownDate:(id)arg4;	// IMP=0x000000000014e6e2
- (void)listedUpToRank:(long long)arg1;	// IMP=0x000000000014e6c4
- (void)_fixupMissingCrossMovedItems;	// IMP=0x000000000014e55d
- (void)syncDownOperation:(id)arg1 didFinishWithError:(id)arg2 status:(long long)arg3;	// IMP=0x000000000014d68d
- (void)notifyClient:(id)arg1 whenIdle:(CDUnknownBlockType)arg2;	// IMP=0x000000000014c7fc
- (void)notifyClient:(id)arg1 afterNextSyncDown:(CDUnknownBlockType)arg2;	// IMP=0x000000000014c5d8
- (void)_flushIdleBlocksIfNeeded;	// IMP=0x000000000014c407
- (_Bool)_isIdle;	// IMP=0x000000000014bf5b
@property(readonly, nonatomic) NSArray *syncThrottles; // @synthesize syncThrottles=_syncThrottles;
- (void)_syncUpOfRecords:(id)arg1 createdAppLibraryNames:(id)arg2 didFinishWithError:(id)arg3 errorWasOnPCSChainedItem:(_Bool)arg4;	// IMP=0x000000000014afdc
- (void)learnCKInfosFromSavedRecords:(id)arg1 isOutOfBandModifyRecords:(_Bool)arg2;	// IMP=0x0000000000149aa9
- (unsigned long long)nextSyncUpRequestID;	// IMP=0x0000000000149a5e
- (void)_markRequestIDAcked;	// IMP=0x0000000000149a21
- (void)_markLatestSyncRequestFailed;	// IMP=0x0000000000149858
- (id)directoryItemIDsCreatedLastSyncUp;	// IMP=0x00000000001497b2
- (void)prepareDirectoryForSyncUp:(id)arg1;	// IMP=0x000000000014960b
- (void)clearSyncUpError;	// IMP=0x00000000001495eb
- (void)resetSyncBudgetAndThrottle;	// IMP=0x0000000000149546
- (void)scheduleSyncDownForOOBModifyRecordsAck;	// IMP=0x000000000014950f
- (void)scheduleSyncDownFirst;	// IMP=0x00000000001494d8
- (void)scheduleSyncDown;	// IMP=0x00000000001494c4
- (void)scheduleSyncDownWithGroup:(id)arg1;	// IMP=0x0000000000149456
- (void)scheduleSyncUp;	// IMP=0x0000000000149418
- (void)_startSync;	// IMP=0x0000000000147d54
- (id)syncDownImmediately;	// IMP=0x000000000014768b
- (void)_blockSyncDownOnStitchingOperations;	// IMP=0x0000000000146c0f
- (void)removeSyncDownDependency:(id)arg1;	// IMP=0x0000000000146acf
- (void)addSyncDownDependency:(id)arg1;	// IMP=0x0000000000146879
- (void)_createCloudKitZoneWithGroup:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001462aa
- (void)createCloudKitZoneWithGroup:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001461d1
- (void)clearSyncStateBits:(unsigned int)arg1;	// IMP=0x0000000000146085
- (void)setSyncStateBits:(unsigned int)arg1;	// IMP=0x0000000000145e16
@property(readonly) unsigned int syncState;
- (void)didClearOutOfQuota;	// IMP=0x0000000000145d7c
- (id)_faultsEnumeratorFromRow:(unsigned long long)arg1 batchSize:(unsigned long long)arg2;	// IMP=0x0000000000145bef
- (void)_enumerateFaultsWithBlock:(CDUnknownBlockType)arg1 rowID:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;	// IMP=0x00000000001458fc
- (void)enumerateFaultsAsyncWithBlock:(CDUnknownBlockType)arg1 batchSize:(unsigned long long)arg2;	// IMP=0x00000000001457c9
- (id)documentsNotIdleEnumeratorWithDB:(id)arg1 startingRowID:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;	// IMP=0x0000000000145663
- (_Bool)hasItemsWithInFlightDiffs;	// IMP=0x0000000000145616
- (id)itemsWithInFlightDiffsEnumerator;	// IMP=0x00000000001454b8
- (_Bool)hasItems;	// IMP=0x000000000014546b
- (id)itemsEnumeratorWithDB:(id)arg1;	// IMP=0x0000000000145315
- (BOOL)serverItemTypeByItemID:(id)arg1 db:(id)arg2;	// IMP=0x000000000014511b
- (_Bool)existsByParentID:(id)arg1 andCaseInsensitiveLogicalName:(id)arg2;	// IMP=0x00000000001450bb
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 excludingItemID:(id)arg3 db:(id)arg4;	// IMP=0x0000000000144f86
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x0000000000144f6e
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 excludingItemID:(id)arg3;	// IMP=0x0000000000144f58
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x0000000000144f42
- (id)itemByParentID:(id)arg1 andPhysicalName:(id)arg2;	// IMP=0x0000000000144f2c
- (id)itemByParentID:(id)arg1 andPhysicalName:(id)arg2 db:(id)arg3;	// IMP=0x0000000000144bfa
- (id)itemByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x00000000001448c8
- (id)itemByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x00000000001448b2
- (id)serverItemByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x00000000001447c0
- (id)serverItemByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x00000000001447aa
- (id)itemByFileID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x000000000014466a
- (id)itemByFileID:(unsigned long long)arg1;	// IMP=0x0000000000144654
- (id)itemByDocumentID:(unsigned int)arg1 db:(id)arg2;	// IMP=0x0000000000144514
- (id)itemByDocumentID:(unsigned int)arg1;	// IMP=0x00000000001444fe
- (id)descriptionWithContext:(id)arg1;	// IMP=0x0000000000144309
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000014428e
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToClientZone:(id)arg1;	// IMP=0x0000000000144202
- (_Bool)isSyncBlockedBecauseOSNeedsUpgrade;	// IMP=0x00000000001441e9
- (_Bool)isSyncBlockedBecauseAppNotInstalled;	// IMP=0x00000000001441d0
- (_Bool)isSyncBlocked;	// IMP=0x0000000000144193
- (void)clearStateBits:(unsigned int)arg1;	// IMP=0x000000000014417a
- (_Bool)setStateBits:(unsigned int)arg1;	// IMP=0x0000000000144150
- (unsigned int)_activateState:(unsigned int)arg1 origState:(unsigned int)arg2;	// IMP=0x0000000000143fa1
- (void)_forDBUpgrade_setStateBits:(unsigned int)arg1 clearStateBits:(unsigned int)arg2;	// IMP=0x0000000000143f6d
@property(readonly, nonatomic) _Bool isForeground;
- (void)disconnectNSMDQListenerAsync;	// IMP=0x0000000000143c72
@property(readonly, nonatomic) _Bool isCloudDocsZone;
- (void)unregisterAllItemsDidUploadTracker:(id)arg1;	// IMP=0x0000000000143b8e
- (void)registerAllItemsDidUploadTracker:(id)arg1;	// IMP=0x0000000000143aa5
- (id)sizeOfItemsNeedingSyncUpOrUploadAndReturnError:(id *)arg1;	// IMP=0x00000000001438d7
- (id)itemCountPendingUploadOrSyncUpAndReturnError:(id *)arg1;	// IMP=0x0000000000143647
- (_Bool)handleZoneLevelErrorIfNeeded:(id)arg1;	// IMP=0x0000000000143260
- (void)scheduleResetServerAndClientTruthsForReason:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000142fb4
- (void)scheduleResetServerAndClientTruthsForReason:(id)arg1;	// IMP=0x0000000000142fa0
- (void)close;	// IMP=0x0000000000141665
- (void)resume;	// IMP=0x00000000001410a3
- (void)associateWithServerZone:(id)arg1 offline:(_Bool)arg2;	// IMP=0x0000000000140fef
- (void)associateWithServerZone:(id)arg1;	// IMP=0x0000000000140fdb
- (void)updateWithPlist:(id)arg1;	// IMP=0x0000000000140d01
- (void)_recreateSyncBudgetsAndThrottlesIfNeeded;	// IMP=0x0000000000140bc1
@property(readonly, nonatomic) NSMutableDictionary *plist;
- (void)dealloc;	// IMP=0x000000000014092b
- (id)initWithMangledID:(id)arg1 dbRowID:(id)arg2 db:(id)arg3 plist:(id)arg4 session:(id)arg5 initialCreation:(_Bool)arg6;	// IMP=0x0000000000140552
- (id)init;	// IMP=0x00000000001404c6
- (void)_increaseSyncUpBatchSizeAfterSuccess;	// IMP=0x0000000000140394
- (void)_decreaseSyncUpBatchSizeAfterError;	// IMP=0x00000000001402f8
@property(readonly, nonatomic) unsigned int syncUpBatchSize;
@property(readonly, nonatomic) _Bool isSharedZone;
@property(readonly, nonatomic) _Bool isPrivateZone;
@property(readonly, nonatomic) BRMangledID *mangledID; // @synthesize mangledID=_mangledID;
@property(readonly, nonatomic) BRCItemID *rootItemID;
- (id)asSharedClientZone;	// IMP=0x0000000000140198
- (id)asPrivateClientZone;	// IMP=0x0000000000140153
- (id)ownerName;	// IMP=0x000000000014013f
- (void)_finishedReset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c8426
- (void)_mkdirAppLibraryIfNeeded:(id)arg1;	// IMP=0x00000000000c8387
- (id)_cancelAllOperationsForReset;	// IMP=0x00000000000c71a2
- (void)_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c6e58
- (void)_performAfterResetServerAndClientTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c6df6
- (void)_performAfterResetServerAndClientSharedTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c6d63
- (void)_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c5e42
- (void)_performResetAndWantsUnlink:(_Bool)arg1 clientTruthBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c4bd2
- (_Bool)supportsKeepingClientItemsDuringReset;	// IMP=0x00000000000c4bc0
- (void)_removeTargetedAliasesWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c3c39
- (void)_reset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c3908
- (void)scheduleReset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c22f8
- (void)scheduleReset:(unsigned long long)arg1;	// IMP=0x00000000000c22e4
- (void)cancelReset;	// IMP=0x00000000000c220f
- (id)faultByParentID:(id)arg1 andPhysicalName:(id)arg2 db:(id)arg3;	// IMP=0x0000000000168e2c
- (id)faultByParentID:(id)arg1 andPhysicalName:(id)arg2;	// IMP=0x0000000000168e0c
- (id)faultByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x0000000000168a85
- (id)faultByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x0000000000168a65
- (id)reservedItemByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x00000000001686c3
- (id)reservedItemByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x00000000001686a3
- (void)waitForCrossZoneMoveProcessingWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001685db
- (void)itemMovedIntoShareInThisZone:(id)arg1 associatedItemID:(id)arg2;	// IMP=0x00000000001681dc
- (void)itemCrossZoneMoved:(id)arg1 withLookup:(id)arg2;	// IMP=0x0000000000167eca
- (void)_startDownloadingItemForCrossZoneMoveIfNecessary:(id)arg1;	// IMP=0x00000000001672db
- (void)_removeItemAndProcessForCrossZoneMove:(id)arg1;	// IMP=0x0000000000166b23
- (void)_finishedProcessingItemThatMovedToThisZone:(id)arg1;	// IMP=0x000000000016687b
- (void)_removeItemFromCZMProcessingIfNotAssociated:(id)arg1;	// IMP=0x0000000000166792
- (id)_refreshItemFromDB:(id)arg1;	// IMP=0x00000000001665a2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

