//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class CADisplayLink, CALayer, CKElasticFunction, NSArray, NSMutableDictionary, NSString, UIImage;

__attribute__((visibility("hidden")))
@interface CKBrowserDragStickerView : UIView
{
    _Bool _pressed;	// 8 = 0x8
    _Bool _canPeel;	// 9 = 0x9
    _Bool _scaledDown;	// 10 = 0xa
    _Bool _canRotate;	// 11 = 0xb
    double _initialScale;	// 16 = 0x10
    double _rotationAngle;	// 24 = 0x18
    double _dragViewScale;	// 32 = 0x20
    UIImage *_currentFrameImage;	// 40 = 0x28
    CALayer *_perspectiveLayer;	// 48 = 0x30
    CALayer *_shineLayer;	// 56 = 0x38
    CALayer *_shadowLayer;	// 64 = 0x40
    CALayer *_dropShadowLayer;	// 72 = 0x48
    CALayer *_peelLayer;	// 80 = 0x50
    CALayer *_meshLayer;	// 88 = 0x58
    NSArray *_dragImageFrames;	// 96 = 0x60
    UIView *_plusImageView;	// 104 = 0x68
    UIView *_whiteBackground;	// 112 = 0x70
    CALayer *_peelImageLayer;	// 120 = 0x78
    CALayer *_peelMaskLayer;	// 128 = 0x80
    CADisplayLink *_displayLink;	// 136 = 0x88
    double _elasticLastTime;	// 144 = 0x90
    double _elasticRemainingTime;	// 152 = 0x98
    CKElasticFunction *_elasticFunctionPositionX;	// 160 = 0xa0
    CKElasticFunction *_elasticFunctionPositionY;	// 168 = 0xa8
    CKElasticFunction *_elasticFunctionRotation;	// 176 = 0xb0
    double _elasticRotationAngle;	// 184 = 0xb8
    CKElasticFunction *_elasticFunctionScaleX;	// 192 = 0xc0
    CKElasticFunction *_elasticFunctionScaleY;	// 200 = 0xc8
    double _elasticScaleX;	// 208 = 0xd0
    double _elasticScaleY;	// 216 = 0xd8
    NSMutableDictionary *_peelMaskImageCache;	// 224 = 0xe0
    struct CGPoint _initialDragStartPosition;	// 232 = 0xe8
    struct CGSize _initialSize;	// 248 = 0xf8
    struct CGSize _rasterizedImageSize;	// 264 = 0x108
    struct CGPoint _meshLayerStartPosition;	// 280 = 0x118
    struct CGPoint _peelLayerStartPosition;	// 296 = 0x128
    struct CGPoint _shineLayerStartPosition;	// 312 = 0x138
    struct CGPoint _shadowLayerStartPosition;	// 328 = 0x148
    struct CGPoint _dropShadowLayerStartPosition;	// 344 = 0x158
    struct CGPoint _anchorOffset;	// 360 = 0x168
    struct CGRect _sourceRect;	// 376 = 0x178
}

+ (id)springAnimationWithKeyPath:(id)arg1 speed:(float)arg2;	// IMP=0x0010000000433cd3
+ (id)meshTransform;	// IMP=0x0010000000433be1
- (void).cxx_destruct;	// IMP=0x000000000043884a
@property(retain, nonatomic) NSMutableDictionary *peelMaskImageCache; // @synthesize peelMaskImageCache=_peelMaskImageCache;
@property(nonatomic) _Bool canRotate; // @synthesize canRotate=_canRotate;
@property(nonatomic, getter=isScaledDown) _Bool scaledDown; // @synthesize scaledDown=_scaledDown;
@property(nonatomic) double elasticScaleY; // @synthesize elasticScaleY=_elasticScaleY;
@property(nonatomic) double elasticScaleX; // @synthesize elasticScaleX=_elasticScaleX;
@property(retain, nonatomic) CKElasticFunction *elasticFunctionScaleY; // @synthesize elasticFunctionScaleY=_elasticFunctionScaleY;
@property(retain, nonatomic) CKElasticFunction *elasticFunctionScaleX; // @synthesize elasticFunctionScaleX=_elasticFunctionScaleX;
@property(nonatomic) double elasticRotationAngle; // @synthesize elasticRotationAngle=_elasticRotationAngle;
@property(retain, nonatomic) CKElasticFunction *elasticFunctionRotation; // @synthesize elasticFunctionRotation=_elasticFunctionRotation;
@property(retain, nonatomic) CKElasticFunction *elasticFunctionPositionY; // @synthesize elasticFunctionPositionY=_elasticFunctionPositionY;
@property(retain, nonatomic) CKElasticFunction *elasticFunctionPositionX; // @synthesize elasticFunctionPositionX=_elasticFunctionPositionX;
@property(nonatomic) double elasticRemainingTime; // @synthesize elasticRemainingTime=_elasticRemainingTime;
@property(nonatomic) double elasticLastTime; // @synthesize elasticLastTime=_elasticLastTime;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(nonatomic) struct CGPoint anchorOffset; // @synthesize anchorOffset=_anchorOffset;
@property(nonatomic) struct CGRect sourceRect; // @synthesize sourceRect=_sourceRect;
@property(retain, nonatomic) CALayer *peelMaskLayer; // @synthesize peelMaskLayer=_peelMaskLayer;
@property(retain, nonatomic) CALayer *peelImageLayer; // @synthesize peelImageLayer=_peelImageLayer;
@property(retain, nonatomic) UIView *whiteBackground; // @synthesize whiteBackground=_whiteBackground;
@property(retain, nonatomic) UIView *plusImageView; // @synthesize plusImageView=_plusImageView;
@property(retain, nonatomic) NSArray *dragImageFrames; // @synthesize dragImageFrames=_dragImageFrames;
@property(nonatomic) struct CGPoint dropShadowLayerStartPosition; // @synthesize dropShadowLayerStartPosition=_dropShadowLayerStartPosition;
@property(nonatomic) struct CGPoint shadowLayerStartPosition; // @synthesize shadowLayerStartPosition=_shadowLayerStartPosition;
@property(nonatomic) struct CGPoint shineLayerStartPosition; // @synthesize shineLayerStartPosition=_shineLayerStartPosition;
@property(nonatomic) struct CGPoint peelLayerStartPosition; // @synthesize peelLayerStartPosition=_peelLayerStartPosition;
@property(nonatomic) struct CGPoint meshLayerStartPosition; // @synthesize meshLayerStartPosition=_meshLayerStartPosition;
@property(retain, nonatomic) CALayer *meshLayer; // @synthesize meshLayer=_meshLayer;
@property(retain, nonatomic) CALayer *peelLayer; // @synthesize peelLayer=_peelLayer;
@property(retain, nonatomic) CALayer *dropShadowLayer; // @synthesize dropShadowLayer=_dropShadowLayer;
@property(retain, nonatomic) CALayer *shadowLayer; // @synthesize shadowLayer=_shadowLayer;
@property(retain, nonatomic) CALayer *shineLayer; // @synthesize shineLayer=_shineLayer;
@property(nonatomic) struct CGSize rasterizedImageSize; // @synthesize rasterizedImageSize=_rasterizedImageSize;
@property(retain, nonatomic) CALayer *perspectiveLayer; // @synthesize perspectiveLayer=_perspectiveLayer;
@property(retain, nonatomic) UIImage *currentFrameImage; // @synthesize currentFrameImage=_currentFrameImage;
@property(nonatomic) _Bool canPeel; // @synthesize canPeel=_canPeel;
@property(nonatomic, getter=isPressed) _Bool pressed; // @synthesize pressed=_pressed;
@property(nonatomic) double dragViewScale; // @synthesize dragViewScale=_dragViewScale;
@property(nonatomic) double rotationAngle; // @synthesize rotationAngle=_rotationAngle;
@property(nonatomic) struct CGSize initialSize; // @synthesize initialSize=_initialSize;
@property(nonatomic) double initialScale; // @synthesize initialScale=_initialScale;
@property(nonatomic) struct CGPoint initialDragStartPosition; // @synthesize initialDragStartPosition=_initialDragStartPosition;
- (void)animationTimerFired:(unsigned long long)arg1;	// IMP=0x0000000000437fba
- (void)updateAnimationTimerObserving;	// IMP=0x0000000000437eef
- (void)_displayLinkCallback:(id)arg1;	// IMP=0x0000000000437b80
- (void)detachElasticEffects;	// IMP=0x0000000000437ae0
- (void)updateElasticEffectsForLocation:(struct CGPoint)arg1;	// IMP=0x0000000000437995
- (void)attachElasticEffectsForLocation:(struct CGPoint)arg1;	// IMP=0x00000000004376da
- (id)peelMaskImageFromImage:(id)arg1;	// IMP=0x0000000000437598
- (id)scaleImage:(id)arg1 toSize:(struct CGSize)arg2;	// IMP=0x00000000004374a0
- (double)dragViewScaleUp;	// IMP=0x00000000004373be
- (double)dragViewRotation;	// IMP=0x0000000000437340
- (struct CGPoint)dragViewCenter;	// IMP=0x0000000000437232
- (void)setPlusImageViewHidden:(_Bool)arg1;	// IMP=0x0000000000436d1c
- (void)applyTransforms;	// IMP=0x0000000000436b00
- (void)reversePeelAnimationToPoint:(struct CGPoint)arg1 forPlacement:(_Bool)arg2 shouldShrink:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000435bac
- (void)animateScaleDown;	// IMP=0x0000000000435983
- (void)animatePeelWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000435281
- (void)setUpPeelLayers;	// IMP=0x0000000000434315
- (id)initWithSourceRect:(struct CGRect)arg1 dragImage:(id)arg2;	// IMP=0x0000000000433e82
- (void)dealloc;	// IMP=0x0000000000433df8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

