//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;	// IMP=0x008000000008f262
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;	// IMP=0x008000000008f251
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;	// IMP=0x008000000008f222
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;	// IMP=0x008000000008f12e
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;	// IMP=0x008000000008f03a
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;	// IMP=0x008000000008f029
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;	// IMP=0x008000000008f00c
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;	// IMP=0x008000000008ef3c
+ (int)payloadForCodecType:(long long)arg1;	// IMP=0x008000000008eca0
+ (long long)codecTypeForPayload:(int)arg1;	// IMP=0x008000000008ea18
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;	// IMP=0x008000000008e895
+ (_Bool)shouldEnablePacketSizeLimitForPayload:(int)arg1;	// IMP=0x008000000008e889
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;	// IMP=0x008000000008e874
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;	// IMP=0x008000000008e82c
+ (_Bool)shouldUseCookieForPayload:(int)arg1;	// IMP=0x008000000008e810
+ (_Bool)skipBandWidthCheckForCodecRateModes:(int)arg1 supportedBitrates:(id)arg2;	// IMP=0x008000000008e654
+ (_Bool)isEVSPayload:(int)arg1;	// IMP=0x008000000008e638
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;	// IMP=0x008000000008e5f6
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x008000000008e5d8
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x008000000008e581
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;	// IMP=0x008000000008e012
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;	// IMP=0x008000000008dd3d
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;	// IMP=0x008000000008dcea
+ (id)codecModesForEVS32kHz;	// IMP=0x008000000008dcdd
+ (id)codecModesForEVS16kHz;	// IMP=0x008000000008dcd0
+ (id)codecModesForEVS8kHz;	// IMP=0x008000000008dcc3
+ (id)codecModesForAMR16kHz;	// IMP=0x008000000008dcb6
+ (id)codecModesForAMR8kHz;	// IMP=0x008000000008dca9
+ (int)codecBandwidthForPayload:(int)arg1;	// IMP=0x008000000008dc7c
+ (_Bool)canSetBitrateForPayload:(int)arg1;	// IMP=0x008000000008dc60
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;	// IMP=0x008000000008db10
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;	// IMP=0x008000000008d9f0
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;	// IMP=0x008000000008d9d0
+ (unsigned int)sampleRateForPayload:(int)arg1;	// IMP=0x008000000008d90b
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;	// IMP=0x008000000008d8d8
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;	// IMP=0x008000000008d8bc

@end

