//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class ATSpatialStreamDescriptions, AVAudioDevice, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, VCAudioRelay, VCAudioRelayIO, VCAudioSessionMediaProperties, VCAudioUnitProperties, VCAudioUnitSpatialContext;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface VCAudioManager
{
    struct tagHANDLE *_hAUIO;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 32 = 0x20
    unsigned int _state;	// 40 = 0x28
    VCAudioSessionMediaProperties *_currentAudioSessionMediaProperties;	// 48 = 0x30
    VCAudioUnitProperties *_currentAudioUnitProperties;	// 56 = 0x38
    NSDictionary *_vpOperatingModeToAudioSessionMediaFormatMapping;	// 64 = 0x40
    NSMutableArray *_allClients;	// 72 = 0x48
    NSMutableArray *_startingIOClients;	// 80 = 0x50
    AVAudioDevice *_inputDevice;	// 88 = 0x58
    AVAudioDevice *_outputDevice;	// 96 = 0x60
    _Bool _isGKVoiceChat;	// 104 = 0x68
    _Bool _isMicrophoneMuted;	// 105 = 0x69
    _Bool _isMixingVoiceWithMediaEnabled;	// 106 = 0x6a
    _Bool _isInDaemon;	// 107 = 0x6b
    _Bool _isInputMeteringEnabled;	// 108 = 0x6c
    _Bool _isOutputMeteringEnabled;	// 109 = 0x6d
    _Bool _isSpeakerPhoneEnabled;	// 110 = 0x6e
    _Bool _isSuspended;	// 111 = 0x6f
    _Bool _followSystemInput;	// 112 = 0x70
    _Bool _followSystemOutput;	// 113 = 0x71
    struct _VCAudioIOControllerIOState _sinkData;	// 120 = 0x78
    struct _VCAudioIOControllerIOState _sourceData;	// 288 = 0x120
    int _interruptThreadState;	// 456 = 0x1c8
    VCAudioRelay *_interruptThread;	// 464 = 0x1d0
    VCAudioRelayIO *_interruptThreadClient;	// 472 = 0x1d8
    _Bool _isInterrupting;	// 480 = 0x1e0
    struct _opaque_pthread_mutex_t _interruptingMutex;	// 488 = 0x1e8
    struct _opaque_pthread_mutex_t _inputDeviceMutex;	// 552 = 0x228
    struct _opaque_pthread_mutex_t _outputDeviceMutex;	// 616 = 0x268
    _Bool _spatialAudioDisabled;	// 680 = 0x2a8
    void **_audioSession;	// 688 = 0x2b0
    int _playbackMode;	// 696 = 0x2b8
    NSMutableDictionary *_spatialContexts;	// 704 = 0x2c0
    NSMutableDictionary *_audioSessionSinkMuted;	// 712 = 0x2c8
    VCAudioUnitSpatialContext *_currentSpatialContext;	// 720 = 0x2d0
    CDUnknownBlockType _mutedTalkerNotificationHandler;	// 728 = 0x2d8
    NSArray *_stateStrings;	// 736 = 0x2e0
    ATSpatialStreamDescriptions *_spatialStreamDescriptions;	// 744 = 0x2e8
    _Bool _isMediaPlaybackOnExternalDevice;	// 752 = 0x2f0
}

+ (id)sharedSystemAudioInstance;	// IMP=0x001000000000b2c0
+ (id)sharedVoiceChatInstance;	// IMP=0x001000000000b269
@property(retain, nonatomic) NSDictionary *vpOperatingModeToAudioSessionMediaFormatMapping; // @synthesize vpOperatingModeToAudioSessionMediaFormatMapping=_vpOperatingModeToAudioSessionMediaFormatMapping;
@property(nonatomic) _Bool isInDaemon; // @synthesize isInDaemon=_isInDaemon;
@property(retain, nonatomic) VCAudioUnitProperties *currentAudioUnitProperties; // @synthesize currentAudioUnitProperties=_currentAudioUnitProperties;
@property(retain, nonatomic) VCAudioSessionMediaProperties *currentAudioSessionMediaProperties; // @synthesize currentAudioSessionMediaProperties=_currentAudioSessionMediaProperties;
@property(nonatomic, getter=isSpeakerPhoneEnabled) _Bool speakerPhoneEnabled; // @synthesize speakerPhoneEnabled=_isSpeakerPhoneEnabled;
@property(nonatomic, getter=isMixingVoiceWithMediaEnabled) _Bool mixingVoiceWithMediaEnabled; // @synthesize mixingVoiceWithMediaEnabled=_isMixingVoiceWithMediaEnabled;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted; // @synthesize microphoneMuted=_isMicrophoneMuted;
@property(nonatomic) _Bool isGKVoiceChat; // @synthesize isGKVoiceChat=_isGKVoiceChat;
- (int)setVolume:(float)arg1 withRampTime:(float)arg2;	// IMP=0x000000000001e6a5
- (void)setupDynamicDuckingVolumeHandlerForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x000000000001e69f
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x000000000001e533
- (void)didServerDie;	// IMP=0x000000000001e394
- (void)didSessionResume;	// IMP=0x000000000001e382
- (void)didSessionPause;	// IMP=0x000000000001e370
- (void)didSessionEnd;	// IMP=0x000000000001df78
- (void)didSessionStop;	// IMP=0x000000000001db62
- (void)stopInterruptThread;	// IMP=0x000000000001d97a
- (void)startInterruptThread;	// IMP=0x000000000001d423
- (void)cleanupInterruptThread;	// IMP=0x000000000001d3de
- (_Bool)setupInterruptThread;	// IMP=0x000000000001d042
- (void)stopAudioSession;	// IMP=0x000000000001d02e
- (void)resetAudioSessionWithProperties:(id)arg1 interruptSuccessful:(_Bool *)arg2;	// IMP=0x000000000001cdba
- (_Bool)startAudioSessionWithProperties:(id)arg1;	// IMP=0x000000000001cda5
- (void)refreshRemoteCodecType:(unsigned int)arg1 sampleRate:(double)arg2;	// IMP=0x000000000001cc75
- (void)refreshOutputMetering;	// IMP=0x000000000001cbea
- (void)refreshInputMetering;	// IMP=0x000000000001cb5f
- (void)updateClient:(id)arg1 direction:(unsigned char)arg2;	// IMP=0x000000000001c2aa
- (void)stopClient:(id)arg1;	// IMP=0x000000000001b9f2
- (void)startClient:(id)arg1;	// IMP=0x000000000001b00c
- (_Bool)updateStateWithAudioIOClient:(id)arg1;	// IMP=0x000000000001a1d6
- (id)preferredClientWithNewClient:(id)arg1;	// IMP=0x000000000001a04a
- (_Bool)stateInterruptedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x0000000000019a46
- (void)stateTransitionInterruptedToStarted;	// IMP=0x0000000000019a18
- (void)stateTransitionInterruptedToRunning;	// IMP=0x00000000000199d2
- (_Bool)stateInterruptedShouldGoToRunning:(id)arg1;	// IMP=0x000000000001999f
- (_Bool)stateInterruptedShouldGoToStarted:(id)arg1;	// IMP=0x0000000000019935
- (_Bool)stateRunningWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001923d
- (void)stateTransitionRunningToInterrupted;	// IMP=0x000000000001920f
- (void)stateRunningToSessionStarted;	// IMP=0x00000000000191e1
- (_Bool)stateRunningShouldTransitionToInterrupted:(id)arg1;	// IMP=0x00000000000191ae
- (_Bool)stateRunningShouldTransitionToStarted:(id)arg1;	// IMP=0x0000000000019144
- (_Bool)stateSessionStartedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x0000000000018b46
- (void)enterStateStarted;	// IMP=0x00000000000186b2
- (_Bool)stateIdleWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x0000000000018616
- (void)resetChannelMask;	// IMP=0x00000000000185f5
- (void)activateSpatialContext:(id)arg1 shouldApplySpatialMetadata:(_Bool)arg2;	// IMP=0x0000000000018582
- (void)applySpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1;	// IMP=0x000000000001817c
- (void)applySessionContextToAudioUnitProperties:(id)arg1 preferredClient:(id)arg2;	// IMP=0x0000000000017eb2
- (void)setSpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1 audioSessionId:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000017bc6
- (void)unregisterAudioSessionId:(unsigned int)arg1;	// IMP=0x0000000000017781
- (int)registerAudioSessionId:(unsigned int)arg1 maxChannelCountMic:(unsigned int)arg2 maxChannelCountSpeaker:(unsigned int)arg3 spatialMetadata:(struct OpaqueCMBlockBuffer *)arg4;	// IMP=0x000000000001713b
- (int)unregisterFromMutedTalkerNotification;	// IMP=0x0000000000016e42
- (int)registerForMutedTalkerNotification:(CDUnknownBlockType)arg1;	// IMP=0x00000000000169ac
- (int)unregisterForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x0000000000016785
- (int)registerForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x0000000000016336
- (void)applyControllerFormatToClients:(id)arg1;	// IMP=0x0000000000016098
- (void)activateStartingClient:(id)arg1 applyControllerFormat:(_Bool)arg2;	// IMP=0x0000000000015f4e
- (void)completeStartForAllStartingClients;	// IMP=0x0000000000015bf2
- (void)unregisterClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x00000000000156be
- (void)registerClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x0000000000014feb
- (void)stopAUIO;	// IMP=0x0000000000014e0e
- (void)resetAudioLimiterWithProperties:(id)arg1;	// IMP=0x0000000000014b73
- (void)resetAUIOWithProperties:(id)arg1;	// IMP=0x00000000000149a9
- (_Bool)shouldResetAudioSessionWithProperties:(id)arg1;	// IMP=0x00000000000143f5
- (_Bool)shouldResetAudioUnitWithProperties:(id)arg1;	// IMP=0x0000000000012fc8
- (_Bool)startAUIOWithProperties:(id)arg1;	// IMP=0x0000000000011cb9
- (void)setMediaPlaybackOnExternalDevice:(_Bool)arg1;	// IMP=0x0000000000011c13
- (void)updateCurrentOutputDevice:(id)arg1;	// IMP=0x00000000000117c3
@property(retain) AVAudioDevice *currentOutputDevice; // @synthesize currentOutputDevice=_outputDevice;
- (void)setCurrentOutputDeviceInternal:(id)arg1;	// IMP=0x0000000000010e2b
@property(retain) AVAudioDevice *currentInputDevice; // @synthesize currentInputDevice=_inputDevice;
- (void)updateCurrentInputDevice:(id)arg1;	// IMP=0x0000000000010080
- (void)setCurrentInputDeviceInternal:(id)arg1;	// IMP=0x000000000001002f
- (void)setupIODevicesForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x000000000000ffe1
- (id)newAudioSessionMediaPropertiesWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;	// IMP=0x000000000000ffd0
- (id)newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;	// IMP=0x000000000000ffb7
- (id)newAudioUnitPropertiesForSystemAudioWithPreferredClient:(id)arg1;	// IMP=0x000000000000fbc0
- (id)newAudioUnitPropertiesWithPreferredClient:(id)arg1;	// IMP=0x000000000000f334
- (_Bool)computeAllowAudioRecordingWithPreferredClient:(id)arg1;	// IMP=0x000000000000f185
- (unsigned int)computeSamplePerFrameWithPreferredClient:(id)arg1 sampleRate:(unsigned int)arg2;	// IMP=0x000000000000efb0
- (void)computeFormatDescription:(struct AudioStreamBasicDescription *)arg1 withPreferredClient:(id)arg2;	// IMP=0x000000000000ede4
- (unsigned int)vpOperationModeForConferenceOperatingMode:(int)arg1 deviceRole:(int)arg2;	// IMP=0x000000000000ec57
- (void)_cleanupDeadClients;	// IMP=0x000000000000e891
- (_Bool)removeClient:(id)arg1;	// IMP=0x000000000000e77f
- (void)waitIdleForClient:(id)arg1;	// IMP=0x000000000000e0e8
- (_Bool)addClient:(id)arg1;	// IMP=0x000000000000dd82
- (void)removeAllClientsForIO:(struct _VCAudioIOControllerIOState *)arg1;	// IMP=0x000000000000dd11
- (void)flushEventQueue:(struct opaqueCMSimpleQueue *)arg1;	// IMP=0x000000000000d959
- (int)prewarmingClientOperatingMode;	// IMP=0x000000000000d83b
- (void)resetAudioTimestamps;	// IMP=0x000000000000d80e
- (void)computeHardwarePreferences;	// IMP=0x000000000000d808
- (void)setOutputMetering;	// IMP=0x000000000000d6ad
- (void)setInputMetering;	// IMP=0x000000000000d552
- (void)applyAudioSessionMute;	// IMP=0x000000000000d2a0
- (void)setMute:(_Bool)arg1 forClient:(id)arg2;	// IMP=0x000000000000cf6f
- (void)dealloc;	// IMP=0x000000000000c748
@property(readonly, copy) NSString *description;
- (id)initWithAudioSessionMode:(int)arg1;	// IMP=0x000000000000b624
- (void)getPreferredFormat:(struct AudioStreamBasicDescription *)arg1 blockSize:(double *)arg2 vpOperatingMode:(unsigned int *)arg3 forOperatingMode:(int)arg4 deviceRole:(int)arg5 suggestedFormat:(struct AudioStreamBasicDescription *)arg6;	// IMP=0x000000000000b368
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sourceIO;
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sinkIO;
- (id)autorelease;	// IMP=0x000000000000b33f
- (oneway void)release;	// IMP=0x000000000000b339
- (unsigned long long)retainCount;	// IMP=0x000000000000b32c
- (id)retain;	// IMP=0x000000000000b323
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000b31a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSDictionary *reportingStats;
@property(readonly) Class superclass;

@end

