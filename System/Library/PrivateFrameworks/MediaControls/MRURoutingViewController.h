//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

@class AVSystemController, CARSessionStatus, FBSDisplayMonitor, MPAVEndpointRoute, MPAVRoute, MPAVRoutingController, MPSectionedCollection, MPWeakTimer, MRURoutingView, MRURoutingViewControllerUpdate, MRUVendorSpecificDeviceManager, MRUVisualStylingProvider, MRUVolumeGroupCoordinator, NSArray, NSDictionary, NSIndexPath, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumberFormatter, NSString, NSTimer;
@protocol MRURoutingViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface MRURoutingViewController : UIViewController
{
    MRURoutingViewControllerUpdate *_pendingUpdate;	// 8 = 0x8
    MRURoutingViewControllerUpdate *_optimisticUpdate;	// 16 = 0x10
    _Bool _isAnimatingUpdate;	// 24 = 0x18
    MPAVRoute *_displayedEndpointRoute;	// 32 = 0x20
    MPSectionedCollection *_routingViewItems;	// 40 = 0x28
    NSArray *_cachedPickedRoutes;	// 48 = 0x30
    NSArray *_cachedDisplayableAvailableRoutes;	// 56 = 0x38
    NSArray *_cachedPendingPickedRoutes;	// 64 = 0x40
    NSArray *_cachedDisplayAsPickedRoutes;	// 72 = 0x48
    NSArray *_cachedVolumeCapableRoutes;	// 80 = 0x50
    NSDictionary *_cachedRouteGrouping;	// 88 = 0x58
    NSArray *_cachedAirPlayRoutes;	// 96 = 0x60
    NSArray *_cachedNativeRoutes;	// 104 = 0x68
    NSArray *_cachedNativeRoutesInVendorSpecificGroup;	// 112 = 0x70
    NSArray *_cachedActivatedVendorSpecificDeviceIDs;	// 120 = 0x78
    NSArray *_cachedPendingVendorSpecificDeviceIDs;	// 128 = 0x80
    MPWeakTimer *_updateTimer;	// 136 = 0x88
    int _airPlayPasswordAlertDidAppearToken;	// 144 = 0x90
    int _airPlayPasswordAlertDidCancelToken;	// 148 = 0x94
    _Bool _airPlayPasswordAlertDidAppearTokenIsValid;	// 152 = 0x98
    _Bool _hasUserSelections;	// 153 = 0x99
    unsigned long long _updatesSincePresentation;	// 160 = 0xa0
    _Bool _didSelectShowMore;	// 168 = 0xa8
    _Bool _allRoutesAreUnknown;	// 169 = 0xa9
    _Bool _someRoutesAreUnknown;	// 170 = 0xaa
    _Bool _sortByIsVideoRoute;	// 171 = 0xab
    _Bool _showMetadataForEndpointRoute;	// 172 = 0xac
    _Bool _onScreen;	// 173 = 0xad
    _Bool _needsDisplayedRoutesUpdate;	// 174 = 0xae
    _Bool _presentingAppHasActiveAVSession;	// 175 = 0xaf
    _Bool _didLastPickNativeRoute;	// 176 = 0xb0
    int _presentingAppProcessIdentifier;	// 180 = 0xb4
    MPAVRoutingController *_routingController;	// 184 = 0xb8
    MRUVendorSpecificDeviceManager *_vendorSpecificManager;	// 192 = 0xc0
    id <MRURoutingViewControllerDelegate> _delegate;	// 200 = 0xc8
    MRUVisualStylingProvider *_stylingProvider;	// 208 = 0xd0
    MRUVolumeGroupCoordinator *_volumeGroupCoordinator;	// 216 = 0xd8
    NSArray *_nowPlayingControllers;	// 224 = 0xe0
    MPAVEndpointRoute *_endpointRoute;	// 232 = 0xe8
    long long _discoveryMode;	// 240 = 0xf0
    NSMutableArray *_customRows;	// 248 = 0xf8
    NSDictionary *_outputDeviceVolumeControllers;	// 256 = 0x100
    CARSessionStatus *_carPlaySessionStatus;	// 264 = 0x108
    NSMutableSet *_expandedGroupUIDs;	// 272 = 0x110
    NSMutableSet *_expandedItemUIDs;	// 280 = 0x118
    NSMutableSet *_expandedRouteUIDs;	// 288 = 0x120
    NSDictionary *_indexedNowPlayingControllers;	// 296 = 0x128
    FBSDisplayMonitor *_displayMonitor;	// 304 = 0x130
    NSNumberFormatter *_percentageFormatter;	// 312 = 0x138
    MPWeakTimer *_subtitleUpdateTimer;	// 320 = 0x140
    NSTimer *_collapseTimer;	// 328 = 0x148
    unsigned long long _stateHandle;	// 336 = 0x150
    NSIndexPath *_vendorSpecificGroupThatWasJustExpanded;	// 344 = 0x158
    NSString *_mostRecentlyInteractedVendorSpecificGroupRouteID;	// 352 = 0x160
    NSMutableSet *_collapsedVendorSpecificGroupUIDs;	// 360 = 0x168
    NSMutableSet *_expandedVendorSpecificGroupUIDs;	// 368 = 0x170
    NSMutableDictionary *_vendorSpecificGroupDisplayedSubroutes;	// 376 = 0x178
    NSMutableArray *_staticCustomRowItems;	// 384 = 0x180
    AVSystemController *_mediaServerController;	// 392 = 0x188
    struct UIEdgeInsets _contentEdgeInsets;	// 400 = 0x190
    struct UIEdgeInsets _scrollIndicatorInsets;	// 432 = 0x1b0
}

- (void).cxx_destruct;	// IMP=0x000000000007c1f7
@property(retain, nonatomic) AVSystemController *mediaServerController; // @synthesize mediaServerController=_mediaServerController;
@property(retain, nonatomic) NSMutableArray *staticCustomRowItems; // @synthesize staticCustomRowItems=_staticCustomRowItems;
@property(retain, nonatomic) NSMutableDictionary *vendorSpecificGroupDisplayedSubroutes; // @synthesize vendorSpecificGroupDisplayedSubroutes=_vendorSpecificGroupDisplayedSubroutes;
@property(retain, nonatomic) NSMutableSet *expandedVendorSpecificGroupUIDs; // @synthesize expandedVendorSpecificGroupUIDs=_expandedVendorSpecificGroupUIDs;
@property(retain, nonatomic) NSMutableSet *collapsedVendorSpecificGroupUIDs; // @synthesize collapsedVendorSpecificGroupUIDs=_collapsedVendorSpecificGroupUIDs;
@property(retain, nonatomic) NSString *mostRecentlyInteractedVendorSpecificGroupRouteID; // @synthesize mostRecentlyInteractedVendorSpecificGroupRouteID=_mostRecentlyInteractedVendorSpecificGroupRouteID;
@property(retain, nonatomic) NSIndexPath *vendorSpecificGroupThatWasJustExpanded; // @synthesize vendorSpecificGroupThatWasJustExpanded=_vendorSpecificGroupThatWasJustExpanded;
@property(nonatomic) _Bool didLastPickNativeRoute; // @synthesize didLastPickNativeRoute=_didLastPickNativeRoute;
@property(nonatomic) _Bool presentingAppHasActiveAVSession; // @synthesize presentingAppHasActiveAVSession=_presentingAppHasActiveAVSession;
@property(nonatomic) unsigned long long stateHandle; // @synthesize stateHandle=_stateHandle;
@property(retain, nonatomic) NSTimer *collapseTimer; // @synthesize collapseTimer=_collapseTimer;
@property(retain, nonatomic) MPWeakTimer *subtitleUpdateTimer; // @synthesize subtitleUpdateTimer=_subtitleUpdateTimer;
@property(retain, nonatomic) NSNumberFormatter *percentageFormatter; // @synthesize percentageFormatter=_percentageFormatter;
@property(nonatomic) _Bool needsDisplayedRoutesUpdate; // @synthesize needsDisplayedRoutesUpdate=_needsDisplayedRoutesUpdate;
@property(retain, nonatomic) FBSDisplayMonitor *displayMonitor; // @synthesize displayMonitor=_displayMonitor;
@property(retain, nonatomic) NSDictionary *indexedNowPlayingControllers; // @synthesize indexedNowPlayingControllers=_indexedNowPlayingControllers;
@property(retain, nonatomic) NSMutableSet *expandedRouteUIDs; // @synthesize expandedRouteUIDs=_expandedRouteUIDs;
@property(retain, nonatomic) NSMutableSet *expandedItemUIDs; // @synthesize expandedItemUIDs=_expandedItemUIDs;
@property(retain, nonatomic) NSMutableSet *expandedGroupUIDs; // @synthesize expandedGroupUIDs=_expandedGroupUIDs;
@property(retain, nonatomic) CARSessionStatus *carPlaySessionStatus; // @synthesize carPlaySessionStatus=_carPlaySessionStatus;
@property(retain, nonatomic) NSDictionary *outputDeviceVolumeControllers; // @synthesize outputDeviceVolumeControllers=_outputDeviceVolumeControllers;
@property(nonatomic) _Bool onScreen; // @synthesize onScreen=_onScreen;
@property(nonatomic) int presentingAppProcessIdentifier; // @synthesize presentingAppProcessIdentifier=_presentingAppProcessIdentifier;
@property(copy, nonatomic) NSMutableArray *customRows; // @synthesize customRows=_customRows;
@property(nonatomic) struct UIEdgeInsets scrollIndicatorInsets; // @synthesize scrollIndicatorInsets=_scrollIndicatorInsets;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
@property(nonatomic) _Bool showMetadataForEndpointRoute; // @synthesize showMetadataForEndpointRoute=_showMetadataForEndpointRoute;
@property(nonatomic) _Bool sortByIsVideoRoute; // @synthesize sortByIsVideoRoute=_sortByIsVideoRoute;
@property(nonatomic) long long discoveryMode; // @synthesize discoveryMode=_discoveryMode;
@property(retain, nonatomic) MPAVEndpointRoute *endpointRoute; // @synthesize endpointRoute=_endpointRoute;
@property(retain, nonatomic) NSArray *nowPlayingControllers; // @synthesize nowPlayingControllers=_nowPlayingControllers;
@property(retain, nonatomic) MRUVolumeGroupCoordinator *volumeGroupCoordinator; // @synthesize volumeGroupCoordinator=_volumeGroupCoordinator;
@property(retain, nonatomic) MRUVisualStylingProvider *stylingProvider; // @synthesize stylingProvider=_stylingProvider;
@property(nonatomic) __weak id <MRURoutingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MRUVendorSpecificDeviceManager *vendorSpecificManager; // @synthesize vendorSpecificManager=_vendorSpecificManager;
@property(readonly, nonatomic) MPAVRoutingController *routingController; // @synthesize routingController=_routingController;
- (id)_fullStateDumpObject;	// IMP=0x000000000007b78b
- (id)_stateDumpObject;	// IMP=0x000000000007b481
- (id)symbolNameForVendorSpecificRoute:(id)arg1;	// IMP=0x000000000007b44c
- (_Bool)_shouldShowShowMoreButton;	// IMP=0x000000000007b3d2
- (void)ensureVendorSpecificGroupTreeIsVisible:(id)arg1;	// IMP=0x000000000007aee8
- (_Bool)routesContainAirPlayGroupableRoute:(id)arg1;	// IMP=0x000000000007ad9a
- (_Bool)routesContainSplitterCapableRoute:(id)arg1;	// IMP=0x000000000007abf0
- (_Bool)routesContainMultipleBuiltIn:(id)arg1;	// IMP=0x000000000007aa7f
- (id)_createSectionedCollection:(id)arg1 withPickedRoutes:(id)arg2;	// IMP=0x000000000007a676
- (void)_collapseAllGroupsAfterDelay;	// IMP=0x000000000007a58f
- (void)_collapseAllGroups;	// IMP=0x000000000007a535
- (id)_createRoutingViewItemsForUpdate:(id)arg1;	// IMP=0x0000000000078802
- (id)groupUIDForRoute:(id)arg1;	// IMP=0x000000000007871e
- (void)_applyUpdate:(id)arg1;	// IMP=0x0000000000075930
- (void)clearVendorSpecificGroupExpandedRecordFor:(id)arg1;	// IMP=0x000000000007587a
- (void)updateVendorSpecificGroupExpandedRecordFor:(id)arg1;	// IMP=0x0000000000075753
- (void)applyVendorSpecificGroupExpandedRecord:(id)arg1;	// IMP=0x00000000000756d2
- (_Bool)isVendorSpecificGroupStatusRecorded:(id)arg1;	// IMP=0x000000000007560d
- (_Bool)wasVendorSpecificGroupDisplayedAsExpanded:(id)arg1;	// IMP=0x00000000000755af
- (void)updateExpandedGroups;	// IMP=0x00000000000754cd
- (id)endpointGroupUID;	// IMP=0x0000000000075427
- (void)_configureVolumeForUpdate:(id)arg1 volumeCapableRoutes:(id *)arg2 volumeController:(id *)arg3;	// IMP=0x0000000000074c9f
- (id)_createRefreshUpdateForCoalesceResult;	// IMP=0x000000000007478d
- (id)_createReloadUpdate;	// IMP=0x000000000007474c
- (id)_createRefreshUpdate;	// IMP=0x00000000000745d1
- (void)_enqueueUpdate:(id)arg1;	// IMP=0x000000000007454a
- (void)didReceiveInteraction:(id)arg1;	// IMP=0x0000000000074528
- (void)setOptimisticUpdate:(id)arg1;	// IMP=0x00000000000744a4
- (void)_updateDisplayedRoutes;	// IMP=0x000000000007443f
- (void)_createUpdateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000073a05
- (id)_mergeRoutes:(id)arg1 withCoalescedResult:(id)arg2;	// IMP=0x00000000000722a8
- (id)_airPlayRoutesInRoutes:(id)arg1;	// IMP=0x00000000000720fe
- (id)_getNearbyRoutes:(id)arg1;	// IMP=0x000000000007204c
- (id)_displayAsPickedRoutesInRoutes:(id)arg1;	// IMP=0x0000000000071ebd
- (id)_displayableRoutesInRoutes:(id)arg1;	// IMP=0x000000000007138e
- (void)_setupUpdateTimerIfNecessary;	// IMP=0x0000000000071218
- (void)_setNeedsDisplayedRoutesUpdate;	// IMP=0x0000000000071194
- (void)_setNeedsRouteDiscoveryModeUpdate;	// IMP=0x0000000000071118
- (void)_diplayShareAudioDisabledAlertForReason:(id)arg1;	// IMP=0x0000000000071048
- (_Bool)_wouldShareAudioForPickedRoute:(id)arg1 operation:(long long)arg2 pickedRoutes:(id)arg3;	// IMP=0x0000000000070f91
- (void)enqueueRefreshUpdate;	// IMP=0x0000000000070ee2
- (long long)subtitleAccessoryForItem:(id)arg1 nowPlayingInfo:(id)arg2;	// IMP=0x0000000000070e0e
- (void)updateSubtitle;	// IMP=0x0000000000070a99
- (void)updateMetadataForNowPlayingController:(id)arg1;	// IMP=0x00000000000705b4
- (void)updateMetadata;	// IMP=0x0000000000070007
- (void)updateNowPlayingControllersForRoutes:(id)arg1;	// IMP=0x000000000006fa3e
- (void)showMoreAction;	// IMP=0x000000000006fa21
- (void)updateHeaderView:(id)arg1 forSection:(long long)arg2;	// IMP=0x000000000006f937
- (void)updateCell:(id)arg1 forIndexPath:(id)arg2;	// IMP=0x000000000006ee8b
- (void)updateVendorSpecificCustomRowCell:(id)arg1 forIndexPath:(id)arg2;	// IMP=0x000000000006ecb2
- (void)updateVendorSpecificCell:(id)arg1 forIndexPath:(id)arg2;	// IMP=0x000000000006da5e
- (void)updateVendorSpecificSubRouteCell:(id)arg1 forIndexPath:(id)arg2;	// IMP=0x000000000006d5f1
- (_Bool)_operationRequiresOptimisticState:(long long)arg1 routes:(id)arg2;	// IMP=0x000000000006d3ec
- (void)playingSessionsDidChangeNotification:(id)arg1;	// IMP=0x000000000006ced1
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000006cec9
- (void)sessionDidDisconnect:(id)arg1;	// IMP=0x000000000006ce10
- (void)sessionDidConnect:(id)arg1;	// IMP=0x000000000006cd57
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeNowPlayingInfo:(id)arg3;	// IMP=0x000000000006cd45
- (_Bool)nowPlayingControllerShouldAutomaticallyUpdateResponse:(id)arg1;	// IMP=0x000000000006cd35
- (void)routingCellDidTapToExpand:(id)arg1;	// IMP=0x000000000006cacc
- (void)routingController:(id)arg1 shouldHijackRoute:(id)arg2 alertStyle:(long long)arg3 busyRouteName:(id)arg4 presentingAppName:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000006c6d7
- (void)routingController:(id)arg1 didFailToPickRouteWithError:(id)arg2;	// IMP=0x000000000006c6c5
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;	// IMP=0x000000000006c6b3
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;	// IMP=0x000000000006c67c
- (void)vendorSpecificCellDidTapToExpand:(id)arg1;	// IMP=0x000000000006c4c3
- (void)vendorSpecificManager:(id)arg1 deviceNowPlayingInfoDidChange:(id)arg2;	// IMP=0x000000000006bd9f
- (void)vendorSpecificManager:(id)arg1 deviceStateDidChange:(id)arg2;	// IMP=0x000000000006bd29
- (void)vendorSpecificManagerDeviceListDidChange:(id)arg1;	// IMP=0x000000000006bc82
- (_Bool)tableView:(id)arg1 shouldHaveFullLengthBottomSeparatorForSection:(long long)arg2;	// IMP=0x000000000006bc59
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;	// IMP=0x000000000006a796
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;	// IMP=0x000000000006a6e5
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;	// IMP=0x000000000006a58b
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;	// IMP=0x000000000006a498
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;	// IMP=0x000000000006a48a
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;	// IMP=0x000000000006a471
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;	// IMP=0x000000000006a451
- (long long)numberOfSectionsInTableView:(id)arg1;	// IMP=0x000000000006a434
- (void)resetDisplayedRoutes;	// IMP=0x0000000000069bb9
@property(readonly, nonatomic) _Bool shouldSuppressNativeRoutesStatusDisplay;
@property(readonly, nonatomic) _Bool canUseUncoalescedResults;
- (_Bool)isConnectedToExternalDisplay;	// IMP=0x000000000006997b
- (_Bool)isInVehicle;	// IMP=0x0000000000069942
- (_Bool)hasCarKitRoute;	// IMP=0x00000000000697fc
@property(readonly, nonatomic, getter=isInCarPlay) _Bool inCarPlay;
- (_Bool)_canShowWhileLocked;	// IMP=0x00000000000695ad
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;	// IMP=0x0000000000069541
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x00000000000694a8
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000000069465
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000000069408
- (void)viewDidLoad;	// IMP=0x0000000000068c57
- (void)loadView;	// IMP=0x0000000000068c1e
- (void)dealloc;	// IMP=0x0000000000068b76
- (id)initWithRoutingController:(id)arg1;	// IMP=0x00000000000687fb
- (id)init;	// IMP=0x000000000006876e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) MRURoutingView *view; // @dynamic view;
@property(retain, nonatomic) MRURoutingView *viewIfLoaded; // @dynamic viewIfLoaded;

@end

