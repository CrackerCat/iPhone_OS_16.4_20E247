//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "_UITextLayoutControllerBase.h"

@class CUIStyleEffectConfiguration, NSArray, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, UITextPosition, UITextRange, UITextView, _UITextCanvasView;
@protocol NSLayoutManagerDelegate;

__attribute__((visibility("hidden")))
@interface _UITextKit1LayoutController : _UITextLayoutControllerBase
{
    UITextView *_textView;	// 8 = 0x8
    NSLayoutManager *_originalLayoutManager;	// 16 = 0x10
    _UITextCanvasView *_canvasView;	// 24 = 0x18
}

- (void).cxx_destruct;	// IMP=0x000000000025ccb9
- (void)resetFontForExtraBulletRendering;	// IMP=0x000000000025cc6b
@property(nonatomic) __weak id <NSLayoutManagerDelegate> layoutManagerDelegate;
@property(nonatomic) _Bool drawsDebugBaselines;
- (void)resumeTiling;	// IMP=0x000000000025cafc
- (void)suspendTiling;	// IMP=0x000000000025cadf
@property(nonatomic) double maxTileHeight;
@property(nonatomic) _Bool usesTiledViews;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange)arg1;	// IMP=0x000000000025ca1a
- (struct CGRect)unionRectForCharacterRange:(struct _NSRange)arg1 bottomInset:(double)arg2;	// IMP=0x000000000025c6f4
- (struct CGRect)boundingRectForCharacterRange:(struct _NSRange)arg1;	// IMP=0x000000000025c600
- (struct _NSRange)rangeOfCharacterClusterAtIndex:(unsigned long long)arg1 type:(long long)arg2;	// IMP=0x000000000025c4ce
- (id)positionWithOffset:(long long)arg1 affinity:(long long)arg2;	// IMP=0x000000000025c4b5
- (id)textRangeForCharacterRange:(struct _NSRange)arg1;	// IMP=0x000000000025c49c
- (struct _NSRange)characterRangeForTextRange:(id)arg1 clippedToDocument:(_Bool)arg2;	// IMP=0x000000000025c43b
- (struct _NSRange)characterRangeForTextRange:(id)arg1;	// IMP=0x000000000025c427
@property(readonly, nonatomic) _Bool canAccessLayoutManager;
- (struct CGRect)boundingRectForRange:(id)arg1;	// IMP=0x000000000025c3df
- (void)invalidateLayoutForRange:(id)arg1;	// IMP=0x000000000025c362
- (void)ensureLayoutForRange:(id)arg1;	// IMP=0x000000000025c2d4
- (struct CGRect)updateLayoutForSizeChangeOfTextContainer:(id)arg1;	// IMP=0x000000000025c2b6
- (void)ensureLayoutForBounds:(struct CGRect)arg1 inTextContainer:(id)arg2;	// IMP=0x000000000025c1b4
- (struct CGRect)usedRectForTextContainer:(id)arg1;	// IMP=0x000000000025c135
- (void)ensureLayoutForTextContainer:(id)arg1;	// IMP=0x000000000025c0c3
- (id)previewRendererForRange:(id)arg1 unifyRects:(_Bool)arg2;	// IMP=0x000000000025c035
- (id)dequeueCanvasViewForTextContainer:(id)arg1;	// IMP=0x000000000025bff7
- (id)textContainerForPosition:(id)arg1;	// IMP=0x000000000025bfb7
@property(readonly, copy, nonatomic) NSArray *textContainers;
- (void)requestTextGeometryAtPosition:(id)arg1 typingAttributes:(id)arg2 resultBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000025baed
- (double)baselineOffsetForFirstGlyph;	// IMP=0x000000000025ba81
- (id)annotatedSubstringForRange:(id)arg1;	// IMP=0x000000000025b7ac
- (id)attributedTextInRange:(id)arg1;	// IMP=0x000000000025b70d
@property(copy, nonatomic) CUIStyleEffectConfiguration *styleEffectConfiguration;
- (void)removeInvisibleRange:(id)arg1;	// IMP=0x000000000025b60f
- (void)addInvisibleRange:(id)arg1;	// IMP=0x000000000025b5d3
- (void)removeAllGhostedRanges;	// IMP=0x000000000025b5b6
- (void)addGhostedRange:(id)arg1;	// IMP=0x000000000025b57a
- (void)removeRenderingAttributes:(id)arg1 forRange:(id)arg2;	// IMP=0x000000000025b3af
- (void)addRenderingAttributes:(id)arg1 forRange:(id)arg2;	// IMP=0x000000000025b308
- (void)removeAnnotationAttribute:(id)arg1 forRange:(id)arg2;	// IMP=0x000000000025b261
- (id)annotationAttribute:(id)arg1 atPosition:(id)arg2;	// IMP=0x000000000025b1ac
- (void)addAnnotationAttribute:(id)arg1 value:(id)arg2 forRange:(id)arg3;	// IMP=0x000000000025b0e8
- (struct CGRect)extraLineFragmentRect;	// IMP=0x000000000025b08a
- (void)enumerateTextSegmentsInRange:(id)arg1 inTextContainer:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000025af9d
- (void)enumerateTextLineFragmentsInRange:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000025ae0f
- (id)nearestPositionAtPoint:(struct CGPoint)arg1 inContainer:(id)arg2;	// IMP=0x000000000025ac2b
- (id)cursorPositionAtPoint:(struct CGPoint)arg1 inContainer:(id)arg2;	// IMP=0x000000000025a724
- (id)selectionRectsForRange:(id)arg1 fromView:(id)arg2 forContainerPassingTest:(CDUnknownBlockType)arg3;	// IMP=0x0000000000259f18
- (long long)baseWritingDirectionAtPosition:(id)arg1;	// IMP=0x0000000000259e56
- (id)attributesAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000259ca0
- (id)textRangeForBounds:(struct CGRect)arg1 inTextContainer:(id)arg2 layoutIfNeeded:(_Bool)arg3;	// IMP=0x0000000000259a23
- (struct CGRect)insertionRectForPosition:(id)arg1 typingAttributes:(id)arg2 placeholderAttachment:(id)arg3 textContainer:(id *)arg4;	// IMP=0x0000000000258a74
- (long long)affinityForPosition:(id)arg1;	// IMP=0x0000000000258a5f
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000002589fe
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000002589e6
- (id)textRangeForLineEnclosingPosition:(id)arg1 effectiveAffinity:(long long)arg2;	// IMP=0x00000000002585a5
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2 affinity:(long long)arg3;	// IMP=0x00000000002584d5
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000002584bc
- (id)emptyTextRangeAtPosition:(id)arg1;	// IMP=0x0000000000258443
@property(readonly, nonatomic) UITextRange *documentRange;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(readonly, nonatomic) NSTextStorage *textStorage;
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (unsigned long long)_textStorageLength;	// IMP=0x00000000002581e9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSTextContainer *firstTextContainer;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

