//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIKeyboardLayout.h"

@class CADisplayLink, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, TUIKeyplaneView, UIButton, UIDelayedAction, UIGestureKeyboardIntroduction, UIImageView, UIKBBackgroundView, UIKBKeyViewAnimator, UIKBKeyplaneView, UIKBRenderConfig, UIKBResizingKeyplaneCoordinator, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIKeyboardPathEffectView, UIKeyboardPinchGestureRecognizer, UIKeyboardSplitTransitionView, UISelectionFeedbackGenerator, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;
@protocol UIKeyboardKeyplaneTransitionDelegate, UIKeyboardLayoutStarDelegate, UITextCursorAssertion;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;	// 208 = 0xd0
    UIKBTree *_keyplane;	// 216 = 0xd8
    NSString *_keyboardName;	// 224 = 0xe0
    NSString *_keyplaneName;	// 232 = 0xe8
    long long _appearance;	// 240 = 0xf0
    UIKBTree *_activeKey;	// 248 = 0xf8
    UIKBTree *_inactiveLanguageIndicator;	// 256 = 0x100
    UIKBKeyplaneView *_keyplaneView;	// 264 = 0x108
    UIKBBackgroundView *_backgroundView;	// 272 = 0x110
    UIKBKeyViewAnimator *_keyViewAnimator;	// 280 = 0x118
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 288 = 0x120
    double _prevTouchUpTime;	// 296 = 0x128
    double _prevTouchUpFinishedTime;	// 304 = 0x130
    double _prevTouchDownTime;	// 312 = 0x138
    unsigned long long _prevUpActions;	// 320 = 0x140
    NSMutableDictionary *_keyboards;	// 328 = 0x148
    NSMutableDictionary *_allKeyplaneViews;	// 336 = 0x150
    NSMutableSet *_allKeyplaneKeycaps;	// 344 = 0x158
    NSMutableSet *_validInputStrings;	// 352 = 0x160
    NSString *_localizedInputKey;	// 360 = 0x168
    int _preferredTrackingChangeCount;	// 368 = 0x170
    int _shiftTrackingChangeCount;	// 372 = 0x174
    NSMutableSet *_accentInfo;	// 376 = 0x178
    NSMutableSet *_hasAccents;	// 384 = 0x180
    id _spaceTarget;	// 392 = 0x188
    SEL _spaceAction;	// 400 = 0x190
    SEL _spaceLongAction;	// 408 = 0x198
    id _returnTarget;	// 416 = 0x1a0
    SEL _returnAction;	// 424 = 0x1a8
    SEL _returnLongAction;	// 432 = 0x1b0
    id _deleteTarget;	// 440 = 0x1b8
    SEL _deleteAction;	// 448 = 0x1c0
    SEL _deleteLongAction;	// 456 = 0x1c8
    _Bool _shift;	// 464 = 0x1d0
    _Bool _autoshift;	// 465 = 0x1d1
    _Bool _settingShift;	// 466 = 0x1d2
    _Bool _holdingShift;	// 467 = 0x1d3
    _Bool _didLongPress;	// 468 = 0x1d4
    NSString *_preTouchKeyplaneName;	// 472 = 0x1d8
    _Bool _revertKeyplaneAfterTouch;	// 480 = 0x1e0
    _Bool _wasShifted;	// 481 = 0x1e1
    _Bool _swipeDetected;	// 482 = 0x1e2
    _Bool _showIntlKey;	// 483 = 0x1e3
    _Bool _showDictationKey;	// 484 = 0x1e4
    _Bool _suppressDeactivateKeys;	// 485 = 0x1e5
    _Bool _suppressShiftKeyplaneAnimation;	// 486 = 0x1e6
    _Bool _isTrackpadMode;	// 487 = 0x1e7
    _Bool _shiftLockReady;	// 488 = 0x1e8
    double _shiftLockFirstTapTime;	// 496 = 0x1f0
    UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 504 = 0x1f8
    UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 512 = 0x200
    UISwipeGestureRecognizer *_upSwipeRecognizer;	// 520 = 0x208
    UIKeyboardPinchGestureRecognizer *_pinchGestureRecognizer;	// 528 = 0x210
    UIKeyboardSplitTransitionView *_transitionView;	// 536 = 0x218
    double _initialSplitProgress;	// 544 = 0x220
    double _finalSplitProgress;	// 552 = 0x228
    double _autoSplitLastUpdate;	// 560 = 0x230
    double _autoSplitElapsedTime;	// 568 = 0x238
    CADisplayLink *_displayLink;	// 576 = 0x240
    _Bool _ghostKeysEnabled;	// 584 = 0x248
    UIDelayedAction *_delayedCentroidUpdate;	// 592 = 0x250
    _Bool _isRebuilding;	// 600 = 0x258
    long long _currentHandBias;	// 608 = 0x260
    NSString *_layoutTag;	// 616 = 0x268
    _Bool _preRotateShift;	// 624 = 0x270
    NSString *_preRotateKeyplaneName;	// 632 = 0x278
    _Bool _preRotateTrackpadMode;	// 640 = 0x280
    UIDelayedAction *_multitapAction;	// 648 = 0x288
    _Bool _unshiftAfterMultitap;	// 656 = 0x290
    int _multitapCount;	// 660 = 0x294
    UIKBTree *_multitapKey;	// 664 = 0x298
    UIView *_flickPopupView;	// 672 = 0x2a0
    NSMutableDictionary *_compositeImages;	// 680 = 0x2a8
    NSTimer *_flickPopuptimer;	// 688 = 0x2b0
    id _touchInfo;	// 696 = 0x2b8
    UIView *_dimKeyboardImageView;	// 704 = 0x2c0
    _Bool _keyboardImageViewIsDim;	// 712 = 0x2c8
    _Bool _isOutOfBounds;	// 713 = 0x2c9
    _Bool _inDealloc;	// 714 = 0x2ca
    NSMutableSet *_keysUnderIndicator;	// 720 = 0x2d0
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;	// 728 = 0x2d8
    UIKBRenderConfig *_passcodeRenderConfig;	// 736 = 0x2e0
    long long _setKeyplaneViewCount;	// 744 = 0x2e8
    _Bool _inputTraitsPreventInitialReuse;	// 752 = 0x2f0
    _Bool _settingFloat;	// 753 = 0x2f1
    NSMutableSet *_leftKeySet;	// 760 = 0x2f8
    NSMutableSet *_rightKeySet;	// 768 = 0x300
    struct CGPoint _leftDriftOffset;	// 776 = 0x308
    struct CGPoint _rightDriftOffset;	// 792 = 0x318
    NSMutableArray *_leftSideReachability;	// 808 = 0x328
    NSMutableArray *_rightSideReachability;	// 816 = 0x330
    NSNumber *_homeRowHint;	// 824 = 0x338
    double _touchDownTimeSpan;	// 832 = 0x340
    NSDate *_prevTouchMoreKeyTime;	// 840 = 0x348
    NSDate *_prevProgressiveCandidateRequestTime;	// 848 = 0x350
    NSTimer *_progressiveCandidateUpdateTimer;	// 856 = 0x358
    NSString *_lastInputMode;	// 864 = 0x360
    _Bool _pendingDictationReload;	// 872 = 0x368
    _Bool _hasPeekedGestureKey;	// 873 = 0x369
    _Bool _lastInputIsGestureKey;	// 874 = 0x36a
    UIGestureKeyboardIntroduction *_gestureKeyboardIntroduction;	// 880 = 0x370
    _Bool _dictationUsingServerManualEndpointing;	// 888 = 0x378
    _Bool _splitTransitionNeedsRebuild;	// 889 = 0x379
    NSMutableDictionary *_extendedTouchInfoMap;	// 896 = 0x380
    UIKBResizingKeyplaneCoordinator *_resizingKeyplaneCoordinator;	// 904 = 0x388
    UIButton *_biasEscapeButton;	// 912 = 0x390
    NSLayoutConstraint *_biasEscapeButtonLeftConstraint;	// 920 = 0x398
    NSLayoutConstraint *_biasEscapeButtonRightConstraint;	// 928 = 0x3a0
    NSMutableSet *_keyplaneTransformations;	// 936 = 0x3a8
    UIImageView *_pathEffectGlowView;	// 944 = 0x3b0
    UIKeyboardPathEffectView *_pathEffectView;	// 952 = 0x3b8
    NSArray *_pathEffectViewConstraints;	// 960 = 0x3c0
    _Bool _isContinuousPathUnderway;	// 968 = 0x3c8
    UIView *_keyplaneTransformationAreaView;	// 976 = 0x3d0
    _Bool _externalDictationAndInternationalKeys;	// 984 = 0x3d8
    _Bool _showsPunctuationKeysOnPrimaryKeyplane;	// 985 = 0x3d9
    TUIKeyplaneView *_liveKeyplaneView;	// 992 = 0x3e0
    _Bool _layoutSupportsCrescendo;	// 1000 = 0x3e8
    NSArray *_liveKeyplaneConstraints;	// 1008 = 0x3f0
    _Bool _preventPaddlesForPointerTouches;	// 1016 = 0x3f8
    _Bool _muteNextKeyClickSound;	// 1017 = 0x3f9
    int playKeyClickSoundOn;	// 1020 = 0x3fc
    UIKBRenderConfig *_renderConfig;	// 1024 = 0x400
    UIView *_modalDisplayView;	// 1032 = 0x408
    UISelectionFeedbackGenerator *_slideBehaviour;	// 1040 = 0x410
    id <UIKeyboardLayoutStarDelegate> _delegate;	// 1048 = 0x418
    double _lastTwoFingerTapTimestamp;	// 1056 = 0x420
    id <UITextCursorAssertion> _blinkAssertion;	// 1064 = 0x428
    id <UIKeyboardKeyplaneTransitionDelegate> _splitKeyplaneTransitionDelegate;	// 1072 = 0x430
}

+ (id)sharedPunctuationCharacterSet;	// IMP=0x0010000000ad118f
+ (id)sharedRivenKeyplaneGenerator;	// IMP=0x0010000000aaedc8
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000aa9564
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000aa9321
+ (id)keyboardFromFactoryWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000aa9059
+ (void)accessibilitySensitivityChanged;	// IMP=0x0010000000aa875f
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x0010000000aa8117
- (void).cxx_destruct;	// IMP=0x0000000000ae3ccc
@property(nonatomic) __weak id <UIKeyboardKeyplaneTransitionDelegate> splitKeyplaneTransitionDelegate; // @synthesize splitKeyplaneTransitionDelegate=_splitKeyplaneTransitionDelegate;
@property(retain, nonatomic) id <UITextCursorAssertion> blinkAssertion; // @synthesize blinkAssertion=_blinkAssertion;
@property(nonatomic) _Bool muteNextKeyClickSound; // @synthesize muteNextKeyClickSound=_muteNextKeyClickSound;
@property(nonatomic) _Bool preventPaddlesForPointerTouches; // @synthesize preventPaddlesForPointerTouches=_preventPaddlesForPointerTouches;
@property(nonatomic) double lastTwoFingerTapTimestamp; // @synthesize lastTwoFingerTapTimestamp=_lastTwoFingerTapTimestamp;
@property(nonatomic) id <UIKeyboardLayoutStarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UISelectionFeedbackGenerator *slideBehaviour; // @synthesize slideBehaviour=_slideBehaviour;
@property(retain, nonatomic) UIView *modalDisplayView; // @synthesize modalDisplayView=_modalDisplayView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)typingStyleEstimator:(id)arg1 didChangeTypingStyleEstimate:(unsigned long long)arg2;	// IMP=0x0000000000ae3925
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x0000000000ae37e6
- (_Bool)is10KeyRendering;	// IMP=0x0000000000ae376e
- (_Bool)isEmojiKeyplane;	// IMP=0x0000000000ae3729
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x0000000000ae36a8
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x0000000000ae3663
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x0000000000ae34f5
- (id)currentKeyplaneView;	// IMP=0x0000000000ae34e0
- (id)currentKeyplane;	// IMP=0x0000000000ae34cb
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x0000000000ae33a2
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x0000000000ae3038
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x0000000000ae2ea4
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;	// IMP=0x0000000000ae2c5c
- (void)switchKeyplane:(id)arg1;	// IMP=0x0000000000ae2b90
- (void)changeToKeyplane:(id)arg1;	// IMP=0x0000000000ae2ac2
- (id)keyplaneNamed:(id)arg1;	// IMP=0x0000000000ae2a3f
- (id)keyplaneForKey:(id)arg1;	// IMP=0x0000000000ae29bc
- (id)baseKeyForString:(id)arg1;	// IMP=0x0000000000ae2122
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x0000000000ae2048
- (_Bool)shouldRetestTouchDraggedFromKey:(id)arg1;	// IMP=0x0000000000ae2033
- (void)didRotate;	// IMP=0x0000000000ae1e3a
- (void)willRotate;	// IMP=0x0000000000ae1d31
- (void)updateKeyCentroids;	// IMP=0x0000000000ae13c5
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;	// IMP=0x0000000000ae0d1e
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x0000000000ae0cf5
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x0000000000ae0cb7
- (void)updateUndoKeyState;	// IMP=0x0000000000ae0bdd
- (void)setMultitapReverseKeyState;	// IMP=0x0000000000ae0a3b
- (void)updateShiftKeyState;	// IMP=0x0000000000ae01d6
- (int)stateForShiftKey:(id)arg1;	// IMP=0x0000000000adff3b
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000adff14
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000adfeed
- (_Bool)isKanaPlane;	// IMP=0x0000000000adfed0
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000adfea9
- (_Bool)ignoresShiftState;	// IMP=0x0000000000adfe82
- (_Bool)usesAutoShift;	// IMP=0x0000000000adfe5b
- (void)upActionShift;	// IMP=0x0000000000adfd3d
- (void)downActionShiftWithKey:(id)arg1;	// IMP=0x0000000000adfa23
- (void)refreshDualStringKeys;	// IMP=0x0000000000adf88c
- (unsigned long long)upActionFlagsForKey:(id)arg1;	// IMP=0x0000000000adf4d8
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000adef48
- (_Bool)keyHasAccentedVariants:(id)arg1;	// IMP=0x0000000000adeb3f
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x0000000000ade991
- (id)activeTouchInfoForShift;	// IMP=0x0000000000ade766
- (id)touchInfoForKey:(id)arg1;	// IMP=0x0000000000ade572
- (void)clearAllTouchInfo;	// IMP=0x0000000000ade417
- (void)clearInfoForTouch:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000ade338
- (void)clearInfoForTouch:(id)arg1;	// IMP=0x0000000000ade324
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000ade028
- (id)generateInfoForTouch:(id)arg1;	// IMP=0x0000000000addf4f
- (id)infoForTouch:(id)arg1;	// IMP=0x0000000000addeed
- (id)infoForTouchUUID:(id)arg1;	// IMP=0x0000000000addeb4
- (void)swipeDetected:(id)arg1;	// IMP=0x0000000000adde04
- (void)uninstallGestureRecognizers;	// IMP=0x0000000000addc65
- (void)installGestureRecognizers;	// IMP=0x0000000000addac4
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000adda9d
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000add9d0
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000add89f
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000add740
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x0000000000add287
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000add270
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000adc21e
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000adb18c
- (_Bool)shouldSendStringForFlick:(id)arg1;	// IMP=0x0000000000adafcc
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;	// IMP=0x0000000000adaebe
- (void)presentModalDisplayForKey:(id)arg1;	// IMP=0x0000000000adabf6
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;	// IMP=0x0000000000ad805c
- (void)_recordKeystrokeStatisticForKeyPress;	// IMP=0x0000000000ad7fff
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;	// IMP=0x0000000000ad7edb
- (void)handleKeyboardMenusForTouch:(id)arg1;	// IMP=0x0000000000ad7af5
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ad6d6f
- (_Bool)shouldRetestTouchUp:(id)arg1;	// IMP=0x0000000000ad6822
- (void)handleDelayedCentroidUpdate;	// IMP=0x0000000000ad66a2
- (void)cancelDelayedCentroidUpdate;	// IMP=0x0000000000ad666a
- (void)refreshGhostKeyState;	// IMP=0x0000000000ad65a4
- (_Bool)performSpaceAction;	// IMP=0x0000000000ad6543
- (_Bool)performReturnAction;	// IMP=0x0000000000ad64e2
- (void)resetPanAlternativesForEndedTouch:(id)arg1;	// IMP=0x0000000000ad644f
- (void)updatePanAlternativesForTouchInfo:(id)arg1;	// IMP=0x0000000000ad6096
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;	// IMP=0x0000000000ad5c31
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x0000000000ad5af3
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;	// IMP=0x0000000000ad4509
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ad2ef4
- (void)touchDragged:(id)arg1;	// IMP=0x0000000000ad2de5
- (_Bool)touchPassesDragThreshold:(id)arg1;	// IMP=0x0000000000ad2a76
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x0000000000ad296f
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ad2856
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000ad1ab0
- (_Bool)showGestureKeyboardIntroductionIfNeeded;	// IMP=0x0000000000ad17ec
- (_Bool)shouldShowGestureKeyboardIntroduction;	// IMP=0x0000000000ad16f9
- (id)synthesizeTouchUpEventForKey:(id)arg1;	// IMP=0x0000000000ad15d0
- (id)keyplaneNameForRevertAfterTouch;	// IMP=0x0000000000ad155d
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x0000000000ad1331
- (void)incrementPunctuationIfNeeded:(id)arg1;	// IMP=0x0000000000ad11f4
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;	// IMP=0x0000000000ad113f
- (void)touchDownWithKey:(id)arg1 withTouchInfo:(id)arg2 atPoint:(struct CGPoint)arg3 executionContext:(id)arg4;	// IMP=0x0000000000acfc50
- (void)_cleanUpBlinkAssertionIfNecessary;	// IMP=0x0000000000acfbf6
- (_Bool)isKeyScriptSwitchKey:(id)arg1;	// IMP=0x0000000000acfb70
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000acfab3
- (void)playKeyClickSoundOnUpForKey:(id)arg1;	// IMP=0x0000000000acfaa1
- (void)playKeyClickSoundOnDownForKey:(id)arg1;	// IMP=0x0000000000acfa56
- (void)playKeyClickSoundForKey:(id)arg1;	// IMP=0x0000000000acf813
- (void)playKeyReleaseSoundForKey:(id)arg1;	// IMP=0x0000000000acf6c9
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000acefc0
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000ace722
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x0000000000ace169
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ace119
- (_Bool)_pointAllowedInStaticHitBuffer:(struct CGPoint)arg1;	// IMP=0x0000000000acde54
- (double)hitBuffer;	// IMP=0x0000000000acddc3
- (struct CGRect)_paddedKeyUnionFrame;	// IMP=0x0000000000acdaec
- (_Bool)_handleTouchForEmojiInputView;	// IMP=0x0000000000acd9dc
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000acd8f3
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000acd743
- (void)_autoSplit:(id)arg1;	// IMP=0x0000000000acd601
- (void)setSplitProgress:(double)arg1;	// IMP=0x0000000000acd494
- (void)pinchHandler:(id)arg1;	// IMP=0x0000000000acd3fe
- (void)pinchDidConsumeTouch:(id)arg1;	// IMP=0x0000000000acd35b
- (void)didDetectPinchWithSeparation:(double)arg1;	// IMP=0x0000000000acd2b6
- (_Bool)pinchCanBeginWithTouches:(id)arg1 andScale:(double)arg2;	// IMP=0x0000000000accfbd
- (_Bool)pinchSplitGestureEnabled;	// IMP=0x0000000000accf7a
- (_Bool)pinchDetected;	// IMP=0x0000000000accf5d
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x0000000000accf3f
- (void)finishSplitTransitionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000accc6c
- (void)finishSplitTransition;	// IMP=0x0000000000accc58
- (void)finishSplitWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000acc80f
- (void)showSplitTransitionView:(_Bool)arg1;	// IMP=0x0000000000acc661
- (void)prepareForSplitTransition;	// IMP=0x0000000000acc516
- (id)splitTransitionDelegate;	// IMP=0x0000000000acc410
- (id)hostViewForResizingKeyplane:(id)arg1;	// IMP=0x0000000000acc407
- (void)resizeKeyplaneAndRedraw:(_Bool)arg1;	// IMP=0x0000000000acbec5
- (_Bool)keyplaneSupportsResizingGesture;	// IMP=0x0000000000acbe8c
- (_Bool)keyplaneUsesResizingOffset;	// IMP=0x0000000000acbd76
- (void)_didTapBiasEscapeButton:(id)arg1;	// IMP=0x0000000000acbcc9
- (void)_setBiasEscapeButtonVisible:(_Bool)arg1;	// IMP=0x0000000000acb59f
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x0000000000acb487
- (long long)currentHandBias;	// IMP=0x0000000000acb3c9
- (double)biasedKeyboardWidthRatio;	// IMP=0x0000000000acb34a
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint)arg2;	// IMP=0x0000000000acad8d
- (void)resetHRRLayoutState;	// IMP=0x0000000000acad4c
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x0000000000acacf7
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x0000000000acacda
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000aca8da
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000aca77a
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000aca61a
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000aca4d4
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000aca4ba
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x0000000000aca249
- (id)handRestRecognizerGetHomeRowHint;	// IMP=0x0000000000aca083
- (id)getSortedKeysForDisplayRowHint:(int)arg1;	// IMP=0x0000000000ac9d94
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000ac98cd
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000ac9677
- (void)layoutSubviews;	// IMP=0x0000000000ac95f6
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000ac95c5
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000ac95bd
- (void)fadeActivationIndicatorWithDuration:(double)arg1 withDelay:(double)arg2;	// IMP=0x0000000000ac95b7
- (id)activationIndicatorView;	// IMP=0x0000000000ac7781
- (void)setHideKeysUnderIndicator:(_Bool)arg1;	// IMP=0x0000000000ac76d2
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000ac7660
- (void)showPopupVariantsForKey:(id)arg1;	// IMP=0x0000000000ac5d78
- (void)preparePopupVariantsForKey:(id)arg1 onKeyplane:(id)arg2;	// IMP=0x0000000000ac5c87
- (id)_variantsOfCurrencyKey:(id)arg1 language:(id)arg2;	// IMP=0x0000000000ac59e4
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;	// IMP=0x0000000000ac5647
- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;	// IMP=0x0000000000ac5560
- (id)_keyplaneVariantsKeyForString:(id)arg1;	// IMP=0x0000000000ac54cc
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x0000000000ac5202
- (void)longPressAction;	// IMP=0x0000000000ac43b6
- (void)showMenu:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000ac42e7
- (_Bool)shouldShowInternationalMenuForKey:(id)arg1;	// IMP=0x0000000000ac4275
- (_Bool)isLongPressedKey:(id)arg1;	// IMP=0x0000000000ac41c8
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x0000000000ac4058
- (void)restoreDefaultsForAllKeys;	// IMP=0x0000000000ac400e
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x0000000000ac3f46
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000ac3f11
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000ac3edc
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000ac3e53
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000ac3751
- (void)updateLayoutTags;	// IMP=0x0000000000ac3023
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;	// IMP=0x0000000000ac2f6c
- (void)touchMultitapTimer;	// IMP=0x0000000000ac2e8c
- (void)cancelMultitapTimer;	// IMP=0x0000000000ac2e54
- (_Bool)isMultitapKey:(id)arg1;	// IMP=0x0000000000ac2d79
- (void)handleMultitapTimerFired;	// IMP=0x0000000000ac2bf9
- (void)multitapExpired;	// IMP=0x0000000000ac2ba7
- (void)endMultitapForKey:(id)arg1;	// IMP=0x0000000000ac2b86
- (void)multitapInterrupted;	// IMP=0x0000000000ac2990
- (_Bool)canMultitap;	// IMP=0x0000000000ac28e5
- (id)multitapForwardKeys;	// IMP=0x0000000000ac28c1
- (id)multitapCompleteKeys;	// IMP=0x0000000000ac289d
- (id)activeMultitapCompleteKey;	// IMP=0x0000000000ac2560
- (_Bool)hasAccentKey;	// IMP=0x0000000000ac251b
- (_Bool)hasCandidateKeys;	// IMP=0x0000000000ac24d6
- (id)candidateList;	// IMP=0x0000000000ac241c
- (void)logHandwritingData;	// IMP=0x0000000000ac234e
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x0000000000ac2269
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;	// IMP=0x0000000000ac2184
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 inputFlags:(int)arg3;	// IMP=0x0000000000ac1b34
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 touchInfo:(id)arg3 inputFlags:(int)arg4;	// IMP=0x0000000000ac1a62
- (id)currentRepresentedStringForDualDisplayKey:(id)arg1;	// IMP=0x0000000000ac18cb
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;	// IMP=0x0000000000ac15de
- (_Bool)isDeadkeyInput:(id)arg1;	// IMP=0x0000000000ac1571
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;	// IMP=0x0000000000ac099a
- (void)playKeyFeedbackIfNecessaryForTouchDownOnKey:(id)arg1 touchInfo:(id)arg2;	// IMP=0x0000000000ac087e
- (id)unprocessedTouchEventsForTouchInfo:(id)arg1 touchStage:(int)arg2 forcedKeyCode:(int)arg3;	// IMP=0x0000000000ac0517
- (int)keycodeForKey:(id)arg1;	// IMP=0x0000000000ac0498
- (_Bool)shouldIgnoreDistantKey;	// IMP=0x0000000000ac0405
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x0000000000ac03f0
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x0000000000ac02e8
- (id)keyHitTest:(struct CGPoint)arg1;	// IMP=0x0000000000ac0261
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;	// IMP=0x0000000000ac0142
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x0000000000abfe59
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000abfdd8
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;	// IMP=0x0000000000abfbe8
- (id)keyViewHitTestForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000abf98b
- (_Bool)shouldHitTestKey:(id)arg1;	// IMP=0x0000000000abf912
- (void)finishSliderBehaviorFeedback;	// IMP=0x0000000000abf8b8
- (void)provideSliderBehaviorFeedback;	// IMP=0x0000000000abf87b
- (void)prepareSliderBehaviorFeedback;	// IMP=0x0000000000abf7c8
- (_Bool)isTrackpadMode;	// IMP=0x0000000000abf7b8
- (void)deactivateActiveKey;	// IMP=0x0000000000abf726
- (void)deactivateActiveKeys;	// IMP=0x0000000000abf64f
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x0000000000abf46b
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;	// IMP=0x0000000000abf3cd
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;	// IMP=0x0000000000abeeab
- (_Bool)shouldUseDefaultShiftStateFromLayout;	// IMP=0x0000000000abeea3
- (void)setToInitialKeyplane;	// IMP=0x0000000000abee27
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000abee00
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000abedd9
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5 reload:(_Bool)arg6;	// IMP=0x0000000000abe96b
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5;	// IMP=0x0000000000abe94f
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000abe947
- (void)updateCachedKeyplaneKeycaps;	// IMP=0x0000000000abe697
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(_Bool)arg2;	// IMP=0x0000000000abe408
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;	// IMP=0x0000000000abe330
@property(readonly, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
- (id)keyViewAnimator;	// IMP=0x0000000000abe291
- (void)updateState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000abe22d
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000abe113
- (int)stateForKey:(id)arg1;	// IMP=0x0000000000abe0a4
- (id)viewForKey:(id)arg1;	// IMP=0x0000000000abe027
- (id)keyplaneFactory;	// IMP=0x0000000000abdfd3
- (void)refreshForDictationAvailablityDidChange;	// IMP=0x0000000000abde7a
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000abda5d
- (id)inputModeToMergeCapsLockKey;	// IMP=0x0000000000abd9ec
- (_Bool)canAddRomanSwitchKey;	// IMP=0x0000000000abd8d5
- (void)relayoutForWriteboardKey;	// IMP=0x0000000000abd708
- (void)transitionToModalContinuousPathKeyplane;	// IMP=0x0000000000abd5db
- (void)updateReturnKeysIfNeeded;	// IMP=0x0000000000abd512
- (void)updateMoreAndInternationalKeys;	// IMP=0x0000000000abcd49
- (void)recenterMonolithKeyplaneSwitchKeys;	// IMP=0x0000000000abcb17
- (void)_transformCarPlayIfNecessary;	// IMP=0x0000000000abca1a
- (void)_transformFloatingKeyboardIfNecessary;	// IMP=0x0000000000abc92d
- (void)_addResizeTransformationIfNecessary;	// IMP=0x0000000000abc840
- (void)_addExtraControlKeysIfNecessary;	// IMP=0x0000000000abc753
- (id)_currentKeyplaneTransformationContext;	// IMP=0x0000000000abc623
- (_Bool)_shouldAttemptToAddSupplementaryControlKeys;	// IMP=0x0000000000abc451
- (void)_updateSupplementaryKeys;	// IMP=0x0000000000abc032
- (void)_swapGlobeAndMoreKeysIfNecessary;	// IMP=0x0000000000abbbb8
- (_Bool)_shouldSwapGlobeAndMore;	// IMP=0x0000000000abb8c0
- (void)mergeKeysIfNeeded;	// IMP=0x0000000000abb7ed
- (id)keylistContainingKey:(id)arg1;	// IMP=0x0000000000abb4b5
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000abb284
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x0000000000abace2
- (unsigned long long)textEditingKeyMask;	// IMP=0x0000000000abaad1
- (int)stateForManipulationKey:(id)arg1;	// IMP=0x0000000000aba867
- (id)highlightedVariantListForStylingKey:(id)arg1;	// IMP=0x0000000000aba778
- (int)stateForStylingKey:(id)arg1;	// IMP=0x0000000000aba665
- (_Bool)supportStylingWithKey:(id)arg1;	// IMP=0x0000000000aba53f
- (int)stateForDictationKey:(id)arg1;	// IMP=0x0000000000aba381
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000aba376
- (int)stateForMultitapForwardKey:(id)arg1;	// IMP=0x0000000000aba364
- (int)stateForMultitapReverseKey:(id)arg1;	// IMP=0x0000000000aba278
- (int)displayTypeHintForShiftKey;	// IMP=0x0000000000aba1e8
- (int)displayTypeHintForMoreKey;	// IMP=0x0000000000aba136
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000ab9990
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000ab9325
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;	// IMP=0x0000000000ab9090
- (_Bool)_stringContainsCurrencyCharacters:(id)arg1;	// IMP=0x0000000000ab8eba
- (void)_setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000ab8afb
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000ab8a28
- (void)updateTransitionWithFlags:(unsigned long long)arg1;	// IMP=0x0000000000ab89a0
- (void)clearKeyAnnotationsIfNecessary;	// IMP=0x0000000000ab85a6
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;	// IMP=0x0000000000ab8261
- (_Bool)useUndoForMessagesWriteboard;	// IMP=0x0000000000ab81d7
- (_Bool)useDismissForMessagesWriteboard;	// IMP=0x0000000000ab7d6a
- (_Bool)ignoreWriteboard;	// IMP=0x0000000000ab7ca8
- (void)annotateKeysWithDeveloperPunctuation;	// IMP=0x0000000000ab76d7
- (void)updateStateForKey:(id)arg1;	// IMP=0x0000000000ab7248
- (void)updateAllKeyStates;	// IMP=0x0000000000ab6d6f
- (void)createLayoutFromName:(id)arg1;	// IMP=0x0000000000ab1e16
- (_Bool)useCrescendoLayout;	// IMP=0x0000000000ab1e06
- (void)reloadCurrentKeyplane;	// IMP=0x0000000000ab1d92
- (_Bool)_allowPaddle;	// IMP=0x0000000000ab1cf4
- (_Bool)_allowContinuousPathUI;	// IMP=0x0000000000ab1b66
- (_Bool)shouldIgnoreContinuousPathRequirements;	// IMP=0x0000000000ab1a82
- (_Bool)_allowStartingContinuousPathForTouchInfo:(id)arg1 alreadyActiveKeyExisting:(_Bool)arg2;	// IMP=0x0000000000ab17cb
- (unsigned long long)keyplaneShiftState;	// IMP=0x0000000000ab16cd
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x0000000000ab1672
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x0000000000ab15d0
- (struct CGSize)stretchFactor;	// IMP=0x0000000000ab13a4
- (double)stretchFactorHeight;	// IMP=0x0000000000ab120a
- (_Bool)stretchKeyboardToFitKeyplane:(id)arg1;	// IMP=0x0000000000ab10db
- (_Bool)stretchKeyboardToFit;	// IMP=0x0000000000ab10be
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x0000000000ab0f8f
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x0000000000ab0a93
- (void)updateGlobeKeyDisplayString;	// IMP=0x0000000000ab09fd
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x0000000000ab09eb
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x0000000000ab054e
- (_Bool)isResized;	// IMP=0x0000000000ab0502
- (_Bool)isResizing;	// IMP=0x0000000000ab04e5
- (_Bool)supportsEmoji;	// IMP=0x0000000000ab04dd
- (_Bool)canReuseKeyplaneView;	// IMP=0x0000000000ab02d4
- (_Bool)shouldShowDictationKey;	// IMP=0x0000000000aaff66
- (void)updateBackgroundIfNeeded;	// IMP=0x0000000000aafd35
- (void)updateBackgroundCorners;	// IMP=0x0000000000aafc93
- (_Bool)isHandwritingPlane;	// IMP=0x0000000000aafbe8
- (void)setTrackpadMode:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000aaf62d
- (void)didEndTrackpadModeForServerSideDictation;	// IMP=0x0000000000aaf617
- (void)willBeginTrackpadModeForServerSideDictation;	// IMP=0x0000000000aaf5fe
- (void)didEndIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000aaf5b1
- (_Bool)isDeveloperGestureKeybaord;	// IMP=0x0000000000aaf55b
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000aaf544
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000aaf4f9
- (void)willBeginIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000aaf4a9
- (void)willBeginIndirectSelectionGesture;	// IMP=0x0000000000aaf492
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000aaf345
- (void)didTriggerDestructiveRenderConfigChange;	// IMP=0x0000000000aaf2d4
- (void)setRenderConfig:(id)arg1 updateKeyplane:(_Bool)arg2;	// IMP=0x0000000000aaf022
- (void)traitCollectionDidChange;	// IMP=0x0000000000aaee1d
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;	// IMP=0x0000000000aaed38
- (struct CGImage *)renderedImageWithToken:(id)arg1;	// IMP=0x0000000000aae9b4
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;	// IMP=0x0000000000aae8c5
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;	// IMP=0x0000000000aae575
- (void)rebuildSplitTransitionView;	// IMP=0x0000000000aae227
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000aae21f
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(_Bool)arg2;	// IMP=0x0000000000aadf14
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000aadedc
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000aad35d
- (void)updateLocalizedDisplayStringsForKeys:(id)arg1;	// IMP=0x0000000000aac7cd
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000aac690
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;	// IMP=0x0000000000aabe43
- (void)nextToUseInputModeDidChange:(id)arg1;	// IMP=0x0000000000aabd66
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000aabcee
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;	// IMP=0x0000000000aab859
- (_Bool)canProduceString:(id)arg1;	// IMP=0x0000000000aab154
@property(readonly, nonatomic) _Bool hasActiveKeys;
- (double)lastTouchDownTimestamp;	// IMP=0x0000000000aab0d0
- (double)lastTouchUpTimestamp;	// IMP=0x0000000000aab0be
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x0000000000aaac68
- (id)keyForKeyboardName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0000000000aaabe9
- (void)updateKeyboardForKeyplane:(id)arg1;	// IMP=0x0000000000aaaa81
- (struct UIEdgeInsets)keyplanePadding;	// IMP=0x0000000000aaaa0e
- (struct CGSize)sizeForKeyplane:(id)arg1;	// IMP=0x0000000000aaa6eb
- (_Bool)allKeyplanesHaveSameHeight;	// IMP=0x0000000000aaa4e4
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000aaa242
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;	// IMP=0x0000000000aaa184
- (void)refreshForRivenPreferences;	// IMP=0x0000000000aa9fe8
- (void)tearDownSplitTransitionView;	// IMP=0x0000000000aa9f47
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000aa9d6a
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;	// IMP=0x0000000000aa9cdd
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x0000000000aa9aaa
- (id)defaultKeyplaneForKeyplane:(id)arg1;	// IMP=0x0000000000aa9a19
- (id)splitNameForKeyplane:(id)arg1;	// IMP=0x0000000000aa997b
- (id)splitNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000aa9924
- (id)defaultNameForKeyplaneName:(id)arg1;	// IMP=0x0000000000aa9901
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x0000000000aa8fe6
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000aa8d55
- (void)removeFromSuperview;	// IMP=0x0000000000aa8cc4
- (void)clearTransientState;	// IMP=0x0000000000aa8bef
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000aa883e
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000aa87c8
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000aa8778
- (void)accessibilitySensitivityChanged;	// IMP=0x0000000000aa8742
- (void)removePathEffectViewConstraintsIfNeeded;	// IMP=0x0000000000aa86f9
- (void)dealloc;	// IMP=0x0000000000aa84c8
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000aa81ab
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;	// IMP=0x0000000000ae4d0e
- (id)popupKeyViews;	// IMP=0x0000000000ae4a9e
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ae484e
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ae43ac
- (id)keyWithRepresentedString:(id)arg1;	// IMP=0x0000000000ae414c
- (id)keyplaneView:(id)arg1 containingViewForActiveKey:(id)arg2;	// IMP=0x0000000000ae6975
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x0000000000ae68ef
- (void)showPopupView:(long long)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;	// IMP=0x0000000000ae6754
- (void)setKeyboardDim:(_Bool)arg1;	// IMP=0x0000000000ae6527
- (void)setPreferredHeight:(double)arg1;	// IMP=0x0000000000ae63ae
- (void)setDisableInteraction:(_Bool)arg1;	// IMP=0x0000000000ae6363
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;	// IMP=0x0000000000ae5fa3
- (void)dismissGestureKeyboardIntroduction;	// IMP=0x0000000000ae5f61
- (void)handleDismissFlickView;	// IMP=0x0000000000ae5eef
- (void)handleDismissFlickView:(id)arg1;	// IMP=0x0000000000ae5cd2
- (void)handlePopupView;	// IMP=0x0000000000ae5bb5
- (void)handlePopupView:(id)arg1;	// IMP=0x0000000000ae5a40
- (void)showFlickView:(long long)arg1 withKey:(id)arg2 flickString:(id)arg3;	// IMP=0x0000000000ae59c1
- (_Bool)handleFlick:(id)arg1;	// IMP=0x0000000000ae54c8
- (void)populateFlickPopupsForKey:(id)arg1;	// IMP=0x0000000000ae4f67
- (id)flickStringForInputKey:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000000ae4da4
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;	// IMP=0x0000000000ae4d26
- (void)finishContinuousPathView:(_Bool)arg1;	// IMP=0x0000000000ae78db
- (void)clearContinuousPathView;	// IMP=0x0000000000ae77e6
- (void)addContinuousPathPoint:(struct CGPoint)arg1 withTimestamp:(double)arg2;	// IMP=0x0000000000ae7682
- (void)didBeginContinuousPath;	// IMP=0x0000000000ae7305
- (void)transitionToPunctuationKeysVisible:(_Bool)arg1;	// IMP=0x0000000000ae72ff
- (void)_transitionToContinuousPathState:(long long)arg1 forTouchInfo:(id)arg2;	// IMP=0x0000000000ae7262
@property(retain, nonatomic) UIKeyboardPathEffectView *pathEffectView;
- (void)didMoveToWindow;	// IMP=0x0000000000ae6ba8
- (_Bool)_continuousPathModalPunctuationPlaneEnabled;	// IMP=0x0000000000ae6afa
- (_Bool)_continuousPathSpotlightEffectEnabled;	// IMP=0x0000000000ae6aa5

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

