//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIPickerView.h"

@class NSCalendar, NSLocale, NSString, UIColor, UIDatePicker, UIFont, UILabel, _UIControlEventsGestureRecognizer, _UIDatePickerDataModel, _UIDatePickerMode, _UIDatePickerNumericKeyboardViewController, _UIDatePickerWheelsTimeLabel, _UIPassthroughScrollInteraction;

__attribute__((visibility("hidden")))
@interface _UIDatePickerView : UIPickerView
{
    long long _loadingDate;	// 216 = 0xd8
    _Bool _allowsZeroTimeInterval;	// 224 = 0xe0
    _UIDatePickerMode *_mode;	// 232 = 0xe8
    UILabel *_hourLabel;	// 240 = 0xf0
    UILabel *_minuteLabel;	// 248 = 0xf8
    int _expectedAMPM;	// 256 = 0x100
    struct {
        unsigned int staggerTimeIntervals:1;
        unsigned int loadingDateOrTime:1;
        unsigned int highlightsToday:1;
        unsigned int usesBlackChrome:1;
        unsigned int updatingWithKeyInput:1;
        unsigned int isPendingManualKeyboardPresentation:1;
        unsigned int isPresentingManualKeyboard:1;
        unsigned int selectionBarTableHidden:1;
        unsigned int receivedTextInputUpdate:1;
        unsigned int isPresentingOrDismissingKeyboard:1;
    } _datePickerFlags;	// 260 = 0x104
    _UIPassthroughScrollInteraction *_passthroughInteraction;	// 264 = 0x108
    UIDatePicker *_datePicker;	// 272 = 0x110
    _UIDatePickerDataModel *_data;	// 280 = 0x118
    _UIDatePickerNumericKeyboardViewController *_numericKeyboardViewController;	// 288 = 0x120
    _UIDatePickerWheelsTimeLabel *_timeInputLabel;	// 296 = 0x128
    _UIControlEventsGestureRecognizer *_controlEventsGestureRecognizer;	// 304 = 0x130
}

- (void).cxx_destruct;	// IMP=0x0000000000e12d9d
@property(readonly, nonatomic) _UIControlEventsGestureRecognizer *controlEventsGestureRecognizer; // @synthesize controlEventsGestureRecognizer=_controlEventsGestureRecognizer;
@property(readonly, nonatomic) _UIDatePickerWheelsTimeLabel *timeInputLabel; // @synthesize timeInputLabel=_timeInputLabel;
@property(readonly, nonatomic) _UIDatePickerNumericKeyboardViewController *numericKeyboardViewController; // @synthesize numericKeyboardViewController=_numericKeyboardViewController;
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (long long)datePickerMode;	// IMP=0x0000000000e12d0f
@property(readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont; // @dynamic hrMinFont;
- (id)_hoursStringForHour:(long long)arg1;	// IMP=0x0000000000e12c0c
- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;	// IMP=0x0000000000e12b65
- (long long)_selectionBarRowInComponent:(long long)arg1;	// IMP=0x0000000000e12b21
@property(readonly, nonatomic) struct UIEdgeInsets appliedInsetsToEdgeOfContent;
- (_Bool)hasDefaultSize;	// IMP=0x0000000000e12ab7
- (_Bool)_updateDateOrTime;	// IMP=0x0000000000e12a74
@property(readonly, nonatomic, getter=_amPmValue) long long amPmValue; // @dynamic amPmValue;
- (id)_existingLabelForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000e129f0
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000e12969
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000e1286e
@property(nonatomic) _Bool highlightsToday; // @dynamic highlightsToday;
- (_Bool)staggerTimeIntervals;	// IMP=0x0000000000e1282d
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x0000000000e1281b
- (void)presentationControllerWillDismiss:(id)arg1;	// IMP=0x0000000000e127c1
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;	// IMP=0x0000000000e12708
- (void)_dismissManualKeyboard;	// IMP=0x0000000000e1258d
- (void)_hardwareKeyboardAvailabilityChanged:(id)arg1;	// IMP=0x0000000000e124ad
- (_Bool)passthroughScrollInteractionDidRecognize:(id)arg1;	// IMP=0x0000000000e12469
- (_Bool)passthroughScrollInteraction:(id)arg1 shouldInteractAtLocation:(struct CGPoint)arg2 withEvent:(id)arg3;	// IMP=0x0000000000e12308
@property(nonatomic) _Bool passthroughInteractionEnabled;
- (void)wheelsTimeLabel:(id)arg1 didChangeVisibility:(_Bool)arg2;	// IMP=0x0000000000e12201
- (_Bool)wheelsTimeLabelShouldReceiveInteraction:(id)arg1;	// IMP=0x0000000000e120cd
- (void)_updateWheelsLabelForCurrentDateComponents;	// IMP=0x0000000000e11ffe
- (void)timeLabelDidEndEditing:(id)arg1;	// IMP=0x0000000000e11f8a
- (void)timeLabelDidBeginEditing:(id)arg1;	// IMP=0x0000000000e11f3e
- (void)timeLabelDidResignFirstResponder:(id)arg1;	// IMP=0x0000000000e11f1d
- (void)timeLabelDidFailToBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000e11ef5
- (void)timeLabelDidBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000e11bea
- (id)primaryFirstResponder;	// IMP=0x0000000000e11bd8
- (unsigned long long)_permittedArrowDirectionForKeyboardPopover;	// IMP=0x0000000000e119fa
- (void)timeLabelWillBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000e118cb
- (_Bool)timeLabelCanBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000e118b6
- (_Bool)timeLabelShouldSuppressSoftwareKeyboard:(id)arg1;	// IMP=0x0000000000e11865
- (long long)keyboardTypeForTimeLabel:(id)arg1;	// IMP=0x0000000000e11809
- (void)timeLabel:(id)arg1 didUpdateText:(id)arg2;	// IMP=0x0000000000e117f5
- (_Bool)timeLabel:(id)arg1 didReceiveText:(id)arg2;	// IMP=0x0000000000e117ed
- (void)_updateWheelsForUpdatedTextInputWithForcedUpdate:(_Bool)arg1;	// IMP=0x0000000000e11119
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000e11019
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000e10dc0
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x0000000000e10ca7
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x0000000000e10b5f
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0000000000e10ae8
- (void)controlEventsGestureRecognizer:(id)arg1 recognizedControlEvent:(unsigned long long)arg2 withEvent:(id)arg3;	// IMP=0x0000000000e109d4
- (void)_uninstallTimeInputLabelIfNeeded;	// IMP=0x0000000000e10857
- (void)_installTimeInputLabelIfNeeded;	// IMP=0x0000000000e10558
- (struct CGRect)_currentTimeInputLabelFrame;	// IMP=0x0000000000e104ce
- (id)_currentTimeFormat;	// IMP=0x0000000000e1042f
- (_Bool)_shouldInstallTimeInputLabelForDatePickerMode:(long long)arg1;	// IMP=0x0000000000e1041f
- (void)_updateTimeInputLabelConfiguration;	// IMP=0x0000000000e103c6
- (void)_hidePickerViewSelectionBarForTimeInputLabel:(_Bool)arg1;	// IMP=0x0000000000e10294
- (void)_updateTimeInputLabelPosition;	// IMP=0x0000000000e10074
- (id)_viewForSelectedRowInComponent:(long long)arg1;	// IMP=0x0000000000e0ffd9
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome;
- (void)_setHidesLabels:(_Bool)arg1;	// IMP=0x0000000000e0fe51
- (void)_resetSelectionOfTables;	// IMP=0x0000000000e0fe4b
- (void)layoutSubviews;	// IMP=0x0000000000e0fd35
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000e0fc19
- (id)shadowColor;	// IMP=0x0000000000e0fc07
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;	// IMP=0x0000000000e0faa8
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;	// IMP=0x0000000000e0fa2a
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;	// IMP=0x0000000000e0fa0d
@property(readonly, nonatomic) double contentWidth; // @dynamic contentWidth;
@property(nonatomic) double timeInterval;
- (void)_updateEnabledCellsIncludingWMDCells:(_Bool)arg1;	// IMP=0x0000000000e0f65e
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0000000000e0f64a
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;	// IMP=0x0000000000e0f327
- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000e0ef4a
- (void)_updateTextColorForCalendarUnitLabel:(id)arg1;	// IMP=0x0000000000e0eed8
- (id)_makeNewCalendarUnitLabel;	// IMP=0x0000000000e0ed9d
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;	// IMP=0x0000000000e0ed78
- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;	// IMP=0x0000000000e0e80d
- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000e0e76f
- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x0000000000e0e66b
- (void)_UIAppearance_setTextColor:(id)arg1;	// IMP=0x0000000000e0e659
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
- (void)_updateLabelColors;	// IMP=0x0000000000e0e551
- (void)_updateLabels:(_Bool)arg1;	// IMP=0x0000000000e0e454
- (_Bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;	// IMP=0x0000000000e0e273
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;	// IMP=0x0000000000e0e1bf
- (int)_selectedMinuteForColumn:(int)arg1;	// IMP=0x0000000000e0e183
- (int)_selectedHourForColumn:(int)arg1;	// IMP=0x0000000000e0e147
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;	// IMP=0x0000000000e0e0f3
- (void)_loadDateAnimated:(_Bool)arg1;	// IMP=0x0000000000e0e063
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;	// IMP=0x0000000000e0e043
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x0000000000e0db78
- (void)didChangeRoundsToMinuteInterval;	// IMP=0x0000000000e0db18
- (void)didChangeMinuteInterval;	// IMP=0x0000000000e0da5a
- (void)didChangeMode;	// IMP=0x0000000000e0d92d
- (void)_setMode:(id)arg1;	// IMP=0x0000000000e0d712
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (long long)numberOfComponentsInPickerView:(id)arg1;	// IMP=0x0000000000e0d6d8
- (void)_updateDateForNewDateRange;	// IMP=0x0000000000e0d683
- (void)didChangeMaximumDate;	// IMP=0x0000000000e0d671
- (void)didChangeMinimumDate;	// IMP=0x0000000000e0d65f
- (void)displaySelectedDateAnimated:(_Bool)arg1;	// IMP=0x0000000000e0d659
- (void)didChangeDateFrom:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000e0d44c
- (void)_updateLocaleTimeZoneOrCalendar;	// IMP=0x0000000000e0d35c
- (void)didChangeCalendar;	// IMP=0x0000000000e0d34a
- (void)didChangeTimeZone;	// IMP=0x0000000000e0d338
- (void)didChangeLocale;	// IMP=0x0000000000e0d326
@property(readonly, nonatomic) long long datePickerStyle;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;	// IMP=0x0000000000e0cb4d
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;	// IMP=0x0000000000e0cb45
- (_Bool)_showingDate;	// IMP=0x0000000000e0caf3
- (void)_doneLoadingDateOrTime;	// IMP=0x0000000000e0cacc
- (double)_tableRowHeight;	// IMP=0x0000000000e0caaf
- (void)didReset;	// IMP=0x0000000000e0ca9d
- (void)didChangeToday;	// IMP=0x0000000000e0ca58
- (void)_disableCustomKeyboardIfNecessary;	// IMP=0x0000000000e0c9d0
- (void)_enableCustomKeyboardIfNecessary;	// IMP=0x0000000000e0c94b
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x0000000000e0c8c8
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000e0c845
- (void)dealloc;	// IMP=0x0000000000e0c7d0
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000e0c5d9

// Remaining properties
@property(readonly, nonatomic) NSCalendar *calendar; // @dynamic calendar;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;

@end

