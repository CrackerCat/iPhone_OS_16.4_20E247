//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CTTelephonyNetworkInfo, NSDictionary, NSLock, NSMutableDictionary, NSRegularExpression, _NBMetadataHelper, _NBRegExMatcher;

__attribute__((visibility("hidden")))
@interface _NBPhoneNumberUtil : NSObject
{
    NSLock *_entireStringCacheLock;	// 8 = 0x8
    NSMutableDictionary *_entireStringRegexCache;	// 16 = 0x10
    NSLock *_lockPatternCache;	// 24 = 0x18
    NSMutableDictionary *_regexPatternCache;	// 32 = 0x20
    NSRegularExpression *_CAPTURING_DIGIT_PATTERN;	// 40 = 0x28
    NSRegularExpression *_VALID_ALPHA_PHONE_PATTERN;	// 48 = 0x30
    _NBMetadataHelper *_helper;	// 56 = 0x38
    _NBRegExMatcher *_matcher;	// 64 = 0x40
}

+ (void)initialize;	// IMP=0x006000000005065b
+ (id)sharedInstance;	// IMP=0x006000000004f394
- (void).cxx_destruct;	// IMP=0x000000000005c215
@property(retain, nonatomic) _NBRegExMatcher *matcher; // @synthesize matcher=_matcher;
@property(retain, nonatomic) _NBMetadataHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) NSRegularExpression *VALID_ALPHA_PHONE_PATTERN; // @synthesize VALID_ALPHA_PHONE_PATTERN=_VALID_ALPHA_PHONE_PATTERN;
@property(retain, nonatomic) NSRegularExpression *CAPTURING_DIGIT_PATTERN; // @synthesize CAPTURING_DIGIT_PATTERN=_CAPTURING_DIGIT_PATTERN;
@property(retain, nonatomic) NSMutableDictionary *regexPatternCache; // @synthesize regexPatternCache=_regexPatternCache;
@property(retain, nonatomic) NSLock *lockPatternCache; // @synthesize lockPatternCache=_lockPatternCache;
@property(retain, nonatomic) NSMutableDictionary *entireStringRegexCache; // @synthesize entireStringRegexCache=_entireStringRegexCache;
@property(retain, nonatomic) NSLock *entireStringCacheLock; // @synthesize entireStringCacheLock=_entireStringCacheLock;
- (_Bool)matchesEntirely:(id)arg1 string:(id)arg2;	// IMP=0x000000000005bfff
- (_Bool)canBeInternationallyDialled:(id)arg1;	// IMP=0x000000000005bed2
- (_Bool)canBeInternationallyDialled:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005bd86
- (_Bool)isNationalNumberSuffixOfTheOther:(id)arg1 second:(id)arg2;	// IMP=0x000000000005bc68
- (long long)isNumberMatch:(id)arg1 second:(id)arg2;	// IMP=0x000000000005b4ba
- (long long)isNumberMatch:(id)arg1 second:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005b34a
- (void)buildNationalNumberForParsing:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x000000000005b06d
- (id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(_Bool)arg3 checkRegion:(_Bool)arg4 error:(id *)arg5;	// IMP=0x000000000005a3b1
- (void)setItalianLeadingZerosForPhoneNumber:(id)arg1 phoneNumber:(id)arg2;	// IMP=0x000000000005a247
- (id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005a0bb
- (id)countryCodeByCarrier;	// IMP=0x000000000005a00a
@property(readonly, nonatomic) CTTelephonyNetworkInfo *telephonyNetworkInfo;
- (id)parseWithPhoneCarrierRegion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000059e97
- (id)parse:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000059d90
- (_Bool)checkRegionForParsing:(id)arg1 defaultRegion:(id)arg2;	// IMP=0x0000000000059d0b
- (id)maybeStripExtension:(id *)arg1;	// IMP=0x0000000000059af2
- (_Bool)maybeStripNationalPrefixAndCarrierCode:(id *)arg1 metadata:(id)arg2 carrierCode:(id *)arg3;	// IMP=0x00000000000595d4
- (long long)maybeStripInternationalPrefixAndNormalize:(id *)arg1 possibleIddPrefix:(id)arg2;	// IMP=0x000000000005949f
- (_Bool)parsePrefixAsIdd:(id)arg1 sourceString:(id *)arg2;	// IMP=0x00000000000591d7
- (_Bool)descHasPossibleNumberData:(id)arg1;	// IMP=0x0000000000059108
- (id)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id *)arg3 keepRawInput:(_Bool)arg4 phoneNumber:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000058ab3
- (id)getSupportedRegions;	// IMP=0x00000000000589f9
- (id)extractCountryCode:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x000000000005874f
- (_Bool)truncateTooLongNumber:(id)arg1;	// IMP=0x00000000000585a2
- (_Bool)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000584ee
- (long long)isPossibleNumberWithReason:(id)arg1;	// IMP=0x00000000000583c0
- (long long)isPossibleNumberWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000058272
- (long long)testNumberLength:(id)arg1 desc:(id)arg2;	// IMP=0x0000000000058050
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2 type:(long long)arg3;	// IMP=0x0000000000057af9
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000057ae0
- (_Bool)isPossibleNumber:(id)arg1;	// IMP=0x0000000000057ac6
- (_Bool)isPossibleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005797a
- (_Bool)isAlphaNumber:(id)arg1;	// IMP=0x0000000000057881
- (_Bool)isLeadingZeroPossible:(id)arg1;	// IMP=0x00000000000577df
- (_Bool)isNANPACountry:(id)arg1;	// IMP=0x00000000000575ad
- (id)getNddPrefixForRegion:(id)arg1 stripNonDigits:(_Bool)arg2;	// IMP=0x0000000000057492
- (id)getCountryCodeForValidRegion:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005733c
- (id)getCountryCodeForRegion:(id)arg1;	// IMP=0x000000000005728f
- (id)getRegionCodesForCountryCode:(id)arg1;	// IMP=0x0000000000057276
- (id)getRegionCodeForCountryCode:(id)arg1;	// IMP=0x0000000000057207
- (id)getRegionCodeForNumberFromRegionList:(id)arg1 regionCodes:(id)arg2;	// IMP=0x000000000005700e
- (id)getRegionCodeForNumber:(id)arg1;	// IMP=0x0000000000056f02
- (_Bool)isValidNumberForRegion:(id)arg1 regionCode:(id)arg2;	// IMP=0x0000000000056cf8
- (_Bool)isValidNumber:(id)arg1;	// IMP=0x0000000000056c84
- (_Bool)isNumberMatchingDesc:(id)arg1 numberDesc:(id)arg2;	// IMP=0x0000000000056b29
- (long long)getNumberTypeHelper:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000056699
- (long long)getNumberType:(id)arg1;	// IMP=0x000000000005659c
- (id)getNumberDescByType:(id)arg1 type:(long long)arg2;	// IMP=0x000000000005648b
- (id)maybeGetFormattedExtension:(id)arg1 metadata:(id)arg2 numberFormat:(long long)arg3;	// IMP=0x0000000000056282
- (id)getExampleNumberForNonGeoEntity:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000055e0f
- (id)getExampleNumberForType:(id)arg1 type:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000055c8c
- (id)getExampleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000055c75
- (id)formatNsnUsingPattern:(id)arg1 formattingPattern:(id)arg2 numberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x00000000000558f7
- (id)chooseFormattingPatternForNumber:(id)arg1 nationalNumber:(id)arg2;	// IMP=0x0000000000055623
- (id)formatNsn:(id)arg1 metadata:(id)arg2 phoneNumberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x00000000000554d7
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000054f59
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000054ddd
- (_Bool)hasFormattingPatternForNumber:(id)arg1;	// IMP=0x0000000000054ca2
- (_Bool)hasUnexpectedItalianLeadingZero:(id)arg1;	// IMP=0x0000000000054c21
- (_Bool)rawInputContainsNationalPrefix:(id)arg1 nationalPrefix:(id)arg2 regionCode:(id)arg3;	// IMP=0x0000000000054ae7
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x000000000005443e
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000542c2
- (id)prefixNumberWithCountryCallingCode:(id)arg1 phoneNumberFormat:(long long)arg2 formattedNationalNumber:(id)arg3 formattedExtension:(id)arg4;	// IMP=0x00000000000541af
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000053ccc
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000053b50
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3;	// IMP=0x0000000000053777
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000000535ee
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2;	// IMP=0x0000000000053521
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000533a5
- (id)getMetadataForRegionOrCallingCode:(id)arg1 regionCode:(id)arg2;	// IMP=0x00000000000532ce
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2;	// IMP=0x0000000000053127
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000052fab
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3;	// IMP=0x0000000000052bf1
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000052a68
- (id)format:(id)arg1 numberFormat:(long long)arg2;	// IMP=0x00000000000527a5
- (id)format:(id)arg1 numberFormat:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000052645
- (_Bool)hasValidCountryCallingCode:(id)arg1;	// IMP=0x000000000005260b
- (_Bool)isValidRegionCode:(id)arg1;	// IMP=0x00000000000524ce
- (_Bool)isNumberGeographical:(id)arg1;	// IMP=0x0000000000052428
- (_Bool)formattingRuleHasFirstGroupOnly:(id)arg1;	// IMP=0x00000000000523bc
- (id)normalizeHelper:(id)arg1 normalizationReplacements:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000052254
- (id)getCountryMobileTokenFromCountryCode:(long long)arg1;	// IMP=0x00000000000521c7
- (int)getLengthOfNationalDestinationCode:(id)arg1;	// IMP=0x0000000000051ded
- (int)getLengthOfNationalDestinationCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000051ca1
- (int)getLengthOfGeographicalAreaCode:(id)arg1;	// IMP=0x0000000000051b8c
- (int)getLengthOfGeographicalAreaCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000051a40
- (id)convertAlphaCharactersInNumber:(id)arg1;	// IMP=0x00000000000519c3
- (id)normalizeDiallableCharsOnly:(id)arg1;	// IMP=0x0000000000051943
- (id)normalizeDigitsOnly:(id)arg1;	// IMP=0x00000000000518a6
- (void)normalizeSB:(id *)arg1;	// IMP=0x000000000005186e
- (id)normalize:(id)arg1;	// IMP=0x00000000000517d1
- (_Bool)isViablePhoneNumber:(id)arg1;	// IMP=0x0000000000051748
- (id)extractPossibleNumber:(id)arg1;	// IMP=0x000000000005162e
- (void)initNormalizationMappings;	// IMP=0x0000000000050d61
@property(readonly, nonatomic) NSDictionary *DIGIT_MAPPINGS;
- (void)initRegularExpressionSet;	// IMP=0x000000000005076d
- (id)init;	// IMP=0x00000000000506a5
- (id)getNationalSignificantNumber:(id)arg1;	// IMP=0x00000000000504c0
- (_Bool)isAllDigits:(id)arg1;	// IMP=0x0000000000050418
- (id)stringByReplacingOccurrencesString:(id)arg1 withMap:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x00000000000502c4
- (_Bool)isStartingStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x00000000000500c2
- (id)matchedStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004feb7
- (id)matchesByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fdf8
- (id)matchFirstByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fcf9
- (id)replaceStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004fb02
- (id)replaceFirstStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004f9a9
- (int)indexOfStringByString:(id)arg1 target:(id)arg2;	// IMP=0x000000000004f991
- (int)stringPositionByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f818
- (id)componentsSeparatedByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f77c
- (id)regularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004f655
- (id)entireRegularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004f4bb
- (id)errorWithObject:(id)arg1 withDomain:(id)arg2;	// IMP=0x000000000004f419

@end

