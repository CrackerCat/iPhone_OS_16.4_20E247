//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface OITSUBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x0010000000272c09
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x0010000000272bfb
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x0010000000272bee
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000272be1
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x0010000000272bd4
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000272bc7
+ (unsigned long long)defaultWindingRule;	// IMP=0x0010000000272bba
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000272bad
+ (double)defaultFlatness;	// IMP=0x0010000000272b9f
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000272b91
+ (double)defaultMiterLimit;	// IMP=0x0010000000272b83
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000272b75
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0010000000272ada
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000272ab4
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x00100000002728fa
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x00100000002728d4
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x001000000027270d
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x00100000002726bb
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000272672
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0010000000272629
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x00100000002725bc
+ (id)bezierPath;	// IMP=0x00100000002725aa
+ (void)initialize;	// IMP=0x001000000027256a
+ (double)lineWidth;	// IMP=0x001000000027859d
+ (void)setLineWidth:(double)arg1;	// IMP=0x001000000027858b
+ (unsigned long long)lineJoinStyle;	// IMP=0x0010000000278579
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000278567
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000278555
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000278543
+ (unsigned long long)windingRule;	// IMP=0x0010000000278531
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x001000000027851f
+ (double)flatness;	// IMP=0x001000000027850d
+ (void)setFlatness:(double)arg1;	// IMP=0x00100000002784fb
+ (double)miterLimit;	// IMP=0x00100000002784e9
+ (void)setMiterLimit:(double)arg1;	// IMP=0x00100000002784d7
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000277b10
- (const char *)cString;	// IMP=0x00000000002777e8
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000276fc9
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000027693b
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x00000000002768b7
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x00000000002764a1
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000027648a
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x00000000002761a6
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x0000000000276085
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000275eb0
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x0000000000275e05
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000275cf4
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000275ce0
- (void)appendBezierPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x0000000000275b00
- (void)_appendToPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x00000000002759a8
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x00000000002758d3
- (long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x00000000002757f7
- (long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000275738
- (long long)elementAtIndex:(long long)arg1;	// IMP=0x0000000000275724
- (long long)elementCount;	// IMP=0x000000000027571a
- (double)lengthToElement:(long long)arg1;	// IMP=0x000000000027566a
- (double)lengthOfElement:(long long)arg1;	// IMP=0x0000000000275635
- (double)length;	// IMP=0x0000000000275607
- (void)calculateLengths;	// IMP=0x0000000000275560
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x00000000002754b4
- (_Bool)isClockwise;	// IMP=0x000000000027529d
- (_Bool)isFlat;	// IMP=0x000000000027528c
- (struct CGRect)bounds;	// IMP=0x0000000000275203
- (struct CGRect)controlPointBounds;	// IMP=0x000000000027509c
- (struct CGPoint)currentPoint;	// IMP=0x000000000027503c
- (_Bool)isEmpty;	// IMP=0x000000000027502e
- (_Bool)isCircular;	// IMP=0x0000000000274e58
- (_Bool)isRectangular;	// IMP=0x0000000000274adc
- (_Bool)isDiamond;	// IMP=0x0000000000274891
- (_Bool)isTriangular;	// IMP=0x0000000000274736
- (struct CGPath *)CGPath;	// IMP=0x00000000002746f8
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x00000000002745a8
- (id)p_bezierPathByRemovingRedundantElementAndSubregionsSmallerThanThreshold:(double)arg1;	// IMP=0x00000000002740bf
- (id)bezierPathByRemovingRedundantElements;	// IMP=0x00000000002740aa
- (id)bezierPathByRemovingSmallSubpathsForInteriorWrapsForInset:(double)arg1;	// IMP=0x0000000000274094
- (id)bezierPathByReversingPath;	// IMP=0x0000000000273ebf
- (id)_copyFlattenedPath;	// IMP=0x0000000000273e8a
- (id)bezierPathByFlatteningPathWithFlatness:(double)arg1;	// IMP=0x0000000000273e16
- (id)bezierPathByFlatteningPath;	// IMP=0x0000000000273dfc
- (void)flattenIntoPath:(id)arg1 flatness:(double)arg2;	// IMP=0x0000000000273cc6
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000273cac
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x0000000000273af4
- (void)addClip;	// IMP=0x00000000002739d0
- (void)fill;	// IMP=0x00000000002738ac
- (void)stroke;	// IMP=0x000000000027373c
- (void)_doPath;	// IMP=0x000000000027358f
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;	// IMP=0x000000000027352b
- (_Bool)_isValid:(double)arg1;	// IMP=0x00000000002734f9
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x00000000002734a4
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000002733ca
- (void)setFlatness:(double)arg1;	// IMP=0x00000000002733bf
- (double)flatness;	// IMP=0x00000000002733b4
- (void)setMiterLimit:(double)arg1;	// IMP=0x00000000002733a9
- (double)miterLimit;	// IMP=0x000000000027339e
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0000000000273382
- (unsigned long long)windingRule;	// IMP=0x0000000000273370
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0000000000273354
- (unsigned long long)lineJoinStyle;	// IMP=0x0000000000273342
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0000000000273328
- (unsigned long long)lineCapStyle;	// IMP=0x0000000000273316
- (void)setLineWidth:(double)arg1;	// IMP=0x000000000027330b
- (double)lineWidth;	// IMP=0x0000000000273300
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x000000000027327e
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000273234
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002731ea
- (void)removeAllPoints;	// IMP=0x0000000000273189
- (void)closePath;	// IMP=0x0000000000273177
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000002730de
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000273070
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027305e
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000027300c
- (void)copyPathAttributesTo:(id)arg1;	// IMP=0x0000000000272f16
- (unsigned long long)hash;	// IMP=0x0000000000272f04
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000272d6a
- (void)dealloc;	// IMP=0x0000000000272cda
- (id)init;	// IMP=0x0000000000272c17
- (void)_deviceClosePath;	// IMP=0x0000000000278397
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000278236
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002781fe
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000278171
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x0000000000277fdf
- (id)description;	// IMP=0x00000000002785af
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x000000000028e598
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x000000000028e0a8
- (void)attachBezierPath:(id)arg1;	// IMP=0x00000000003689f4

@end

