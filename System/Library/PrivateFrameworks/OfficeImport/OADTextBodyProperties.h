//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class OADTextBodyAutoFit, OADTextWarp;

__attribute__((visibility("hidden")))
@interface OADTextBodyProperties
{
    OADTextBodyAutoFit *mAutoFit;	// 24 = 0x18
    OADTextWarp *mTextWarp;	// 32 = 0x20
    float mTopInset;	// 40 = 0x28
    float mLeftInset;	// 44 = 0x2c
    float mBottomInset;	// 48 = 0x30
    float mRightInset;	// 52 = 0x34
    float mRotation;	// 56 = 0x38
    float mColumnSpacing;	// 60 = 0x3c
    unsigned short mColumnCount;	// 64 = 0x40
    unsigned short mTextBodyId;	// 66 = 0x42
    unsigned char mTextAnchorType;	// 68 = 0x44
    unsigned char mFlowType;	// 69 = 0x45
    unsigned char mWrapType;	// 70 = 0x46
    unsigned char mVerticalOverflowType;	// 71 = 0x47
    unsigned char mHorizontalOverflowType;	// 72 = 0x48
    unsigned int mRepectFirstLastParagraphSpacing:1;	// 73 = 0x49
    unsigned int mIsUpright:1;	// 73 = 0x49
    unsigned int mIsAnchorCenter:1;	// 73 = 0x49
    unsigned int mIsLeftToRightColumns:1;	// 73 = 0x49
    unsigned int mHasVerticalOverflowType:1;	// 73 = 0x49
    unsigned int mHasHorizontalOverflowType:1;	// 73 = 0x49
    unsigned int mHasTextBodyId:1;	// 73 = 0x49
    unsigned int mHasFlowType:1;	// 73 = 0x49
    unsigned int mHasWrapType:1;	// 74 = 0x4a
    unsigned int mHasTextAnchorType:1;	// 74 = 0x4a
    unsigned int mHasIsAnchorCenter:1;	// 74 = 0x4a
    unsigned int mHasIsUpright:1;	// 74 = 0x4a
    unsigned int mHasRotation:1;	// 74 = 0x4a
    unsigned int mHasColumnCount:1;	// 74 = 0x4a
    unsigned int mHasColumnSpacing:1;	// 74 = 0x4a
    unsigned int mHasIsLeftToRightColumns:1;	// 74 = 0x4a
    unsigned int mHasRepectFirstLastParagraphSpacing:1;	// 75 = 0x4b
    unsigned int mHasTopInset:1;	// 75 = 0x4b
    unsigned int mHasLeftInset:1;	// 75 = 0x4b
    unsigned int mHasRightInset:1;	// 75 = 0x4b
    unsigned int mHasBottomInset:1;	// 75 = 0x4b
}

+ (id)defaultEscherWordArtProperties;	// IMP=0x006000000015260a
+ (id)defaultProperties;	// IMP=0x006000000001f12b
- (void).cxx_destruct;	// IMP=0x00000000003284d8
- (id)description;	// IMP=0x000000000032849a
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000327b77
- (unsigned long long)hash;	// IMP=0x000000000032795d
- (void)removeUnnecessaryOverrides;	// IMP=0x000000000002e353
- (void)fixPropertiesForChangingParentPreservingEffectiveValues:(id)arg1;	// IMP=0x0000000000326c9c
- (void)setRotation:(float)arg1;	// IMP=0x000000000001f5e7
- (float)rotation;	// IMP=0x000000000002f5cd
- (_Bool)hasRotation;	// IMP=0x000000000002f5a7
- (void)setIsUpright:(_Bool)arg1;	// IMP=0x000000000001f5c2
- (_Bool)isUpright;	// IMP=0x000000000002f564
- (_Bool)hasIsUpright;	// IMP=0x000000000002f53e
- (void)setTextAnchorType:(unsigned char)arg1;	// IMP=0x000000000001f5a7
- (unsigned char)textAnchorType;	// IMP=0x000000000002f4ff
- (_Bool)hasTextAnchorType;	// IMP=0x000000000002f4d9
- (void)setIsAnchorCenter:(_Bool)arg1;	// IMP=0x000000000001f581
- (_Bool)isAnchorCenter;	// IMP=0x000000000002f495
- (_Bool)hasIsAnchorCenter;	// IMP=0x000000000002f46f
- (_Bool)isWarped;	// IMP=0x00000000003269bd
- (void)setTextWarp:(id)arg1;	// IMP=0x000000000001f56d
- (id)textWarp;	// IMP=0x0000000000152d5c
- (_Bool)hasTextWarp;	// IMP=0x000000000002f448
- (void)setTextBodyId:(int)arg1;	// IMP=0x00000000003269a1
- (int)textBodyId;	// IMP=0x0000000000326990
- (_Bool)hasTextBodyId;	// IMP=0x000000000002f433
- (void)setHorizontalOverflowType:(unsigned char)arg1;	// IMP=0x000000000001f552
- (unsigned char)horizontalOverflowType;	// IMP=0x0000000000326951
- (_Bool)hasHorizontalOverflowType;	// IMP=0x000000000032692b
- (void)setVerticalOverflowType:(unsigned char)arg1;	// IMP=0x000000000001f537
- (unsigned char)verticalOverflowType;	// IMP=0x000000000002f3f4
- (_Bool)hasVerticalOverflowType;	// IMP=0x000000000002f3ce
- (void)setWrapType:(unsigned char)arg1;	// IMP=0x000000000001f51c
- (unsigned char)wrapType;	// IMP=0x000000000002f38f
- (_Bool)hasWrapType;	// IMP=0x000000000002f369
- (void)setFlowType:(unsigned char)arg1;	// IMP=0x000000000001f501
- (unsigned char)flowType;	// IMP=0x000000000002f32a
- (_Bool)hasFlowType;	// IMP=0x000000000002f304
- (void)setAutoFit:(id)arg1;	// IMP=0x000000000001f4ed
- (id)autoFit;	// IMP=0x000000000002f235
- (_Bool)hasAutoFit;	// IMP=0x000000000002f20e
- (void)setIsLeftToRightColumns:(_Bool)arg1;	// IMP=0x000000000001f48c
- (_Bool)isLeftToRightColumns;	// IMP=0x000000000002f1ca
- (_Bool)hasIsLeftToRightColumns;	// IMP=0x000000000002f1a4
- (void)setColumnSpacing:(float)arg1;	// IMP=0x000000000001f46f
- (float)columnSpacing;	// IMP=0x000000000002f15b
- (_Bool)hasColumnSpacing;	// IMP=0x000000000002f135
- (void)setColumnCount:(int)arg1;	// IMP=0x000000000001f453
- (int)columnCount;	// IMP=0x000000000002f0f6
- (_Bool)hasColumnCount;	// IMP=0x000000000002f0d0
- (void)setRightInset:(float)arg1;	// IMP=0x000000000001f436
- (float)rightInset;	// IMP=0x000000000002f018
- (void)setBottomInset:(float)arg1;	// IMP=0x000000000001f419
- (float)bottomInset;	// IMP=0x000000000002f087
- (void)setLeftInset:(float)arg1;	// IMP=0x000000000001f3fc
- (float)leftInset;	// IMP=0x000000000002efa9
- (void)setTopInset:(float)arg1;	// IMP=0x000000000001f3df
- (float)topInset;	// IMP=0x000000000002ef3a
- (_Bool)hasBottomInset;	// IMP=0x000000000002f061
- (_Bool)hasRightInset;	// IMP=0x000000000002eff2
- (_Bool)hasLeftInset;	// IMP=0x000000000002ef83
- (_Bool)hasTopInset;	// IMP=0x000000000002ef14
- (void)setRespectLastFirstLineSpacing:(_Bool)arg1;	// IMP=0x000000000001f3bc
- (_Bool)respectLastFirstLineSpacing;	// IMP=0x00000000003268ea
- (_Bool)hasRespectLastFirstLineSpacing;	// IMP=0x000000000002eeee
- (id)initWithDefaults;	// IMP=0x000000000001f15b
- (id)init;	// IMP=0x000000000001f0fc

@end

