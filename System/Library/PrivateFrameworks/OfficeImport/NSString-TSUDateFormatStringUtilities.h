//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSString.h>

@interface NSString (TSUDateFormatStringUtilities)
+ (id)tsu_numberSymbols;	// IMP=0x002000000025d6e5
+ (id)tsu_stringByHexEncodingData:(id)arg1;	// IMP=0x0020000000268723
+ (id)tsu_stringWithXMLString:(const char *)arg1;	// IMP=0x002000000026832b
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;	// IMP=0x0020000000267f38
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0020000000267f1c
+ (id)tsu_stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0020000000267e8c
+ (id)tsu_stringByIndentingString:(id)arg1;	// IMP=0x00200000002655fd
+ (id)tsu_stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;	// IMP=0x00200000002654c3
+ (id)tsu_stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x0020000000265467
+ (id)tsu_stringWithUUID;	// IMP=0x002000000026542d
+ (id)tsu_localizedDisplayNameWithPersonNameComponents:(id)arg1;	// IMP=0x0020000000269742
+ (id)tsu_fogFilenameFromShareToken:(id)arg1;	// IMP=0x002000000026a0d6
+ (id)tsu_fogShareTokenFromFileURL:(id)arg1;	// IMP=0x0020000000269f97
+ (id)tsu_customNumberFormatDecimalFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;	// IMP=0x00200000002866ba
+ (id)tsu_customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x002000000028663d
+ (id)tsu_customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x00200000002865ab
+ (id)tsu_customNumberFormatIntegerFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x0020000000286486
+ (id)tsu_customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;	// IMP=0x00200000002863ed
+ (id)tsu_customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3 locale:(id)arg4;	// IMP=0x002000000028626a
+ (id)tsu_customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;	// IMP=0x0020000000285ddd
+ (id)tc_stringByFixingUnpairedSurrogateCharactersInString:(id)arg1;	// IMP=0x00200000002dbd9c
+ (_Bool)tc_fixUnpairedSurrogateCharactersInBuffer:(void *)arg1;	// IMP=0x00200000002dbd2e
+ (id)tc_stringWithXmlString:(const char *)arg1;	// IMP=0x00200000002dc439
+ (id)stringWithOcText:(const struct OcText *)arg1;	// IMP=0x00200000000aefce
+ (id)stringWithCsString:(const struct CsString *)arg1;	// IMP=0x0020000000017a5a
+ (_Bool)tc_skipString:(id)arg1;	// IMP=0x0020000000372c95
+ (id)tc_mapString:(id)arg1;	// IMP=0x0020000000372b07
- (id)tsu_stringByReplacing2DigitYearStringWith4DigitYearString;	// IMP=0x001000000024a16a
- (id)tsu_stringByReplacing4DigitYearStringWith2DigitYearString;	// IMP=0x001000000024a0fc
- (id)tsu_prefixOfNumberFormatSubpattern;	// IMP=0x001000000025e09b
- (unsigned long long)tsu_indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;	// IMP=0x001000000025deef
- (id)tsu_suffixOfNumberFormatSubpattern;	// IMP=0x001000000025debd
- (unsigned long long)tsu_indexOfLastNonSuffixCharacterInNumberFormatSubpattern;	// IMP=0x001000000025dd51
- (id)tsu_numberPortionOfNumberFormatSubpattern;	// IMP=0x001000000025dd00
- (id)tsu_negativeSubpatternOfNumberFormatPattern;	// IMP=0x001000000025dca6
- (id)tsu_positiveSubpatternOfNumberFormatPattern;	// IMP=0x001000000025dc4d
- (unsigned long long)tsu_indexOfNumberFormatSubpatternSeparator;	// IMP=0x001000000025da75
- (id)tsu_stringByRemovingEscapedCharactersFromNumberFormatPattern;	// IMP=0x001000000025d936
- (id)tsu_newRangesOfEscapedCharactersInNumberFormatPattern;	// IMP=0x001000000025d7e2
- (_Bool)tsu_isNumberFormatPattern;	// IMP=0x001000000025d751
- (id)tsu_stringWithNormalizedQuotationMarks;	// IMP=0x0010000000269021
- (id)tsu_stringWithNormalizedHyphens;	// IMP=0x0010000000268f99
- (id)tsu_stringWithNormalizedHyphensAndQuotationMarks;	// IMP=0x0010000000268f49
- (_Bool)tsu_isEqualToString:(id)arg1;	// IMP=0x0010000000268f2e
- (id)tsu_middleTruncateToLength:(unsigned long long)arg1;	// IMP=0x0010000000268e84
- (id)tsu_stringWithoutAttachmentCharacters;	// IMP=0x0010000000268dea
- (id)tsu_setOfContainedWordsIncludingPunctuationAndSymbols:(_Bool)arg1;	// IMP=0x0010000000268a73
- (_Bool)tsu_containsSubstring:(id)arg1;	// IMP=0x0010000000268a50
- (void)tsu_enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000026890b
- (struct _NSRange)tsu_range;	// IMP=0x00100000002688f3
- (struct _NSRange)tsu_rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;	// IMP=0x00100000002687fd
- (id)tsu_tolerantStringByAppendingPathExtension:(id)arg1;	// IMP=0x0010000000268576
- (_Bool)tsu_containsOnlyCharactersFromSet:(id)arg1;	// IMP=0x0010000000268513
- (id)tsu_unescapeXML;	// IMP=0x001000000026842e
- (id)tsu_escapeXML;	// IMP=0x0010000000268349
- (id)tsu_stringByMakingFirstCharacterUppercase;	// IMP=0x0010000000268288
- (id)tsu_stringByMakingFirstCharacterLowercase;	// IMP=0x001000000026818c
- (id)tsu_encodeStringBase64;	// IMP=0x0010000000268138
- (id)tsu_stringByTrimmingCharactersInSetFromFront:(id)arg1;	// IMP=0x0010000000267df9
- (id)tsu_stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;	// IMP=0x0010000000267b60
- (id)tsu_stringWithPathRelativeTo:(id)arg1;	// IMP=0x001000000026793a
- (id)tsu_substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;	// IMP=0x001000000026782d
- (id)tsu_substringWithComposedCharacterSequencesTruncatedToLength:(unsigned long long)arg1;	// IMP=0x00100000002677bf
- (id)tsu_stringWithRealpath;	// IMP=0x0010000000267753
- (_Bool)tsu_isChildOfPath:(id)arg1;	// IMP=0x00100000002674ab
- (_Bool)tsu_isDescendantOfPath:(id)arg1;	// IMP=0x0010000000267319
- (id)tsu_escapeForIcuRegex;	// IMP=0x0010000000266fce
- (unsigned long long)tsu_countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0010000000266ef4
- (id)tsu_stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;	// IMP=0x0010000000266cb2
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1;	// IMP=0x0010000000266c9e
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;	// IMP=0x0010000000266a66
- (id)tsu_md5Hash;	// IMP=0x00100000002668a5
- (id)tsu_stringByFixingBrokenSurrogatePairs;	// IMP=0x0010000000266593
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;	// IMP=0x00100000002662aa
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1;	// IMP=0x0010000000266291
- (id)tsu_stringByAddingCSVEscapesForLocale:(id)arg1;	// IMP=0x0010000000266033
- (id)tsu_stringByAppendingSeparator:(id)arg1 format:(id)arg2;	// IMP=0x0010000000265ef5
- (id)tsu_stringQuotedIfContainsCharacterSet:(id)arg1;	// IMP=0x0010000000265e19
- (id)tsu_stringByExpandingTableFormatting;	// IMP=0x0010000000265614
- (_Bool)tsu_isLegalEmailAddress;	// IMP=0x0010000000269368
- (id)tsu_uncommentedAddressRespectingGroups;	// IMP=0x00100000002692e5
- (id)tsu_uncommentedAddress;	// IMP=0x00100000002690a9
- (_Bool)tsu_isCJKString;	// IMP=0x00100000002694bd
- (id)tsu_sha256HexHashString;	// IMP=0x00100000002698ff
- (long long)tsu_compareToVersionString:(id)arg1;	// IMP=0x00100000002699f3
- (unsigned long long)tsu_numberOfKeysInKeyPath;	// IMP=0x0010000000269f1e
- (id)tsu_lastKey;	// IMP=0x0010000000269eaa
- (id)tsu_firstKey;	// IMP=0x0010000000269e39
- (id)tsu_keyPathByAppendingKey:(id)arg1;	// IMP=0x0010000000269d81
- (id)tsu_keyPathByPrependingKey:(id)arg1;	// IMP=0x0010000000269cc9
- (id)tsu_keyPathByRemovingFirstKey;	// IMP=0x0010000000269c63
- (id)tsu_keyPathByRemovingLastKey;	// IMP=0x0010000000269c00
- (id)tsu_initUnRedactedWithFormat:(id)arg1;	// IMP=0x001000000026a623
- (id)tsu_initRedactedWithFormat:(id)arg1;	// IMP=0x001000000026a564
- (id)tsu_initUnRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026a489
- (id)tsu_initRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026a200
- (unsigned short)tsu_spaceCharacterInCustomNumberFormatSpaceToken;	// IMP=0x0010000000286859
- (unsigned short)tsu_scaleCharacterInCustomNumberFormatScaleToken;	// IMP=0x0010000000286842
- (id)tsu_formatStringFromCustomNumberFormatScaleToken;	// IMP=0x001000000028682b
- (int)tsu_fractionAccuracyFromCustomNumberFormatFractionToken;	// IMP=0x00100000002867fb
- (id)tsu_currencyCodeFromCustomNumberFormatCurrencyToken;	// IMP=0x00100000002867aa
- (id)tsu_digitPlaceholderStringInDigitToken;	// IMP=0x001000000028673a
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatDecimalToken;	// IMP=0x00100000002864e7
- (id)tsu_stringByInsertingFormatGroupingSeparators:(id)arg1;	// IMP=0x00100000002860e5
- (_Bool)tsu_customFormatIntegerTokenUsesSeparator;	// IMP=0x0010000000286009
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatIntegerToken;	// IMP=0x0010000000285ef8
- (_Bool)tsu_isSpecialCustomNumberFormatTokenOfType:(int)arg1;	// IMP=0x0010000000285e83
- (_Bool)tsu_isSpecialCustomNumberFormatToken;	// IMP=0x0010000000285e3f
- (void)sfu_appendJsonStringToString:(id)arg1;	// IMP=0x001000000029bf03
- (_Bool)tsu_pathExtensionConformsToUTI:(id)arg1;	// IMP=0x001000000029d3de
- (_Bool)tsu_pathConformsToUTI:(id)arg1;	// IMP=0x001000000029d3ad
@property(readonly, nonatomic) NSString *tsu_pathUTI;
@property(readonly, nonatomic) NSString *tsu_UTIFilenameExtension;
- (_Bool)tsu_conformsToAnyUTI:(id)arg1;	// IMP=0x001000000029d188
- (_Bool)tsu_conformsToUTI:(id)arg1;	// IMP=0x001000000029d16d
- (const char *)nulTerminatedUTF8;	// IMP=0x00100000002dbd14
- (_Bool)tc_doesURLHostContainWhitespace;	// IMP=0x00100000002dbbd5
- (_Bool)tc_startsWithString:(id)arg1;	// IMP=0x00100000002dbbb4
- (id)tc_stringByRemovingInvalidXmlChars;	// IMP=0x00100000002dca4d
- (_Bool)tc_isEqualToXmlString:(const char *)arg1;	// IMP=0x00100000002dc9df
- (id)tc_componentsSeparatedByWhitespace;	// IMP=0x00100000002dc797
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 nsWithFallbackNs:(id)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002dc66b
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002dc5e1
- (id)tc_initWithContentOfXmlNode:(struct _xmlNode *)arg1;	// IMP=0x00100000002dc54a
- (id)tc_initWithValueOfXmlAttribute:(struct _xmlAttr *)arg1;	// IMP=0x00100000002dc482
- (const char *)tc_xmlString;	// IMP=0x00100000002dc468
- (id)tc_initWithXmlString:(const char *)arg1;	// IMP=0x00100000002dc426
- (void)copyToOcText:(struct OcText *)arg1 encoding:(int)arg2;	// IMP=0x001000000017fd88
- (void)copyToOcText:(struct OcText *)arg1;	// IMP=0x001000000017fd71
- (void)copyToCsString:(struct CsString *)arg1;	// IMP=0x001000000034ecd7
- (id)dataUsingWordEncoding:(int)arg1;	// IMP=0x001000000017fe84
- (id)initWithOcText:(const struct OcText *)arg1;	// IMP=0x00100000000af005
- (id)initWithCsString:(const struct CsString *)arg1;	// IMP=0x0010000000014f52
- (unsigned short *)cWideString;	// IMP=0x00100000003729d1
- (id)tc_escapedFragment;	// IMP=0x00100000003731a9
- (id)tc_escapedPath;	// IMP=0x0010000000373182
- (int)tc_languageTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;	// IMP=0x0010000000372fae
- (id)tc_initialsFromAuthorName;	// IMP=0x0010000000372d69
- (id)getDataUsingOfficeCryptographicEncoding;	// IMP=0x00100000003771a5
- (int)tc_fontTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 forXML:(_Bool)arg3;	// IMP=0x0010000000415248
- (int)fontTypeForCharacter:(unsigned short)arg1 isControl:(_Bool *)arg2;	// IMP=0x0010000000415199
- (id)CM_stringByAddingCSSEscapes;	// IMP=0x0010000000463565
- (id)copyCsvRows:(unsigned long long *)arg1;	// IMP=0x0010000000471e55
- (id)_copyCsvRows:(unsigned long long *)arg1 usingDelimiter:(id)arg2 columnCountIsConstant:(_Bool *)arg3;	// IMP=0x001000000047183d
- (struct _NSRange)oi_rangeOfCharactersFromSet:(id)arg1 index:(int)arg2;	// IMP=0x00100000000f1b60
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;	// IMP=0x00100000000ab436
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2;	// IMP=0x00100000000ab41e
@end

