//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface CMShapeUtils : NSObject
{
}

+ (int)radToFixedPointDeg:(double)arg1;	// IMP=0x008000000046500a
+ (double)fixedPointDegToRad:(int)arg1;	// IMP=0x0080000000464ff8
+ (float)fontSizeForText:(id)arg1 insideRectangle:(struct CGSize)arg2;	// IMP=0x00800000001e7317
+ (float)intersectionAngleNextToAngle:(float)arg1 isAfter:(_Bool)arg2 nodeSize:(struct CGSize)arg3;	// IMP=0x00800000002299b4
+ (double)getFormulaResultFromCustomGeometry:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00800000001608bc
+ (double)mapFormulaOfType:(int)arg1 argValues:(double *)arg2 isEscher:(_Bool)arg3;	// IMP=0x0080000000160d43
+ (double)mapAdjustCoord:(struct OADAdjustCoord)arg1 geometry:(id)arg2;	// IMP=0x0080000000155254
+ (id)transformedBoundsWithBounds:(id)arg1 transform:(id)arg2;	// IMP=0x0080000000222e00
+ (id)relatvieBoundsWithAbsoluteInnerBounds:(id)arg1 parentBounds:(id)arg2;	// IMP=0x00800000001e5bd2
+ (id)internalBoundsWithBounds:(id)arg1 scaleBounds:(struct CGRect)arg2;	// IMP=0x00800000001e73ab
+ (id)inscribedBoundsWithBounds:(id)arg1 logicalBounds:(struct CGRect)arg2;	// IMP=0x00800000001e58c7
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)arg1 parentOrientedBounds:(id)arg2 parentLogicalBounds:(struct CGRect)arg3;	// IMP=0x0080000000464cf3
+ (id)transformFromBounds:(struct CGRect)arg1 toOrientedBounds:(id)arg2;	// IMP=0x0080000000109f38
+ (struct CGRect)transformRect:(struct CGRect)arg1 scale:(float)arg2 offsetX:(float)arg3 offsetY:(float)arg4;	// IMP=0x0080000000213f42
+ (float)scaleFactorFromLength:(float)arg1 toLength:(float)arg2;	// IMP=0x008000000010a325
+ (void)setCoordSpaceForCustomeGeometry:(id)arg1 fromSize:(struct CGSize)arg2;	// IMP=0x00800000001d9f52
+ (_Bool)isShapeALine:(id)arg1;	// IMP=0x008000000015598a
+ (int)mapFormulaKeywordValue:(int)arg1 geometry:(id)arg2;	// IMP=0x0080000000160bd0
+ (float)normalizedAngle:(float)arg1;	// IMP=0x0080000000229d68
+ (int)radToMilliMinutes:(double)arg1;	// IMP=0x0080000000465062
+ (double)milliMinutesToRad:(int)arg1;	// IMP=0x00800000001d9fb0
+ (int)radToNativeAngle:(double)arg1 isEscher:(_Bool)arg2;	// IMP=0x008000000046503e
+ (double)nativeAngleToRad:(int)arg1 isEscher:(_Bool)arg2;	// IMP=0x00800000001d9f8c

@end

