//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface AKTSDBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x0010000000044c19
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x0010000000044c0b
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x0010000000044bfe
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000044bf1
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x0010000000044be4
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000044bd7
+ (unsigned long long)defaultWindingRule;	// IMP=0x0010000000044bca
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000044bbd
+ (double)defaultFlatness;	// IMP=0x0010000000044baf
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000044ba1
+ (double)defaultMiterLimit;	// IMP=0x0010000000044b93
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000044b85
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0010000000044aea
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000044ac4
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x001000000004490a
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x00100000000448e4
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x001000000004475f
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0010000000044757
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000044702
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x00100000000446ad
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0010000000044634
+ (id)bezierPath;	// IMP=0x0010000000044622
+ (void)initialize;	// IMP=0x00100000000445e2
+ (double)lineWidth;	// IMP=0x0010000000048f69
+ (void)setLineWidth:(double)arg1;	// IMP=0x0010000000048f57
+ (unsigned long long)lineJoinStyle;	// IMP=0x0010000000048f45
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000048f33
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000048f21
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000048f0f
+ (unsigned long long)windingRule;	// IMP=0x0010000000048efd
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000048eeb
+ (double)flatness;	// IMP=0x0010000000048ed9
+ (void)setFlatness:(double)arg1;	// IMP=0x0010000000048ec7
+ (double)miterLimit;	// IMP=0x0010000000048eb5
+ (void)setMiterLimit:(double)arg1;	// IMP=0x0010000000048ea3
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000048714
- (const char *)cString;	// IMP=0x00000000000484d4
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000047c6c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000047623
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x000000000004759f
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x0000000000047189
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x0000000000047172
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x0000000000046e7a
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x0000000000046d59
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000046b84
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x0000000000046ad9
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x00000000000469c8
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000046834
- (void)_appendToPath:(id)arg1;	// IMP=0x0000000000046706
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x0000000000046616
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046520
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046445
- (unsigned long long)elementAtIndex:(long long)arg1;	// IMP=0x0000000000046431
- (long long)elementCount;	// IMP=0x0000000000046427
- (double)lengthToElement:(long long)arg1;	// IMP=0x00000000000463da
- (double)lengthOfElement:(long long)arg1;	// IMP=0x00000000000463a5
- (double)length;	// IMP=0x0000000000046377
- (void)calculateLengths;	// IMP=0x00000000000462a8
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x00000000000461fc
- (_Bool)isClockwise;	// IMP=0x0000000000045fe2
- (_Bool)isFlat;	// IMP=0x0000000000045f56
- (struct CGRect)bounds;	// IMP=0x0000000000045ee7
- (struct CGRect)controlPointBounds;	// IMP=0x0000000000045d83
- (struct CGPoint)currentPoint;	// IMP=0x0000000000045d23
- (_Bool)isEmpty;	// IMP=0x0000000000045d15
- (struct CGPath *)CGPath;	// IMP=0x0000000000045cf1
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000045c00
- (id)bezierPathByReversingPath;	// IMP=0x0000000000045a2b
- (id)_copyFlattenedPath;	// IMP=0x00000000000459f6
- (id)bezierPathByFlatteningPath;	// IMP=0x000000000004599c
- (void)flattenIntoPath:(id)arg1;	// IMP=0x000000000004585a
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x00000000000456a2
- (void)addClip;	// IMP=0x000000000004563f
- (void)fill;	// IMP=0x00000000000455dc
- (void)stroke;	// IMP=0x0000000000045430
- (void)_doPath;	// IMP=0x0000000000045315
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x00000000000452c0
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000000451f8
- (void)setFlatness:(double)arg1;	// IMP=0x00000000000451ed
- (double)flatness;	// IMP=0x00000000000451e2
- (void)setMiterLimit:(double)arg1;	// IMP=0x00000000000451d7
- (double)miterLimit;	// IMP=0x00000000000451cc
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00000000000451b0
- (unsigned long long)windingRule;	// IMP=0x000000000004519e
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0000000000045182
- (unsigned long long)lineJoinStyle;	// IMP=0x0000000000045170
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0000000000045156
- (unsigned long long)lineCapStyle;	// IMP=0x0000000000045144
- (void)setLineWidth:(double)arg1;	// IMP=0x0000000000045139
- (double)lineWidth;	// IMP=0x000000000004512e
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000000450ac
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045062
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045018
- (void)removeAllPoints;	// IMP=0x0000000000044fb7
- (void)closePath;	// IMP=0x0000000000044fa5
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000044f0c
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000044e9e
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000044e8c
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000044d7d
- (void)dealloc;	// IMP=0x0000000000044d0d
- (id)init;	// IMP=0x0000000000044c27
- (void)_deviceClosePath;	// IMP=0x0000000000048e04
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000048c78
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000048c40
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000048bb3
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x00000000000489c7
- (id)description;	// IMP=0x0000000000048f7b
- (id)chisel;	// IMP=0x00000000000e4ec8
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;	// IMP=0x00000000000e46f5
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;	// IMP=0x00000000000e465e
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;	// IMP=0x00000000000e45d3
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;	// IMP=0x00000000000e2e43
- (float)curvatureAt:(float)arg1;	// IMP=0x00000000000e2dc4
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e2d52
- (struct CGPoint)myGradientAt:(float)arg1;	// IMP=0x00000000000e2cb8
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e2b15
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e2a46
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;	// IMP=0x00000000000e28af
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;	// IMP=0x00000000000e2791
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;	// IMP=0x00000000000e2663
- (struct CGPoint)gradientAt:(float)arg1;	// IMP=0x00000000000e2614
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e25c4
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e23f1
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e226d
- (id)pressure;	// IMP=0x00000000000e2265
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e1c25
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e19c7
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;	// IMP=0x00000000000e18e4
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;	// IMP=0x00000000000e133c
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;	// IMP=0x00000000000e1200
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;	// IMP=0x00000000000e10bd
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;	// IMP=0x00000000000e10a2
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;	// IMP=0x00000000000e069a
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;	// IMP=0x00000000000e05f7

@end

