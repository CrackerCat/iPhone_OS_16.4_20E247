//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GTResourceDownloader, MTLArchitecture, MTLGPUBVHBuilder, MTLSharedEventListener, MTLTargetDeviceArchitecture, NSArray, NSDictionary, NSMapTable, NSMutableArray, NSString;
@protocol MTLArgumentEncoder, MTLComputePipelineState, MTLDevice, MTLDeviceSPI, MTLFunction, MTLRenderPipelineState, OS_dispatch_group, OS_dispatch_queue;

@interface CaptureMTLDevice : NSObject
{
    id <MTLDeviceSPI> _baseObject;	// 8 = 0x8
    struct GTTraceContext *_traceContext;	// 16 = 0x10
    struct GTTraceStream *_traceStream;	// 24 = 0x18
    struct apr_pool_t *_harvesterPool;	// 32 = 0x20
    NSObject<OS_dispatch_group> *_dispatchGroup;	// 40 = 0x28
    long long _onceToken;	// 48 = 0x30
    id <MTLFunction> _renderFunctionCopyIndirectCommandBuffer;	// 56 = 0x38
    id <MTLFunction> _computeFunctionCopyIndirectCommandBuffer;	// 64 = 0x40
    id <MTLRenderPipelineState> _renderPipelineCopyIndirectCommandBuffer;	// 72 = 0x48
    id <MTLRenderPipelineState> _renderPipelineCopyBuffer;	// 80 = 0x50
    id <MTLComputePipelineState> _computePipelineCopyIndirectCommandBuffer;	// 88 = 0x58
    id <MTLComputePipelineState> _computePipelineCopyBuffer;	// 96 = 0x60
    GTResourceDownloader *_downloader;	// 104 = 0x68
    long long _downloaderOnceToken;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_eventQueue;	// 120 = 0x78
    MTLSharedEventListener *_eventListener;	// 128 = 0x80
    id <MTLArgumentEncoder> _dummyArgumentEncoder;	// 136 = 0x88
    long long _dummyArgEncOnceToken;	// 144 = 0x90
    _Bool isArgumentBufferPatchingTypeIndexed[9];	// 152 = 0x98
    unsigned long long _dummySamplerIndex;	// 168 = 0xa8
    unsigned long long _dummyICBIndex;	// 176 = 0xb0
    unsigned long long _dummyRenderPSOIndex;	// 184 = 0xb8
    unsigned long long _dummyComputePSOIndex;	// 192 = 0xc0
    unsigned long long _dummyVisibleFunctionTableIndex;	// 200 = 0xc8
    unsigned long long _dummyIntersectionFunctionTableIndex;	// 208 = 0xd0
    struct _opaque_pthread_mutex_t _retainMutex;	// 216 = 0xd8
    NSMutableArray *_retainObjects;	// 280 = 0x118
    NSMapTable *_cachedDepthStencilStateMap;	// 288 = 0x120
    NSMapTable *_cachedFunctionMap;	// 296 = 0x128
    NSMapTable *_cachedSamplerStateMap;	// 304 = 0x130
    struct os_unfair_lock_s _cachedDepthStencilStateLock;	// 312 = 0x138
    struct os_unfair_lock_s _cachedFunctionLock;	// 316 = 0x13c
    struct os_unfair_lock_s _cachedSamplerStateLock;	// 320 = 0x140
    _Bool _bufferPinningEnabled;	// 324 = 0x144
    _Bool _isBaseObjectDebugDevice;	// 325 = 0x145
    _Bool _disableHeapTextureCompression;	// 326 = 0x146
    _Bool _captureRaytracingEnabled;	// 327 = 0x147
    struct GTResourceHarvester *_harvester;	// 328 = 0x148
}

- (void).cxx_destruct;	// IMP=0x000000000002aa30
@property(readonly, nonatomic) struct GTResourceHarvester *harvester; // @synthesize harvester=_harvester;
- (id)newAccelerationStructureWithBuffer:(id)arg1 offset:(unsigned long long)arg2 resourceIndex:(unsigned long long)arg3;	// IMP=0x000000000002a7cf
- (id)newAccelerationStructureWithBuffer:(id)arg1 offset:(unsigned long long)arg2;	// IMP=0x000000000002a5a4
- (id)newHeapWithDescriptor:(id)arg1;	// IMP=0x000000000002a357
- (id)newSamplerStateWithDescriptor:(id)arg1;	// IMP=0x000000000002a16d
- (id)newDepthStencilStateWithDescriptor:(id)arg1;	// IMP=0x0000000000029fb2
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long *)arg2 indexCount:(unsigned long long)arg3;	// IMP=0x0000000000029f9c
- (id)vendorName;	// IMP=0x0000000000029f86
- (_Bool)validateDynamicLibraryURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000029f70
- (_Bool)validateDynamicLibraryDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000029f5a
- (_Bool)validateDynamicLibrary:(id)arg1 state:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000029eef
- (void)unmapShaderSampleBuffer;	// IMP=0x0000000000029e0d
- (void)unloadShaderCaches;	// IMP=0x0000000000029df7
- (CDStruct_14f26992)tileSizeWithSparsePageSize:(long long)arg1 textureType:(unsigned long long)arg2 pixelFormat:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4;	// IMP=0x0000000000029ca3
- (_Bool)supportsVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x0000000000029c8d
- (_Bool)supportsTextureWriteRoundingMode:(long long)arg1;	// IMP=0x0000000000029c77
- (_Bool)supportsTextureSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000029b62
- (_Bool)supportsSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000029a4d
- (_Bool)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;	// IMP=0x0000000000029938
- (_Bool)supportsFeatureSet:(unsigned long long)arg1;	// IMP=0x0000000000029922
- (_Bool)supportsFamily:(long long)arg1;	// IMP=0x000000000002990c
- (_Bool)supportsCounterSampling:(unsigned long long)arg1;	// IMP=0x00000000000298f6
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(id)arg1;	// IMP=0x00000000000298e0
- (void)startCollectingPipelineDescriptors;	// IMP=0x00000000000298ca
- (CDStruct_14f26992)sparseTileSizeWithTextureType:(unsigned long long)arg1 pixelFormat:(unsigned long long)arg2 sampleCount:(unsigned long long)arg3 sparsePageSize:(long long)arg4;	// IMP=0x0000000000029776
- (unsigned long long)sparseTileSizeInBytesForSparsePageSize:(long long)arg1;	// IMP=0x000000000002966b
- (void)setupMPSFunctionTable:(struct MPSFunctionTable *)arg1;	// IMP=0x0000000000029655
- (void)setRawBVHBuilderPtr:(id)arg1;	// IMP=0x000000000002963f
- (void)setIndirectArgumentBufferDecodingData:(id)arg1;	// IMP=0x0000000000029629
@property(getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) _Bool gpuAssertionsEnabled;
- (void)sampleTimestamps:(unsigned long long *)arg1 gpuTimestamp:(unsigned long long *)arg2;	// IMP=0x00000000000295fd
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)arg1;	// IMP=0x00000000000295e7
- (_Bool)reserveGPUAddressRange:(struct _NSRange)arg1;	// IMP=0x00000000000295d1
- (id)productName;	// IMP=0x00000000000295bb
- (CDStruct_c0454aff)pipelineCacheStats;	// IMP=0x00000000000295a5
- (id)newVisibleFunctionTableWithDescriptor:(id)arg1;	// IMP=0x0000000000029556
- (id)newTextureWithDescriptor:(id)arg1 iosurface:(struct __IOSurface *)arg2 plane:(unsigned long long)arg3;	// IMP=0x00000000000292ef
- (id)newTextureWithDescriptor:(id)arg1;	// IMP=0x00000000000290cc
- (id)newTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 descriptor:(id)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x0000000000028e24
- (id)newTextureLayoutWithDescriptor:(id)arg1 isHeapOrBufferBacked:(_Bool)arg2;	// IMP=0x0000000000028c23
- (id)newProfileWithExecutionSize:(unsigned long long)arg1;	// IMP=0x0000000000028a6b
- (id)newLibraryWithStitchedDescriptorSPI:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000028838
- (id)newLibraryWithDescriptorSPI:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000028605
- (id)newLibraryWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000283d2
- (id)newLibraryWithData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000281a6
- (id)newLateEvalEvent;	// IMP=0x0000000000028004
- (id)newIndirectRenderCommandEncoderWithBuffer:(id)arg1;	// IMP=0x0000000000027fad
- (id)newIndirectComputeCommandEncoderWithBuffer:(id)arg1;	// IMP=0x0000000000027f56
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000027d41
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000027afc
- (id)newIndirectArgumentEncoderWithLayout:(id)arg1;	// IMP=0x0000000000027ae6
- (id)newIndirectArgumentEncoderWithArguments:(id)arg1;	// IMP=0x0000000000027ad0
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;	// IMP=0x0000000000027aba
- (id)newFence;	// IMP=0x0000000000027918
- (id)newEvent;	// IMP=0x0000000000027776
- (id)newDynamicLibraryWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000002754d
- (id)newDynamicLibraryWithURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002733d
- (id)newDynamicLibraryWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000272df
- (id)newDynamicLibraryFromURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000027247
- (id)newDynamicLibrary:(id)arg1 computeDescriptor:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002713b
- (id)newDagStringWithGraphs:(id)arg1;	// IMP=0x0000000000027125
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1;	// IMP=0x0000000000026f6e
- (id)newCommandQueueWithDescriptor:(id)arg1;	// IMP=0x0000000000026d88
- (id)newCommandQueue;	// IMP=0x0000000000026be6
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 gpuAddress:(unsigned long long)arg3;	// IMP=0x0000000000026a09
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000026830
- (id)newBufferWithIOSurface:(struct __IOSurface *)arg1;	// IMP=0x0000000000026652
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4 deallocator:(CDUnknownBlockType)arg5;	// IMP=0x00000000000265e4
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4;	// IMP=0x00000000000263cb
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x00000000000261ce
- (id)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000026131
- (id)newBinaryArchiveWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000025f4c
- (id)newArgumentEncoderWithLayout:(id)arg1;	// IMP=0x0000000000025eee
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1 withDescriptor:(id)arg2;	// IMP=0x0000000000025cee
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1 resourceIndex:(unsigned long long)arg2;	// IMP=0x0000000000025b24
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1;	// IMP=0x000000000002595f
- (id)newAccelerationStructureWithDescriptor:(id)arg1;	// IMP=0x000000000002574b
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000025735
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x000000000002571f
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000025614
- (_Bool)mapShaderSampleBufferWithBuffer:(CDStruct_32a7f38a *)arg1 capacity:(unsigned long long)arg2 size:(unsigned long long)arg3;	// IMP=0x00000000000255fe
- (CDStruct_c0454aff)libraryCacheStats;	// IMP=0x00000000000255e8
- (_Bool)isCompatibleWithAccelerationStructure:(CDStruct_c0454aff)arg1;	// IMP=0x00000000000255d2
- (id)indirectArgumentBufferDecodingData;	// IMP=0x00000000000255bc
- (CDStruct_4bcfbbae)heapTextureSizeAndAlignWithDescriptor:(id)arg1;	// IMP=0x000000000002547a
- (CDStruct_4bcfbbae)heapBufferSizeAndAlignWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000025354
- (CDStruct_4bcfbbae)heapAccelerationStructureSizeAndAlignWithSize:(unsigned long long)arg1;	// IMP=0x000000000002533e
- (CDStruct_4bcfbbae)heapAccelerationStructureSizeAndAlignWithDescriptor:(id)arg1;	// IMP=0x00000000000252ea
- (void *)getShaderCacheKeys;	// IMP=0x00000000000252d4
- (id)getRawBVHBuilderPtr;	// IMP=0x00000000000252be
- (void)getDefaultSamplePositions:(CDStruct_b2fbf00d *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000252a8
- (struct os_unfair_lock_s *)getBVHBuilderLock;	// IMP=0x0000000000025292
- (id)familyName;	// IMP=0x000000000002527c
- (id)endCollectingPipelineDescriptors;	// IMP=0x0000000000025266
- (_Bool)deviceSupportsFeatureSet:(unsigned long long)arg1;	// IMP=0x0000000000025250
- (_Bool)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;	// IMP=0x000000000002523a
- (id)deserializePrimitiveAccelerationStructureFromBytes:(void *)arg1 withDescriptor:(id)arg2;	// IMP=0x00000000000251a0
- (id)deserializeInstanceAccelerationStructureFromBytes:(void *)arg1 primitiveAccelerationStructures:(id)arg2 withDescriptor:(id)arg3;	// IMP=0x00000000000250c1
- (void)deserializeCompileTimeStats:(id)arg1 addToDictionary:(id)arg2;	// IMP=0x00000000000250ab
- (_Bool)copyShaderCacheToPath:(id)arg1;	// IMP=0x0000000000024f17
- (void)convertSparseTileRegions:(const CDStruct_4c83c94d *)arg1 toPixelRegions:(CDStruct_4c83c94d *)arg2 withTileSize:(CDStruct_14f26992)arg3 numRegions:(unsigned long long)arg4;	// IMP=0x0000000000024f01
- (void)convertSparsePixelRegions:(const CDStruct_4c83c94d *)arg1 toTileRegions:(CDStruct_4c83c94d *)arg2 withTileSize:(CDStruct_14f26992)arg3 alignmentMode:(unsigned long long)arg4 numRegions:(unsigned long long)arg5;	// IMP=0x0000000000024eeb
- (void)compilerPropagatesThreadPriority:(_Bool)arg1;	// IMP=0x0000000000024ed5
- (void)compileVisibleFunction:(id)arg1 withDescriptor:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000024e12
- (CDStruct_14f26992)accelerationStructureSizesWithDescriptor:(id)arg1;	// IMP=0x0000000000024d9f
@property(readonly) const struct MTLTargetDeviceArch *targetDeviceInfo;
@property(readonly) MTLTargetDeviceArchitecture *targetDeviceArchitecture;
@property(readonly) _Bool supportPriorityBand;
@property(readonly) unsigned long long sparseTexturesSupport;
@property(readonly) unsigned long long singleFPConfig;
@property(readonly) unsigned long long sharedMemorySize;
@property _Bool shaderDebugInfoCaching;
@property(readonly) _Bool requiresRaytracingEmulation;
@property(readonly) unsigned long long registryID;
@property(readonly) unsigned long long readWriteTextureSupport;
@property(readonly, getter=areRasterOrderGroupsSupported) _Bool rasterOrderGroupsSupported;
@property(readonly, getter=isQuadDataSharingSupported) _Bool quadDataSharingSupported;
@property(readonly, getter=areProgrammableSamplePositionsSupported) _Bool programmableSamplePositionsSupported;
@property(readonly, getter=isPlacementHeapSupported) _Bool placementHeapSupported;
@property(readonly) NSString *name;
@property(readonly, getter=isMsaa32bSupported) _Bool msaa32bSupported;
@property(readonly) unsigned long long minConstantBufferAlignmentBytes;
@property(readonly) unsigned long long minBufferNoCopyAlignmentBytes;
@property(nonatomic) _Bool metalAssertionsEnabled;
@property(readonly) unsigned long long maxVisibilityQueryOffset;
@property(readonly) unsigned long long maxViewportCount;
@property(readonly) unsigned long long maxVertexTextures;
@property(readonly) unsigned long long maxVertexSamplers;
@property(readonly) unsigned long long maxVertexInlineDataSize;
@property(readonly) unsigned long long maxVertexBuffers;
@property(readonly) unsigned long long maxVertexAttributes;
@property(readonly) unsigned long long maxVertexAmplificationFactor;
@property(readonly) unsigned long long maxVertexAmplificationCount;
@property(readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup;
@property(readonly) CDStruct_14f26992 maxThreadsPerThreadgroup;
@property(readonly) unsigned long long maxThreadgroupMemoryLength;
@property(readonly) unsigned long long maxTextureWidth3D;
@property(readonly) unsigned long long maxTextureWidth2D;
@property(readonly) unsigned long long maxTextureWidth1D;
@property(readonly) unsigned long long maxTextureLayers;
@property(readonly) unsigned long long maxTextureHeight3D;
@property(readonly) unsigned long long maxTextureHeight2D;
@property(readonly) unsigned long long maxTextureDimensionCube;
@property(readonly) unsigned long long maxTextureDepth3D;
@property(readonly) unsigned long long maxTextureBufferWidth;
@property(readonly) unsigned long long maxTessellationFactor;
@property(readonly) unsigned long long maxRasterizationRateLayerCount;
@property(readonly) float maxPointSize;
@property(readonly) float maxLineWidth;
@property(readonly) unsigned long long maxInterpolatedComponents;
@property(readonly) unsigned long long maxInterpolants;
@property(readonly) unsigned long long maxIndirectTextures;
@property(readonly) unsigned long long maxIndirectSamplersPerDevice;
@property(readonly) unsigned long long maxIndirectSamplers;
@property(readonly) unsigned long long maxIndirectBuffers;
@property(readonly) unsigned long long maxFunctionConstantIndices;
@property(readonly) unsigned long long maxFramebufferStorageBits;
@property(readonly) unsigned long long maxFragmentTextures;
@property(readonly) unsigned long long maxFragmentSamplers;
@property(readonly) unsigned long long maxFragmentInlineDataSize;
@property(readonly) unsigned long long maxFragmentBuffers;
@property(readonly) unsigned long long maxFenceInstances;
@property(readonly) unsigned long long maxCustomSamplePositions;
@property(readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes;
@property(readonly) unsigned long long maxComputeThreadgroupMemory;
@property(readonly) unsigned long long maxComputeTextures;
@property(readonly) unsigned long long maxComputeSamplers;
@property(readonly) unsigned long long maxComputeLocalMemorySizes;
@property(readonly) unsigned long long maxComputeInlineDataSize;
@property(readonly) unsigned long long maxComputeBuffers;
@property(readonly) unsigned long long maxComputeAttributes;
@property(readonly) unsigned long long maxColorAttachments;
@property(readonly) unsigned long long maxBufferLength;
@property(readonly) unsigned long long maxArgumentBufferSamplerCount;
@property(readonly) unsigned long long linearTextureArrayAlignmentSlice;
@property(readonly) unsigned long long linearTextureArrayAlignmentBytes;
@property(readonly) unsigned long long linearTextureAlignmentBytes;
@property(readonly) const CDStruct_1825b841 *limits;
@property(readonly, getter=isLargeMRTSupported) _Bool largeMRTSupported;
@property(readonly) unsigned long long iosurfaceTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes;
@property(readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities;
@property(readonly) unsigned long long halfFPConfig;
@property(readonly, getter=isFloat32FilteringSupported) _Bool float32FilteringSupported;
@property(readonly) unsigned long long featureProfile;
@property(readonly) unsigned long long doubleFPConfig;
@property(readonly) unsigned long long deviceLinearTextureAlignmentBytes;
@property(readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long deviceCreationFlags;
@property(readonly) long long defaultTextureWriteRoundingMode;
@property(readonly) unsigned long long dedicatedMemorySize;
@property(readonly) unsigned long long currentAllocatedSize;
@property(readonly) NSArray *counterSets;
@property(nonatomic) unsigned long long commandBufferErrorOptions;
@property(readonly) unsigned long long bufferRobustnessSupport;
@property(readonly, getter=areBarycentricCoordsSupported) _Bool barycentricCoordsSupported;
@property(readonly) unsigned long long argumentBuffersSupport;
@property(readonly) MTLArchitecture *architecture;
@property(readonly, getter=isRTZRoundingSupported) _Bool RTZRoundingSupported;
@property(readonly, getter=isRGB10A2GammaSupported) _Bool RGB10A2GammaSupported;
@property(readonly) MTLGPUBVHBuilder *GPUBVHBuilder;
@property(readonly, getter=isFixedLinePointFillDepthGradientSupported) _Bool FixedLinePointFillDepthGradientSupported;
@property(readonly, getter=isCustomBorderColorSupported) _Bool CustomBorderColorSupported;
@property(readonly, getter=isClampToHalfBorderSupported) _Bool ClampToHalfBorderSupported;
@property(readonly, getter=isBCTextureCompressionSupported) _Bool BCTextureCompressionSupported;
@property(readonly, copy) NSString *description;
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x0000000000024204
@property(readonly) unsigned long long streamReference;
@property(readonly) struct GTTraceStream *traceStream;
@property(readonly) struct GTTraceContext *traceContext;
- (void)touch;	// IMP=0x00000000000241a4
- (id)originalObject;	// IMP=0x0000000000024196
- (void)deserializeInstanceAccelerationStructure:(id)arg1 fromBytes:(const void *)arg2 primitiveAccelerationStructures:(id)arg3 withDescriptor:(id)arg4;	// IMP=0x0000000000023eb4
- (void)deserializePrimitiveAccelerationStructure:(id)arg1 fromBytes:(const void *)arg2 withDescriptor:(id)arg3;	// IMP=0x0000000000023c66
- (void)compileVisibleFunction:(id)arg1 withDescriptor:(id)arg2 destinationBinaryArchive:(id)arg3 error:(id *)arg4;	// IMP=0x00000000000239e5
- (void)newLibraryWithStitchedDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000238ce
- (id)newLibraryWithStitchedDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002365b
- (void)newLibraryWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000023544
- (id)newDynamicLibrary:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000232fa
- (id)newBufferWithDescriptor:(id)arg1;	// IMP=0x00000000000230bb
@property(readonly) unsigned long long maxPredicatedNestingDepth;
- (id)newIntersectionFunctionTableWithDescriptor:(id)arg1;	// IMP=0x0000000000023010
- (id)loadDynamicLibrariesForFunction:(id)arg1 insertLibraries:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x0000000000022e2d
- (id)loadDynamicLibrariesForFunction:(id)arg1 insertLibraries:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000022c51
- (id)loadDynamicLibrariesForComputeDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000022a9f
- (id)loadDynamicLibrariesForComputeDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000228f4
- (id)newLibraryWithDAG:(id)arg1 functions:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000022605
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x000000000002239b
@property(readonly) unsigned long long sparseTileSizeInBytes;
- (CDStruct_14f26992)sparseTileSizeWithTextureType:(unsigned long long)arg1 pixelFormat:(unsigned long long)arg2 sampleCount:(unsigned long long)arg3;	// IMP=0x0000000000022233
- (id)newRasterizationRateMapWithDescriptor:(id)arg1;	// IMP=0x000000000002204d
- (id)newFunctionWithGLIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x0000000000021e13
- (id)newFunctionWithGLIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x0000000000021c5c
- (id)newFunctionWithGLESIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x0000000000021a22
- (id)newFunctionWithGLESIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x000000000002186b
- (id)newFunctionWithGLCoreIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x0000000000021631
- (id)newFunctionWithGLCoreIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x000000000002147a
@property(readonly) unsigned long long minTilePixels;
@property(readonly) unsigned long long maxTileTextures;
@property(readonly) unsigned long long maxTileSamplers;
@property(readonly) unsigned long long maxTileInlineDataSize;
@property(readonly) unsigned long long maxTileBuffers;
- (id)newPipelineLibraryWithFilePath:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000021164
- (void)_setDeviceWrapper:(id)arg1;	// IMP=0x000000000002115e
- (id)_deviceWrapper;	// IMP=0x0000000000021155
- (id)newResourceGroupFromResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000020eba
- (id)newCounterSampleBufferWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000020cb7
- (_Bool)supportsPrimitiveType:(unsigned long long)arg1;	// IMP=0x0000000000020b8b
- (id)newDefaultLibraryWithBundle:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000208ac
- (id)newDefaultLibrary;	// IMP=0x00000000000205ee
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000002020f
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ff67
- (void)newRenderPipelineStateWithMeshDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001fde4
- (id)newRenderPipelineStateWithMeshDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000001f9d5
- (void)newRenderPipelineStateWithMeshDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001f867
- (id)newRenderPipelineStateWithMeshDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001f57c
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000001f14a
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ee2f
- (id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000001ea59
- (id)newComputePipelineStateWithFunction:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001e7ad
- (id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x000000000001e38c
- (id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001e093
- (void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001def7
- (void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001ddb9
- (void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001dc8a
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001db07
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001d999
- (id)newLibraryWithURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001d6ed
- (void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001d582
- (id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001d23c
- (id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x000000000001cf22
- (id)newLibraryWithFile:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001cc76
- (id)newLibraryWithCIFiltersForComputePipeline:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x000000000001c9f2
- (id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x000000000001c76e
- (id)newSharedEventWithMachPort:(unsigned int)arg1;	// IMP=0x000000000001c4aa
- (id)newSharedEventWithHandle:(id)arg1;	// IMP=0x000000000001c298
- (id)newSharedEvent;	// IMP=0x000000000001c0b8
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x000000000001bd9c
- (id)newArgumentEncoderWithArguments:(id)arg1;	// IMP=0x000000000001bbd1
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x000000000001ba64
- (_Bool)conformsToProtocol:(id)arg1;	// IMP=0x000000000001b904
- (void)dealloc;	// IMP=0x000000000001b7f0
@property(readonly, nonatomic) MTLSharedEventListener *captureEventListener;
- (_Bool)captureRaytracingEnabled;	// IMP=0x000000000001b7d3
- (_Bool)bufferPinningEnabled;	// IMP=0x000000000001b7c7
- (void)purgeDeallocatedObjects;	// IMP=0x000000000001b78e
- (void)deallocateResource:(id)arg1;	// IMP=0x000000000001b601
- (void)invalidateHarvester;	// IMP=0x000000000001b59f
- (_Bool)disableHeapTextureCompression;	// IMP=0x000000000001b593
- (void)updateAssociatedFunction:(id)arg1;	// IMP=0x000000000001b505
- (_Bool)newCaptureSamplerState:(out id *)arg1 associatedWithBaseSamplerState:(id)arg2;	// IMP=0x000000000001b430
- (_Bool)newCaptureDepthStencilState:(out id *)arg1 associatedWithBaseDepthStencilState:(id)arg2;	// IMP=0x000000000001b35b
- (_Bool)newCaptureFunction:(out id *)arg1 associatedWithBaseFunction:(id)arg2 captureLibrary:(id)arg3;	// IMP=0x000000000001b26c
- (id)initWithBaseObject:(id)arg1 captureContext:(struct GTTraceContext *)arg2;	// IMP=0x000000000001ae7d
@property(readonly) id <MTLDevice> baseObject;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *dispatchGroup;
@property(readonly, nonatomic) id <MTLComputePipelineState> computePipelineCopyBuffer;
@property(readonly, nonatomic) id <MTLComputePipelineState> computePipelineCopyIndirectCommandBuffer;
@property(readonly, nonatomic) id <MTLFunction> computeFunctionCopyIndirectCommandBuffer;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineCopyBuffer;
@property(readonly, nonatomic) id <MTLRenderPipelineState> renderPipelineCopyIndirectCommandBuffer;
@property(readonly, nonatomic) id <MTLFunction> renderFunctionCopyIndirectCommandBuffer;
@property(readonly, nonatomic) GTResourceDownloader *downloader;
- (id)dummyEncodeIntersectionFunctionTableIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001abda
- (id)dummyEncodeVisibleFunctionTableIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001aa60
- (id)dummyEncodeComputePSOIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001a8ac
- (id)dummyEncodeRenderPSOIntoArgumentBufferForResourceIndex:(id)arg1 withMeshDescriptor:(id)arg2;	// IMP=0x000000000001a70e
- (id)dummyEncodeRenderPSOIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001a570
- (id)dummyEncodeICBIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001a404
- (id)dummyEncodeSamplerIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001a292
- (id)dummyEncodeTextureIntoArgumentBufferForResourceIndex:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x000000000001a10f
- (void)_initDummyEncoder;	// IMP=0x0000000000019c79
- (id)dummyArgumentEncoder;	// IMP=0x0000000000019c11
- (void)_initArgumentBufferPatchingTypes;	// IMP=0x0000000000019b88

// Remaining properties
@property(readonly, getter=isAnisoSampleFixSupported) _Bool AnisoSampleFixSupported;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, getter=isDepth24Stencil8PixelFormatSupported) _Bool depth24Stencil8PixelFormatSupported;
@property(readonly) _Bool hasUnifiedMemory;
@property(readonly) unsigned long long hash;
@property(readonly, getter=isHeadless) _Bool headless;
@property(readonly, getter=isLowPower) _Bool lowPower;
@property(readonly) unsigned long long maxConcurrentExecutingCompilationTasks;
@property(readonly) unsigned long long maxConstantBufferArguments;
@property(copy, nonatomic) NSDictionary *pluginData;
@property(readonly) unsigned long long recommendedMaxWorkingSetSize;
@property(readonly, getter=isRemovable) _Bool removable;
@property(readonly) unsigned long long simulatorHostFeatureProfile;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supports2DLinearTexArraySPI;
@property(readonly, nonatomic) _Bool supports32BitFloatFiltering;
@property(readonly, nonatomic) _Bool supports32BitMSAA;
@property(readonly, nonatomic) _Bool supports32bpcMSAATextures;
@property(readonly, nonatomic) _Bool supports3DASTCTextures;
@property(readonly, nonatomic) _Bool supports3DBCTextures;
@property(readonly, nonatomic) _Bool supportsASTCHDRTextureCompression;
@property(readonly, nonatomic) _Bool supportsASTCTextureCompression;
@property(readonly, nonatomic) _Bool supportsAlphaYUVFormats;
@property(readonly, nonatomic) _Bool supportsAnisoSampleFix;
@property(readonly, nonatomic) _Bool supportsArgumentBuffersTier2;
@property(readonly, nonatomic) _Bool supportsArrayOfSamplers;
@property(readonly, nonatomic) _Bool supportsArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsAtomicUlongVoidMinMax;
@property(readonly, nonatomic) _Bool supportsBCTextureCompression;
@property(readonly, nonatomic) _Bool supportsBGR10A2;
@property(readonly, nonatomic) _Bool supportsBaseVertexInstanceDrawing;
@property(readonly, nonatomic) _Bool supportsBfloat16Format;
@property(readonly, nonatomic) _Bool supportsBinaryArchives;
@property(readonly, nonatomic) _Bool supportsBinaryLibraries;
@property(readonly, nonatomic) _Bool supportsBlackOrWhiteSamplerBorderColors;
@property(readonly, nonatomic) _Bool supportsBufferBoundsChecking;
@property(readonly, nonatomic) _Bool supportsBufferPrefetchStatistics;
@property(readonly, nonatomic) _Bool supportsBufferWithIOSurface;
@property(readonly, nonatomic) _Bool supportsBufferlessClientStorageTexture;
@property(readonly, nonatomic) _Bool supportsCMPIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsCombinedMSAAStoreAndResolveAction;
@property(readonly, nonatomic) _Bool supportsCommandBufferJump;
@property(readonly, nonatomic) _Bool supportsCompressedTextureViewSPI;
@property(readonly, nonatomic) _Bool supportsComputeCompressedTextureWrite;
@property(readonly, nonatomic) _Bool supportsComputeMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsConcurrentComputeDispatch;
@property(readonly, nonatomic) _Bool supportsCountingOcclusionQuery;
@property(readonly, nonatomic) _Bool supportsCustomBorderColor;
@property(readonly, nonatomic) _Bool supportsDeadlineProfile;
@property(readonly, nonatomic) _Bool supportsDepthClipMode;
@property(readonly, nonatomic) _Bool supportsDepthClipModeClampExtended;
@property(readonly, nonatomic) _Bool supportsDevicePartitioning;
@property(readonly, nonatomic) _Bool supportsDynamicControlPointCount;
@property(readonly, nonatomic) _Bool supportsDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsExplicitVisibilityGroups;
@property(readonly, nonatomic) _Bool supportsExtendedVertexFormats;
@property(readonly, nonatomic) _Bool supportsExtendedXR10Formats;
@property(readonly, nonatomic) _Bool supportsExtendedYUVFormats;
@property(readonly, nonatomic) _Bool supportsFP32TessFactors;
@property(readonly, nonatomic) _Bool supportsFastMathInfNaNPropagation;
@property(readonly, nonatomic) _Bool supportsFillTexture;
@property(readonly, nonatomic) _Bool supportsFixedLinePointFillDepthGradient;
@property(readonly, nonatomic) _Bool supportsFloat16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsFloat16InfNanFiltering;
@property(readonly, nonatomic) _Bool supportsForceSeamsOnCubemaps;
@property(readonly, nonatomic) _Bool supportsForkJoin;
@property(readonly, nonatomic) _Bool supportsFragmentBufferWrites;
@property(readonly, nonatomic) _Bool supportsFragmentOnlyEncoders;
@property(readonly, nonatomic) _Bool supportsFunctionPointers;
@property(readonly, nonatomic) _Bool supportsFunctionPointersFromMesh;
@property(readonly, nonatomic) _Bool supportsFunctionPointersFromRender;
@property(readonly, nonatomic) _Bool supportsGFXIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsGPUStatistics;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocation;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationCompute;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationRender;
@property(readonly, nonatomic) _Bool supportsHeapAccelerationStructureAllocation;
@property(readonly, nonatomic) _Bool supportsIABHashForTools;
@property(readonly, nonatomic) _Bool supportsImageBlockSampleCoverageControl;
@property(readonly, nonatomic) _Bool supportsImageBlocks;
@property(readonly, nonatomic) _Bool supportsIndirectDrawAndDispatch;
@property(readonly, nonatomic) _Bool supportsIndirectStageInRegion;
@property(readonly, nonatomic) _Bool supportsIndirectTessellation;
@property(readonly, nonatomic) _Bool supportsIndirectTextures;
@property(readonly, nonatomic) _Bool supportsIndirectWritableTextures;
@property(readonly, nonatomic) _Bool supportsInt64;
@property(readonly, nonatomic) _Bool supportsInterchangeTiled;
@property(readonly, nonatomic) _Bool supportsInvariantVertexPosition;
@property(readonly, nonatomic) _Bool supportsLargeFramebufferConfigs;
@property(readonly, nonatomic) _Bool supportsLateEvalEvent;
@property(readonly, nonatomic) _Bool supportsLayeredRendering;
@property(readonly, nonatomic) _Bool supportsLimitedYUVFormats;
@property(readonly, nonatomic) _Bool supportsLinearTexture2DArray;
@property(readonly, nonatomic) _Bool supportsLinearTextureFromSharedBuffer;
@property(readonly, nonatomic) _Bool supportsLossyCompression;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolve;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolveFilter;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolve;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolveFilter;
@property(readonly, nonatomic) _Bool supportsMemoryOrderAtomics;
@property(readonly, nonatomic) _Bool supportsMemorylessRenderTargets;
@property(readonly, nonatomic) _Bool supportsMeshShaders;
@property(readonly, nonatomic) _Bool supportsMeshShadersInICB;
@property(readonly, nonatomic) _Bool supportsMipLevelsSmallerThanBlockSize;
@property(readonly, nonatomic) _Bool supportsMirrorClampToEdgeSamplerMode;
@property(readonly, nonatomic) _Bool supportsMutableTier1ArgumentBuffers;
@property(readonly, nonatomic) _Bool supportsNativeHardwareFP16;
@property(readonly, nonatomic) _Bool supportsNonPrivateDepthStencilTextures;
@property(readonly, nonatomic) _Bool supportsNonPrivateMSAATextures;
@property(readonly, nonatomic) _Bool supportsNonSquareTileShaders;
@property(readonly, nonatomic) _Bool supportsNonUniformThreadgroupSize;
@property(readonly, nonatomic) _Bool supportsNonZeroTextureWriteLOD;
@property(readonly, nonatomic) _Bool supportsNorm16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsOpenCLTextureWriteSwizzles;
@property(readonly, nonatomic) _Bool supportsPacked32TextureBufferWrites;
@property(readonly, nonatomic) _Bool supportsPipelineLibraries;
@property(readonly, nonatomic) _Bool supportsPlacementHeaps;
@property(readonly, nonatomic) _Bool supportsPostDepthCoverage;
@property(readonly, nonatomic) _Bool supportsPrimitiveMotionBlur;
@property(readonly, nonatomic) _Bool supportsPrimitiveRestartOverride;
@property(readonly, nonatomic) _Bool supportsProgrammableBlending;
@property(readonly, nonatomic) _Bool supportsProgrammableSamplePositions;
@property(readonly, nonatomic) _Bool supportsPublicXR10Formats;
@property(readonly, nonatomic) _Bool supportsPullModelInterpolation;
@property(readonly, nonatomic) _Bool supportsQuadGroup;
@property(readonly, nonatomic) _Bool supportsQuadReduction;
@property(readonly, nonatomic) _Bool supportsQuadShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsQueryTextureLOD;
@property(readonly, nonatomic) _Bool supportsRGBA10A2Gamma;
@property(readonly, nonatomic) _Bool supportsRTZRounding;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroups;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroupsColorAttachment;
@property(readonly, nonatomic) _Bool supportsRayTracingAccelerationStructureCPUDeserialization;
@property(readonly, nonatomic) _Bool supportsRayTracingBuffersFromTables;
@property(readonly, nonatomic) _Bool supportsRayTracingExtendedVertexFormats;
@property(readonly, nonatomic) _Bool supportsRayTracingICBs;
@property(readonly, nonatomic) _Bool supportsRayTracingPerPrimitiveData;
@property(readonly) _Bool supportsRaytracing;
@property(readonly, nonatomic) _Bool supportsRaytracingFromRender;
@property(readonly, nonatomic) _Bool supportsReadWriteBufferArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArgumentsTier2;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureCubeArguments;
@property(readonly, nonatomic) _Bool supportsRelaxedTextureViewRequirements;
@property(readonly, nonatomic) _Bool supportsRenderDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsRenderMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsRenderPassWithoutRenderTarget;
@property(readonly, nonatomic) _Bool supportsRenderTargetTextureRotation;
@property(readonly, nonatomic) _Bool supportsRenderTextureWrites;
@property(readonly, nonatomic) _Bool supportsRenderToLinearTextures;
@property(readonly, nonatomic) _Bool supportsSIMDGroup;
@property(readonly, nonatomic) _Bool supportsSIMDGroupMatrix;
@property(readonly, nonatomic) _Bool supportsSIMDReduction;
@property(readonly, nonatomic) _Bool supportsSIMDShuffleAndFill;
@property(readonly, nonatomic) _Bool supportsSIMDShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsSRGBwrites;
@property(readonly, nonatomic) _Bool supportsSamplerAddressModeClampToHalfBorder;
@property(readonly, nonatomic) _Bool supportsSamplerCompareFunction;
@property(readonly, nonatomic) _Bool supportsSeparateDepthStencil;
@property(readonly, nonatomic) _Bool supportsSeparateVisibilityAndShadingRate;
@property(readonly, nonatomic) _Bool supportsSetThreadgroupPackingDisabled;
@property(readonly, nonatomic) _Bool supportsShaderBarycentricCoordinates;
@property(readonly, nonatomic) _Bool supportsShaderLODAverage;
@property(readonly, nonatomic) _Bool supportsShaderMinLODClamp;
@property(readonly, nonatomic) _Bool supportsSharedFunctionTables;
@property(readonly, nonatomic) _Bool supportsSharedStorageHeapResources;
@property(readonly, nonatomic) _Bool supportsSharedStorageTextures;
@property(readonly, nonatomic) _Bool supportsSharedTextureHandles;
@property(readonly, nonatomic) _Bool supportsSparseDepthAttachments;
@property(readonly, nonatomic) _Bool supportsSparseHeaps;
@property(readonly, nonatomic) _Bool supportsSparseTextures;
@property(readonly, nonatomic) _Bool supportsStackOverflowErrorCode;
@property(readonly, nonatomic) _Bool supportsStatefulDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsStencilFeedback;
@property(readonly, nonatomic) _Bool supportsStreamingCodecSignaling;
@property(readonly, nonatomic) _Bool supportsTLS;
@property(readonly, nonatomic) _Bool supportsTessellation;
@property(readonly, nonatomic) _Bool supportsTexture2DMultisampleArray;
@property(readonly, nonatomic) _Bool supportsTextureCubeArray;
@property(readonly, nonatomic) _Bool supportsTextureOutOfBoundsReads;
@property(readonly, nonatomic) _Bool supportsTextureSwizzle;
@property(readonly, nonatomic) _Bool supportsTileShaders;
@property(readonly, nonatomic) _Bool supportsUnalignedVertexFetch;
@property(readonly, nonatomic) _Bool supportsVariableRateRasterization;
@property(readonly, nonatomic) _Bool supportsVertexAmplification;
@property(readonly, nonatomic) _Bool supportsViewportAndScissorArray;
@property(readonly, nonatomic) _Bool supportsWritableArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsPQ;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsXR;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsPQ;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsXR;

@end

