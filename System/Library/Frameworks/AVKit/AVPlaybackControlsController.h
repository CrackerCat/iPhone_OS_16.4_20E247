//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVMediaSelectionMenuController, AVMobilePlaybackRateMenuController, AVNowPlayingInfoController, AVObservationController, AVPictureInPictureController, AVPlaybackControlsView, AVPlaybackSpeedCollection, AVPlayerController, AVPlayerControllerTimeResolver, AVPlayerControllerVolumeAnimator, AVPlayerViewController, AVRouteDetectorCoordinator, AVTimeFormatter, AVTurboModePlaybackControlsPlaceholderView, NSArray, NSNumber, NSString, NSTimer, NSUUID, UIAlertController, UIViewPropertyAnimator;
@protocol AVVolumeController;

__attribute__((visibility("hidden")))
@interface AVPlaybackControlsController : NSObject
{
    id _selectedPlaybackSpeedObservationToken;	// 8 = 0x8
    _Bool _playerViewControllerIsBeingTransitionedWithResizing;	// 16 = 0x10
    _Bool _playerViewControllerIsPresentingFullScreen;	// 17 = 0x11
    _Bool _playerViewControllerIsPresentedFullScreen;	// 18 = 0x12
    _Bool _playerViewControllerHasInvalidViewControllerHierarchy;	// 19 = 0x13
    _Bool _entersFullScreenWhenPlaybackBegins;	// 20 = 0x14
    _Bool _allowsEnteringFullScreen;	// 21 = 0x15
    _Bool _showsMinimalPlaybackControlsWhenEmbeddedInline;	// 22 = 0x16
    _Bool _inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;	// 23 = 0x17
    _Bool _volumeControlsCanShowSlider;	// 24 = 0x18
    _Bool _showsPictureInPictureButton;	// 25 = 0x19
    _Bool _showsPlaybackControls;	// 26 = 0x1a
    _Bool _hasCustomPlaybackControls;	// 27 = 0x1b
    _Bool _canIncludePlaybackControlsWhenInline;	// 28 = 0x1c
    _Bool _showsVideoGravityButton;	// 29 = 0x1d
    _Bool _requiresLinearPlayback;	// 30 = 0x1e
    _Bool _showsDoneButtonWhenFullScreen;	// 31 = 0x1f
    _Bool _playbackControlsIncludeTransportControls;	// 32 = 0x20
    _Bool _playbackControlsIncludeDisplayModeControls;	// 33 = 0x21
    _Bool _playbackControlsIncludeVolumeControls;	// 34 = 0x22
    _Bool _playbackControlsIncludeStartContentTransitionButtons;	// 35 = 0x23
    _Bool _forcePlaybackControlsHidden;	// 36 = 0x24
    _Bool _showsTimecodes;	// 37 = 0x25
    _Bool _wantsExternalPlaybackButtonShown;	// 38 = 0x26
    _Bool _startLeftwardContentTransitionButtonEnabled;	// 39 = 0x27
    _Bool _startRightwardContentTransitionButtonEnabled;	// 40 = 0x28
    _Bool _canHidePlaybackControls;	// 41 = 0x29
    _Bool _pictureInPictureActive;	// 42 = 0x2a
    _Bool _popoverIsBeingPresented;	// 43 = 0x2b
    _Bool _showsPlaybackSpeedButton;	// 44 = 0x2c
    _Bool _showsLoadingIndicator;	// 45 = 0x2d
    _Bool _canIncludeVideoGravityButton;	// 46 = 0x2e
    _Bool _hasStartedUpdates;	// 47 = 0x2f
    _Bool _coveringWindow;	// 48 = 0x30
    _Bool _hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;	// 49 = 0x31
    _Bool _hasBecomeReadyToPlay;	// 50 = 0x32
    _Bool _multipleRoutesDetected;	// 51 = 0x33
    _Bool _resumingUpdates;	// 52 = 0x34
    _Bool _prefersMuted;	// 53 = 0x35
    _Bool _playbackSuspendedForScrubbing;	// 54 = 0x36
    _Bool _hasSeekableLiveStreamingContent;	// 55 = 0x37
    _Bool _scrubbingOrSeeking;	// 56 = 0x38
    _Bool _shouldIgnoreTimeResolverUpdates;	// 57 = 0x39
    _Bool _hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties;	// 58 = 0x3a
    _Bool _videoScaled;	// 59 = 0x3b
    _Bool _hidingItemsForTransition;	// 60 = 0x3c
    _Bool _showingPlaybackControls;	// 61 = 0x3d
    _Bool _showingVolumeControlInTransportBar;	// 62 = 0x3e
    AVPlayerController *_playerController;	// 64 = 0x40
    AVPlaybackSpeedCollection *_playbackSpeedCollection;	// 72 = 0x48
    long long _preferredUnobscuredArea;	// 80 = 0x50
    NSArray *_customControlItems;	// 88 = 0x58
    NSArray *_transportBarCustomMenuItems;	// 96 = 0x60
    CDUnknownBlockType _playButtonHandlerForLazyPlayerLoading;	// 104 = 0x68
    CDUnknownBlockType _contentTransitionAction;	// 112 = 0x70
    AVPictureInPictureController *_pictureInPictureController;	// 120 = 0x78
    id <AVVolumeController> _volumeController;	// 128 = 0x80
    AVNowPlayingInfoController *_nowPlayingInfoControllerIfLoaded;	// 136 = 0x88
    AVPlayerViewController *_playerViewController;	// 144 = 0x90
    AVPlaybackControlsView *_playbackControlsView;	// 152 = 0x98
    AVTurboModePlaybackControlsPlaceholderView *_turboModePlaybackControlsPlaceholderView;	// 160 = 0xa0
    AVObservationController *_observationController;	// 168 = 0xa8
    AVObservationController *_playbackControlsObservationController;	// 176 = 0xb0
    AVPlayerControllerTimeResolver *_timeResolver;	// 184 = 0xb8
    AVTimeFormatter *_elapsedTimeFormatter;	// 192 = 0xc0
    AVTimeFormatter *_remainingTimeFormatter;	// 200 = 0xc8
    UIAlertController *_routePickerAlertController;	// 208 = 0xd0
    AVRouteDetectorCoordinator *_routeDetectorCoordinator;	// 216 = 0xd8
    id _AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;	// 224 = 0xe0
    NSTimer *_loadingIndicatorTimer;	// 232 = 0xe8
    UIViewPropertyAnimator *_collapseExpandSliderAnimator;	// 240 = 0xf0
    AVPlayerControllerVolumeAnimator *_volumeAnimator;	// 248 = 0xf8
    NSUUID *_playerMuteFadeAnimationID;	// 256 = 0x100
    AVMediaSelectionMenuController *_mediaSelectionMenuController;	// 264 = 0x108
    AVMobilePlaybackRateMenuController *_playbackRateMenuController;	// 272 = 0x110
    NSNumber *_pendingOrientationChange;	// 280 = 0x118
    double _loadingIndicatorTimerDelay;	// 288 = 0x120
    long long _timeControlStatus;	// 296 = 0x128
    long long _videoGravityButtonType;	// 304 = 0x130
    NSString *_uniqueIdentifer;	// 312 = 0x138
    NSString *_windowSceneSessionIdentifier;	// 320 = 0x140
    NSTimer *_playbackControlsVisibilityTimer;	// 328 = 0x148
    unsigned long long _userInteractingCount;	// 336 = 0x150
    struct CGRect _playbackViewFrame;	// 344 = 0x158
}

+ (id)keyPathsForValuesAffectingNeedsTimeResolver;	// IMP=0x00100000000bb4e5
+ (id)keyPathsForValuesAffectingPlayButtonsShowPauseGlyph;	// IMP=0x00100000000bb3f6
+ (id)keyPathsForValuesAffectingCanShowLoadingIndicator;	// IMP=0x00100000000bb327
+ (id)keyPathsForValuesAffectingShowsStartContentTransitionButtons;	// IMP=0x00100000000bb279
+ (id)keyPathsForValuesAffectingShowsSkipButtons;	// IMP=0x00100000000bb19f
+ (id)keyPathsForValuesAffectingSeekingEnabled;	// IMP=0x00100000000bb0f1
+ (id)keyPathsForValuesAffectingMaximumTime;	// IMP=0x00100000000bb043
+ (id)keyPathsForValuesAffectingMinimumTime;	// IMP=0x00100000000baf95
+ (id)keyPathsForValuesAffectingCurrentTime;	// IMP=0x00100000000baee7
+ (id)keyPathsForValuesAffectingShowsMediaSelectionButton;	// IMP=0x00100000000baec7
+ (id)keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins;	// IMP=0x00100000000bae0e
+ (id)keyPathsForValuesAffectingShowsTransportControls;	// IMP=0x00100000000bad55
+ (id)keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph;	// IMP=0x00100000000bacb2
+ (id)keyPathsForValuesAffectingShowsProminentPlayButton;	// IMP=0x00100000000bab6c
+ (id)keyPathsForValuesAffectingShowsRoutePickerView;	// IMP=0x00100000000baab3
+ (id)keyPathsForValuesAffectingFullScreen;	// IMP=0x00100000000ba9fa
- (void).cxx_destruct;	// IMP=0x00000000000b7a68
@property(nonatomic, getter=shouldShowVolumeControlInTransportBar) _Bool showingVolumeControlInTransportBar; // @synthesize showingVolumeControlInTransportBar=_showingVolumeControlInTransportBar;
@property(nonatomic, getter=isShowingPlaybackControls) _Bool showingPlaybackControls; // @synthesize showingPlaybackControls=_showingPlaybackControls;
@property(nonatomic, getter=isHidingItemsForTransition) _Bool hidingItemsForTransition; // @synthesize hidingItemsForTransition=_hidingItemsForTransition;
@property(nonatomic) unsigned long long userInteractingCount; // @synthesize userInteractingCount=_userInteractingCount;
@property(retain, nonatomic) NSTimer *playbackControlsVisibilityTimer; // @synthesize playbackControlsVisibilityTimer=_playbackControlsVisibilityTimer;
@property(retain, nonatomic) NSString *windowSceneSessionIdentifier; // @synthesize windowSceneSessionIdentifier=_windowSceneSessionIdentifier;
@property(readonly, nonatomic) NSString *uniqueIdentifer; // @synthesize uniqueIdentifer=_uniqueIdentifer;
@property(nonatomic, getter=isVideoScaled) _Bool videoScaled; // @synthesize videoScaled=_videoScaled;
@property(nonatomic) struct CGRect playbackViewFrame; // @synthesize playbackViewFrame=_playbackViewFrame;
@property(nonatomic) long long videoGravityButtonType; // @synthesize videoGravityButtonType=_videoGravityButtonType;
@property(nonatomic) _Bool hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties; // @synthesize hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties=_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties;
@property(nonatomic) _Bool shouldIgnoreTimeResolverUpdates; // @synthesize shouldIgnoreTimeResolverUpdates=_shouldIgnoreTimeResolverUpdates;
@property(nonatomic, getter=isScrubbingOrSeeking) _Bool scrubbingOrSeeking; // @synthesize scrubbingOrSeeking=_scrubbingOrSeeking;
@property(nonatomic) _Bool hasSeekableLiveStreamingContent; // @synthesize hasSeekableLiveStreamingContent=_hasSeekableLiveStreamingContent;
@property(nonatomic) long long timeControlStatus; // @synthesize timeControlStatus=_timeControlStatus;
@property(nonatomic, getter=isPlaybackSuspendedForScrubbing) _Bool playbackSuspendedForScrubbing; // @synthesize playbackSuspendedForScrubbing=_playbackSuspendedForScrubbing;
@property(nonatomic) _Bool prefersMuted; // @synthesize prefersMuted=_prefersMuted;
@property(nonatomic, getter=isResumingUpdates) _Bool resumingUpdates; // @synthesize resumingUpdates=_resumingUpdates;
@property(nonatomic) double loadingIndicatorTimerDelay; // @synthesize loadingIndicatorTimerDelay=_loadingIndicatorTimerDelay;
@property(nonatomic) _Bool multipleRoutesDetected; // @synthesize multipleRoutesDetected=_multipleRoutesDetected;
@property(nonatomic) _Bool hasBecomeReadyToPlay; // @synthesize hasBecomeReadyToPlay=_hasBecomeReadyToPlay;
@property(nonatomic) _Bool hasPlaybackBegunSincePlayerControllerBecameReadyToPlay; // @synthesize hasPlaybackBegunSincePlayerControllerBecameReadyToPlay=_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
@property(nonatomic, getter=isCoveringWindow) _Bool coveringWindow; // @synthesize coveringWindow=_coveringWindow;
@property(nonatomic) _Bool hasStartedUpdates; // @synthesize hasStartedUpdates=_hasStartedUpdates;
@property(retain, nonatomic) NSNumber *pendingOrientationChange; // @synthesize pendingOrientationChange=_pendingOrientationChange;
@property(nonatomic) _Bool canIncludeVideoGravityButton; // @synthesize canIncludeVideoGravityButton=_canIncludeVideoGravityButton;
@property(nonatomic) _Bool showsLoadingIndicator; // @synthesize showsLoadingIndicator=_showsLoadingIndicator;
@property(nonatomic) _Bool showsPlaybackSpeedButton; // @synthesize showsPlaybackSpeedButton=_showsPlaybackSpeedButton;
@property(retain, nonatomic) AVMobilePlaybackRateMenuController *playbackRateMenuController; // @synthesize playbackRateMenuController=_playbackRateMenuController;
@property(retain, nonatomic) AVMediaSelectionMenuController *mediaSelectionMenuController; // @synthesize mediaSelectionMenuController=_mediaSelectionMenuController;
@property(retain, nonatomic) NSUUID *playerMuteFadeAnimationID; // @synthesize playerMuteFadeAnimationID=_playerMuteFadeAnimationID;
@property(retain, nonatomic) AVPlayerControllerVolumeAnimator *volumeAnimator; // @synthesize volumeAnimator=_volumeAnimator;
@property(nonatomic) __weak UIViewPropertyAnimator *collapseExpandSliderAnimator; // @synthesize collapseExpandSliderAnimator=_collapseExpandSliderAnimator;
@property(nonatomic) __weak NSTimer *loadingIndicatorTimer; // @synthesize loadingIndicatorTimer=_loadingIndicatorTimer;
@property(retain, nonatomic) id AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver; // @synthesize AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver=_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
@property(retain, nonatomic) AVRouteDetectorCoordinator *routeDetectorCoordinator; // @synthesize routeDetectorCoordinator=_routeDetectorCoordinator;
@property(nonatomic) __weak UIAlertController *routePickerAlertController; // @synthesize routePickerAlertController=_routePickerAlertController;
@property(readonly, nonatomic) AVTimeFormatter *remainingTimeFormatter; // @synthesize remainingTimeFormatter=_remainingTimeFormatter;
@property(readonly, nonatomic) AVTimeFormatter *elapsedTimeFormatter; // @synthesize elapsedTimeFormatter=_elapsedTimeFormatter;
@property(retain, nonatomic) AVPlayerControllerTimeResolver *timeResolver; // @synthesize timeResolver=_timeResolver;
@property(retain, nonatomic) AVObservationController *playbackControlsObservationController; // @synthesize playbackControlsObservationController=_playbackControlsObservationController;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic) __weak AVTurboModePlaybackControlsPlaceholderView *turboModePlaybackControlsPlaceholderView; // @synthesize turboModePlaybackControlsPlaceholderView=_turboModePlaybackControlsPlaceholderView;
@property(retain, nonatomic) AVPlaybackControlsView *playbackControlsView; // @synthesize playbackControlsView=_playbackControlsView;
@property(readonly, nonatomic) __weak AVPlayerViewController *playerViewController; // @synthesize playerViewController=_playerViewController;
@property(nonatomic, getter=isPopoverBeingPresented) _Bool popoverIsBeingPresented; // @synthesize popoverIsBeingPresented=_popoverIsBeingPresented;
@property(nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) _Bool canHidePlaybackControls; // @synthesize canHidePlaybackControls=_canHidePlaybackControls;
@property(readonly, nonatomic) AVNowPlayingInfoController *nowPlayingInfoControllerIfLoaded; // @synthesize nowPlayingInfoControllerIfLoaded=_nowPlayingInfoControllerIfLoaded;
@property(retain, nonatomic) id <AVVolumeController> volumeController; // @synthesize volumeController=_volumeController;
@property(retain, nonatomic) AVPictureInPictureController *pictureInPictureController; // @synthesize pictureInPictureController=_pictureInPictureController;
@property(copy, nonatomic) CDUnknownBlockType contentTransitionAction; // @synthesize contentTransitionAction=_contentTransitionAction;
@property(nonatomic, getter=isStartRightwardContentTransitionButtonEnabled) _Bool startRightwardContentTransitionButtonEnabled; // @synthesize startRightwardContentTransitionButtonEnabled=_startRightwardContentTransitionButtonEnabled;
@property(nonatomic, getter=isStartLeftwardContentTransitionButtonEnabled) _Bool startLeftwardContentTransitionButtonEnabled; // @synthesize startLeftwardContentTransitionButtonEnabled=_startLeftwardContentTransitionButtonEnabled;
@property(copy, nonatomic) CDUnknownBlockType playButtonHandlerForLazyPlayerLoading; // @synthesize playButtonHandlerForLazyPlayerLoading=_playButtonHandlerForLazyPlayerLoading;
@property(nonatomic) _Bool wantsExternalPlaybackButtonShown; // @synthesize wantsExternalPlaybackButtonShown=_wantsExternalPlaybackButtonShown;
@property(nonatomic) _Bool showsTimecodes; // @synthesize showsTimecodes=_showsTimecodes;
@property(nonatomic) _Bool forcePlaybackControlsHidden; // @synthesize forcePlaybackControlsHidden=_forcePlaybackControlsHidden;
@property(nonatomic) _Bool playbackControlsIncludeStartContentTransitionButtons; // @synthesize playbackControlsIncludeStartContentTransitionButtons=_playbackControlsIncludeStartContentTransitionButtons;
@property(nonatomic) _Bool playbackControlsIncludeVolumeControls; // @synthesize playbackControlsIncludeVolumeControls=_playbackControlsIncludeVolumeControls;
@property(nonatomic) _Bool playbackControlsIncludeDisplayModeControls; // @synthesize playbackControlsIncludeDisplayModeControls=_playbackControlsIncludeDisplayModeControls;
@property(nonatomic) _Bool playbackControlsIncludeTransportControls; // @synthesize playbackControlsIncludeTransportControls=_playbackControlsIncludeTransportControls;
@property(nonatomic) _Bool showsDoneButtonWhenFullScreen; // @synthesize showsDoneButtonWhenFullScreen=_showsDoneButtonWhenFullScreen;
@property(nonatomic) _Bool requiresLinearPlayback; // @synthesize requiresLinearPlayback=_requiresLinearPlayback;
@property(nonatomic) _Bool showsVideoGravityButton; // @synthesize showsVideoGravityButton=_showsVideoGravityButton;
@property(nonatomic) _Bool canIncludePlaybackControlsWhenInline; // @synthesize canIncludePlaybackControlsWhenInline=_canIncludePlaybackControlsWhenInline;
@property(nonatomic) _Bool hasCustomPlaybackControls; // @synthesize hasCustomPlaybackControls=_hasCustomPlaybackControls;
@property(nonatomic) _Bool showsPlaybackControls; // @synthesize showsPlaybackControls=_showsPlaybackControls;
@property(nonatomic) _Bool showsPictureInPictureButton; // @synthesize showsPictureInPictureButton=_showsPictureInPictureButton;
@property(copy, nonatomic) NSArray *transportBarCustomMenuItems; // @synthesize transportBarCustomMenuItems=_transportBarCustomMenuItems;
@property(copy, nonatomic) NSArray *customControlItems; // @synthesize customControlItems=_customControlItems;
@property(nonatomic) _Bool volumeControlsCanShowSlider; // @synthesize volumeControlsCanShowSlider=_volumeControlsCanShowSlider;
@property(nonatomic) _Bool inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused; // @synthesize inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused=_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property(nonatomic) _Bool showsMinimalPlaybackControlsWhenEmbeddedInline; // @synthesize showsMinimalPlaybackControlsWhenEmbeddedInline=_showsMinimalPlaybackControlsWhenEmbeddedInline;
@property(nonatomic) _Bool allowsEnteringFullScreen; // @synthesize allowsEnteringFullScreen=_allowsEnteringFullScreen;
@property(nonatomic) long long preferredUnobscuredArea; // @synthesize preferredUnobscuredArea=_preferredUnobscuredArea;
@property(nonatomic) _Bool entersFullScreenWhenPlaybackBegins; // @synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins;
@property(nonatomic) _Bool playerViewControllerHasInvalidViewControllerHierarchy; // @synthesize playerViewControllerHasInvalidViewControllerHierarchy=_playerViewControllerHasInvalidViewControllerHierarchy;
@property(nonatomic) _Bool playerViewControllerIsPresentedFullScreen; // @synthesize playerViewControllerIsPresentedFullScreen=_playerViewControllerIsPresentedFullScreen;
@property(nonatomic) _Bool playerViewControllerIsPresentingFullScreen; // @synthesize playerViewControllerIsPresentingFullScreen=_playerViewControllerIsPresentingFullScreen;
@property(nonatomic) _Bool playerViewControllerIsBeingTransitionedWithResizing; // @synthesize playerViewControllerIsBeingTransitionedWithResizing=_playerViewControllerIsBeingTransitionedWithResizing;
@property(retain, nonatomic) AVPlaybackSpeedCollection *playbackSpeedCollection; // @synthesize playbackSpeedCollection=_playbackSpeedCollection;
@property(nonatomic) __weak AVPlayerController *playerController; // @synthesize playerController=_playerController;
- (void)_updateTransportBarCustomMenuItemsIfNeeded;	// IMP=0x00000000000b6eba
- (void)_updateRouteDetectionEnabled;	// IMP=0x00000000000b6e61
- (void)_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:(_Bool)arg1 playing:(_Bool)arg2 userDidEndTappingProminentPlayButton:(_Bool)arg3;	// IMP=0x00000000000b6e3d
- (void)_updateVolumeControllerView;	// IMP=0x00000000000b6e37
- (void)_updateVideoGravityButtonType;	// IMP=0x00000000000b69b9
- (void)_updatePhotosensitivityRegions;	// IMP=0x00000000000b6892
- (void)_handlePhotosensitiveRegions;	// IMP=0x00000000000b67e3
- (void)_updateScrubberAndTimeLabels;	// IMP=0x00000000000b5acb
- (void)_updatePlaybackSpeedControlInclusion;	// IMP=0x00000000000b59b8
- (void)_updateOrCreateTimeResolverIfNeeded;	// IMP=0x00000000000b53f7
- (void)_updateContainerInclusion;	// IMP=0x00000000000b528f
- (void)_updateControlInclusion;	// IMP=0x00000000000b51fd
- (void)_updateSkipButtonsEnableLongPress;	// IMP=0x00000000000b5093
- (_Bool)_wantsRouteDetectionEnabled;	// IMP=0x00000000000b4f52
- (void)_startObservingPotentiallyUnimplementedPlayerControllerProperties;	// IMP=0x00000000000b4b11
- (void)_startObservingForPlaybackViewUpdates;	// IMP=0x00000000000b35e5
- (void)_updatePlaybackControlsVisibleAndObservingUpdates;	// IMP=0x00000000000b332d
- (void)endHidingItemsForTransitionAndShowImmediately:(_Bool)arg1;	// IMP=0x00000000000b328f
- (void)_hideContextMenusIfPresented;	// IMP=0x00000000000b3208
- (void)beginHidingItemsForTransition;	// IMP=0x00000000000b31ce
@property(readonly, nonatomic, getter=isUserInteracting) _Bool userInteracting;
- (void)endUserInteraction;	// IMP=0x00000000000b3112
- (void)beginUserInteraction;	// IMP=0x00000000000b30b4
@property(readonly, nonatomic) _Bool prefersStatusBarHidden;
- (void)endShowingItemsDueToIndirectUserInteraction;	// IMP=0x00000000000b2e2c
- (void)beginShowingItemsDueToIndirectUserInteraction;	// IMP=0x00000000000b2dd9
- (void)_autoHideControlsAfterDelay:(double)arg1;	// IMP=0x00000000000b2c30
- (void)flashVolumeControlsWithDuration:(double)arg1;	// IMP=0x00000000000b2acb
- (void)showPlaybackControls:(_Bool)arg1 immediately:(_Bool)arg2;	// IMP=0x00000000000b295a
- (void)flashPlaybackControlsWithDuration:(double)arg1;	// IMP=0x00000000000b280c
- (void)_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:(_Bool)arg1;	// IMP=0x00000000000b23cf
- (void)togglePlaybackControlsVisibility;	// IMP=0x00000000000b22cb
- (void)_seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000b21e1
- (void)_observeBoolForKeyPath:(id)arg1 usingKeyValueObservationController:(id)arg2 observationHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b1f9c
- (void)_bindInclusionOfControlItems:(id)arg1 toKeyPath:(id)arg2;	// IMP=0x00000000000b1e80
- (void)_bindEnabledStateOfControls:(id)arg1 toKeyPath:(id)arg2;	// IMP=0x00000000000b1dac
- (void)startContentTransitionButtonTouchUpInside:(id)arg1;	// IMP=0x00000000000b1c24
- (void)skipButtonForcePressChanged:(id)arg1;	// IMP=0x00000000000b1b30
- (void)skipButtonLongPressEnded:(id)arg1;	// IMP=0x00000000000b1a14
- (void)skipButtonLongPressTriggered:(id)arg1;	// IMP=0x00000000000b18f8
- (void)skipButtonTouchUpInside:(id)arg1;	// IMP=0x00000000000b1720
- (void)prominentPlayButtonTouchUpInside:(id)arg1;	// IMP=0x00000000000b14d3
- (void)playbackSpeedButtonTapped:(id)arg1;	// IMP=0x00000000000b1487
- (id)overflowMenuItemsForControlOverflowButton:(id)arg1;	// IMP=0x00000000000b0a8e
- (void)overflowButtonWillShowContextMenu:(id)arg1;	// IMP=0x00000000000b0a7c
- (void)overflowButtonDidHideContextMenu:(id)arg1;	// IMP=0x00000000000b0a6a
- (void)mediaSelectionMenuController:(id)arg1 didSelectOption:(id)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000000000b09b4
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;	// IMP=0x00000000000b09a0
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;	// IMP=0x00000000000b0989
- (void)_updateVolumeSliderValueWithSystemVolume:(float)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b089e
- (id)_volumeButtonMicaPackageState;	// IMP=0x00000000000b065b
- (void)_updateVolumeButtonGlyph;	// IMP=0x00000000000b058e
- (void)_showOrHideDisplayModeControls;	// IMP=0x00000000000b00a9
- (_Bool)_prefersVolumeSliderExpandedAutomatically;	// IMP=0x00000000000afdc5
- (void)updateVolumeSliderValue:(id)arg1 volumeButtonControl:(id)arg2;	// IMP=0x00000000000afa6e
- (void)volumeButtonPanChanged:(id)arg1;	// IMP=0x00000000000af9bc
- (void)endChangingVolume;	// IMP=0x00000000000af97f
- (void)beginChangingVolume;	// IMP=0x00000000000af942
- (void)volumeButtonLongPressTriggered:(id)arg1;	// IMP=0x00000000000af92b
- (void)volumeButtonTapTriggered:(id)arg1;	// IMP=0x00000000000af879
- (void)volumeSliderValueDidChange:(id)arg1;	// IMP=0x00000000000af7d9
- (void)handleCurrentRouteSupportsVolumeControlChanged:(id)arg1;	// IMP=0x00000000000af689
- (void)handleVolumeChange:(id)arg1;	// IMP=0x00000000000af38a
- (void)endScrubbing;	// IMP=0x00000000000af311
- (void)scrubToTime:(double)arg1 resolution:(double)arg2;	// IMP=0x00000000000af0b2
- (void)beginScrubbing;	// IMP=0x00000000000af028
- (id)volumeControlsController:(id)arg1 volumeButtonControl:(id)arg2 viewContainingVolumeSlider:(id)arg3;	// IMP=0x00000000000af020
- (void)transportControls:(id)arg1 scrubberDidEndScrubbing:(id)arg2;	// IMP=0x00000000000aef83
- (void)transportControls:(id)arg1 scrubberDidScrub:(id)arg2;	// IMP=0x00000000000aee86
- (void)transportControls:(id)arg1 scrubberDidBeginScrubbing:(id)arg2;	// IMP=0x00000000000aee06
- (void)transportControlsNeedsLayoutIfNeeded:(id)arg1;	// IMP=0x00000000000aed85
- (void)playerViewControllerContentViewDidChangeSize:(id)arg1;	// IMP=0x00000000000aed73
- (struct CGSize)playerViewControllerContentViewContentDimensions:(id)arg1;	// IMP=0x00000000000aed19
- (void)playerViewControllerContentViewDidUpdateScrollingStatus:(id)arg1;	// IMP=0x00000000000aecdc
- (id)playerViewControllerContentViewOverrideLayoutClass:(id)arg1;	// IMP=0x00000000000aeac4
- (_Bool)playerViewControllerContentViewIsBeingTransitionedFromFullScreen:(id)arg1;	// IMP=0x00000000000aea36
- (_Bool)playerViewControllerContentViewHasActiveTransition:(id)arg1;	// IMP=0x00000000000ae9f2
- (void)playerViewControllerContentViewDidChangeVideoGravity:(id)arg1;	// IMP=0x00000000000ae90f
- (_Bool)playerViewControllerContentViewShouldApplyAutomaticVideoGravity:(id)arg1;	// IMP=0x00000000000ae52a
- (void)playerViewControllerContentViewDidLayoutSubviews:(id)arg1;	// IMP=0x00000000000ae358
- (void)playerViewControllerContentViewDidMoveToSuperviewOrWindow:(id)arg1;	// IMP=0x00000000000ae0cb
- (void)playerViewControllerContentViewPlaybackContentContainerViewChanged:(id)arg1;	// IMP=0x00000000000ae08e
- (void)turboModePlaybackControlsPlaceholderViewDidLoad:(id)arg1;	// IMP=0x00000000000adf13
- (void)playbackControlsViewDidLoad:(id)arg1;	// IMP=0x00000000000ac8b7
@property(readonly, nonatomic) _Bool tapGestureRecognizersCanReceiveTouches;
@property(readonly, nonatomic) _Bool needsTimeResolver;
@property(readonly, nonatomic) _Bool playButtonsShowPauseGlyph;
@property(readonly, nonatomic) _Bool canShowLoadingIndicator;
@property(readonly, nonatomic) _Bool showsStartContentTransitionButtons;
@property(readonly, nonatomic) _Bool showsSkipButtons;
@property(readonly, nonatomic, getter=isSeekingEnabled) _Bool seekingEnabled;
@property(readonly, nonatomic) double maximumTime;
@property(readonly, nonatomic) double minimumTime;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double targetTime;
@property(readonly, nonatomic) _Bool showsMediaSelectionButton;
@property(readonly, nonatomic) _Bool shouldEnterFullScreenWhenPlaybackBegins;
@property(readonly, nonatomic) _Bool showsTransportControls;
@property(readonly, nonatomic) _Bool prominentPlayButtonCanShowPauseGlyph;
@property(readonly, nonatomic) _Bool showsProminentPlayButton;
@property(readonly, nonatomic) _Bool showsRoutePickerView;
@property(readonly, nonatomic) _Bool entersFullScreenWhenTapped;
@property(readonly, nonatomic, getter=isFullScreen) _Bool fullScreen;
- (void)_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:(_Bool)arg1;	// IMP=0x00000000000aa835
- (void)toggleMuted;	// IMP=0x00000000000aa61e
- (void)startUpdatesIfNeeded;	// IMP=0x00000000000aa233
- (void)dealloc;	// IMP=0x00000000000aa061
- (id)initWithPlayerViewController:(id)arg1;	// IMP=0x00000000000a9e02

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

