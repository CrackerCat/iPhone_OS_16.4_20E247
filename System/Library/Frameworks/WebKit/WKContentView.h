//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDictionary, NSIndexSet, NSString, NSUndoManager, RTIInputSystemSourceSession, UIColor, UIContextMenuInteraction, UIGestureRecognizer, UIImage, UIInputContextHistory, UITextInputAssistantItem, UITextInputPasswordRules, UITextInputTraits, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWKTextInteractionAssistant, UIWebFormAccessory, UIWebTouchEventsGestureRecognizer, WKBrowsingContextController, WKDateTimeInputControl, WKFormSelectControl, _UISupplementalLexicon;
@protocol NSObject><NSCopying, UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, WKFormControl;

__attribute__((visibility("hidden")))
@interface WKContentView
{
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;	// 8 = 0x8
    struct WeakObjCPtr<WKWebView> _webView;	// 16 = 0x10
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForImmediatelyResettableGestures;	// 24 = 0x18
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForDelayedResettableGestures;	// 32 = 0x20
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForSyntheticTapGestures;	// 40 = 0x28
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForImmediatelyResettableGestures;	// 48 = 0x30
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForDelayedResettableGestures;	// 56 = 0x38
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForSyntheticTapGestures;	// 64 = 0x40
    struct RetainPtr<WKDeferringGestureRecognizer> _touchMoveDeferringGestureRecognizer;	// 72 = 0x48
    struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> _failedTouchStartDeferringGestures;	// 80 = 0x50
    struct RetainPtr<WKDeferringGestureRecognizer> _imageAnalysisDeferringGestureRecognizer;	// 96 = 0x60
    struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> _gestureRecognizerConsistencyEnforcer;	// 104 = 0x68
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> _touchEventGestureRecognizer;	// 112 = 0x70
    _Bool _touchEventsCanPreventNativeGestures;	// 120 = 0x78
    _Bool _preventsPanningInXAxis;	// 121 = 0x79
    _Bool _preventsPanningInYAxis;	// 122 = 0x7a
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _singleTapGestureRecognizer;	// 128 = 0x80
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;	// 136 = 0x88
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;	// 144 = 0x90
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _doubleTapGestureRecognizer;	// 152 = 0x98
    struct RetainPtr<UITapGestureRecognizer> _nonBlockingDoubleTapGestureRecognizer;	// 160 = 0xa0
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizerForDoubleClick;	// 168 = 0xa8
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;	// 176 = 0xb0
    struct RetainPtr<UITapGestureRecognizer> _twoFingerSingleTapGestureRecognizer;	// 184 = 0xb8
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> _inspectorNodeSearchGestureRecognizer;	// 192 = 0xc0
    struct RetainPtr<WKTouchActionGestureRecognizer> _touchActionGestureRecognizer;	// 200 = 0xc8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionLeftSwipeGestureRecognizer;	// 208 = 0xd0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionRightSwipeGestureRecognizer;	// 216 = 0xd8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionUpSwipeGestureRecognizer;	// 224 = 0xe0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionDownSwipeGestureRecognizer;	// 232 = 0xe8
    struct RetainPtr<WKMouseGestureRecognizer> _mouseGestureRecognizer;	// 240 = 0xf0
    unsigned char _mouseEventPolicy;	// 248 = 0xf8
    struct RetainPtr<WKMouseGestureRecognizer> _pencilHoverGestureRecognizer;	// 256 = 0x100
    struct RetainPtr<UIIndirectScribbleInteraction> _scribbleInteraction;	// 264 = 0x108
    struct RetainPtr<UIPointerInteraction> _pointerInteraction;	// 272 = 0x110
    _Bool _hasOutstandingPointerInteractionRequest;	// 280 = 0x118
    struct optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>>> _deferredPointerInteractionRequest;	// 288 = 0x120
    struct RetainPtr<UIWKTextInteractionAssistant> _textInteractionAssistant;	// 320 = 0x140
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;	// 328 = 0x148
    struct RetainPtr<UITextInputTraits> _traits;	// 336 = 0x150
    struct RetainPtr<UIWebFormAccessory> _formAccessoryView;	// 344 = 0x158
    struct RetainPtr<_UIHighlightView> _highlightView;	// 352 = 0x160
    struct RetainPtr<UIView> _interactionViewsContainerView;	// 360 = 0x168
    RetainPtr_f11d553d _contextMenuHintContainerView;	// 368 = 0x170
    struct WeakObjCPtr<UIScrollView> _scrollViewForTargetedPreview;	// 376 = 0x178
    struct CGPoint _scrollViewForTargetedPreviewInitialOffset;	// 384 = 0x180
    RetainPtr_f11d553d _dragPreviewContainerView;	// 400 = 0x190
    RetainPtr_f11d553d _dropPreviewContainerView;	// 408 = 0x198
    struct RetainPtr<NSString> _markedText;	// 416 = 0x1a0
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;	// 424 = 0x1a8
    struct RetainPtr<WKAirPlayRoutePicker> _airPlayRoutePicker;	// 432 = 0x1b0
    struct RetainPtr<WKFormInputSession> _formInputSession;	// 440 = 0x1b8
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;	// 448 = 0x1c0
    // Error: parsing type: '{FrameInfoData="isMainFrame"B"request"{ResourceRequest="m_requestData"{RequestData="m_url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"m_firstPartyForCookies"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"m_timeoutInterval"d"m_httpMethod"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_httpHeaderFields"{HTTPHeaderMap="m_commonHeaders"{Vector<WebCore::HTTPHeaderMap::CommonHeader, 0UL, WTF::CrashOnOverflow, 6UL, WTF::FastMalloc>="m_buffer"^{CommonHeader}"m_capacity"I"m_size"I}"m_uncommonHeaders"{Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0UL, WTF::CrashOnOverflow, 0UL, WTF::FastMalloc>="m_buffer"^{UncommonHeader}"m_capacity"I"m_size"I}}"m_responseContentDispositionEncodingFallbackArray"{Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{String}"m_capacity"I"m_size"I}"m_cachePolicy"C"m_sameSiteDisposition"C"m_priority"C"m_requester"C"m_isTopSite"b1"m_allowCookies"b1"m_isAppInitiated"b1}"m_initiatorIdentifier"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_cachePartition"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_httpBody"{RefPtr<WebCore::FormData, WTF::RawPtrTraits<WebCore::FormData>, WTF::DefaultRefDerefTraits<WebCore::FormData>>="m_ptr"^{FormData}}"m_inspectorInitiatorNodeIdentifier"{optional<int>=""(?="__null_state_"c"__val_"i)"__engaged_"B}"m_resourceRequestUpdated"b1"m_platformRequestUpdated"b1"m_resourceRequestBodyUpdated"b1"m_platformRequestBodyUpdated"b1"m_hiddenFromInspector"b1"m_systemPreviewInfo"{optional<WebCore::SystemPreviewInfo>=""(?="__null_state_"c"__val_"{SystemPreviewInfo="element"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"previewRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"isPreview"B})"__engaged_"B}"m_nsRequest"{RetainPtr<NSURLRequest>="m_ptr"^v}}"securityOrigin"{SecurityOriginData="protocol"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"host"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"port"{optional<unsigned short>=""(?="__null_state_"c"__val_"S)"__engaged_"B}}"frameName"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"frameID"{optional<WebCore::ProcessQualified<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>>=""(?="__null_state_"c"__val_"{ProcessQualified<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>="m_object"{ObjectIdentifier<WebCore::FrameIdentifierType>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}})"__engaged_"B}"parentFrameID"{optional<WebCore::ProcessQualified<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>>=""(?="__null_state_"c"__val_"{ProcessQualified<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>="m_object"{ObjectIdentifier<WebCore::FrameIdentifierType>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}})"__engaged_"B}}', name: _frameInfoForFileUploadPanel
    struct RetainPtr<WKShareSheet> _shareSheet;	// 896 = 0x380
    struct RetainPtr<WKContactPicker> _contactPicker;	// 904 = 0x388
    struct RetainPtr<UIGestureRecognizer> _previewGestureRecognizer;	// 912 = 0x390
    struct RetainPtr<UIGestureRecognizer> _previewSecondaryGestureRecognizer;	// 920 = 0x398
    struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _focusStateStack;	// 928 = 0x3a0
    struct RetainPtr<UIContextMenuInteraction> _contextMenuInteraction;	// 944 = 0x3b0
    struct RetainPtr<WKContextMenuElementInfo> _contextMenuElementInfo;	// 952 = 0x3b8
    _Bool _showLinkPreviews;	// 960 = 0x3c0
    struct RetainPtr<UIViewController> _contextMenuLegacyPreviewController;	// 968 = 0x3c8
    struct RetainPtr<UIMenu> _contextMenuLegacyMenu;	// 976 = 0x3d0
    _Bool _contextMenuHasRequestedLegacyData;	// 984 = 0x3d8
    _Bool _contextMenuActionProviderDelegateNeedsOverride;	// 985 = 0x3d9
    _Bool _contextMenuIsUsingAlternateURLForImage;	// 986 = 0x3da
    _Bool _isDisplayingContextMenuWithAnimation;	// 987 = 0x3db
    struct RetainPtr<UIPreviewItemController> _previewItemController;	// 992 = 0x3e0
    struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> _textIndicator;	// 1000 = 0x3e8
    struct RetainPtr<WebTextIndicatorLayer> _textIndicatorLayer;	// 1008 = 0x3f0
    struct RetainPtr<UITargetedPreview> _contextMenuInteractionTargetedPreview;	// 1016 = 0x3f8
    struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;	// 1024 = 0x400
    struct WeakObjCPtr<id<UITextInputDelegate>> _inputDelegate;	// 1032 = 0x408
    ObjectIdentifier_e7ec9792 _latestTapID;	// 1040 = 0x410
    struct TapHighlightInformation _tapHighlightInformation;	// 1048 = 0x418
    struct WebAutocorrectionContext _lastAutocorrectionContext;	// 1112 = 0x458
    struct WKAutoCorrectionData _autocorrectionData;	// 1160 = 0x488
    // Error: parsing type: '{InteractionInformationAtPosition="request"{InteractionInformationRequest="point"{IntPoint="m_x"i"m_y"i}"includeSnapshot"B"includeLinkIndicator"B"includeCaretContext"B"includeHasDoubleClickHandler"B"includeImageData"B"linkIndicatorShouldHaveLegacyMargins"B"disallowUserAgentShadowContent"B}"canBeValid"B"nodeAtPositionHasDoubleClickHandler"{optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}"selectability"C"isSelected"B"prefersDraggingOverTextSelection"B"isNearMarkedText"B"touchCalloutEnabled"B"isLink"B"isImage"B"isAttachment"B"isAnimatedImage"B"isPausedVideo"B"isElement"B"isContentEditable"B"containerScrollingNodeID"Q"isDataDetectorLink"B"preventTextInteraction"B"elementContainsImageOverlay"B"shouldNotUseIBeamInEditableContent"B"isImageOverlayText"B"isVerticalWritingMode"B"adjustedPointForNodeRespondingToClickEvents"{FloatPoint="m_x"f"m_y"f}"url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"idAttribute"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"bounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"image"{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}"textBefore"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"textAfter"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"caretLength"f"lineCaretExtent"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"cursor"{optional<WebCore::Cursor>=""(?="__null_state_"c"__val_"{Cursor="m_type"i"m_image"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"m_hotSpot"{IntPoint="m_x"i"m_y"i}"m_platformCursor"^v})"__engaged_"B}"linkIndicator"{TextIndicatorData="selectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textBoundingRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"contentImageWithoutSelectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textRectsInBoundingRectCoordinates"{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatRect}"m_capacity"I"m_size"I}"contentImageScaleFactor"f"contentImageWithHighlight"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImageWithoutSelection"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImage"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"estimatedBackgroundColor"{Color="m_colorAndFlags"Q}"presentationTransition"C"options"{OptionSet<WebCore::TextIndicatorOption>="m_storage"S}}"dataDetectorIdentifier"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"dataDetectorResults"{RetainPtr<NSArray>="m_ptr"^v}"dataDetectorBounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}"hostImageOrVideoElementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}}', name: _positionInformation
    // Error: parsing type: '{FocusedElementInformation="interactionRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"elementContext"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"lastInteractionLocation"{IntPoint="m_x"i"m_y"i}"minimumScaleFactor"d"maximumScaleFactor"d"maximumScaleFactorIgnoringAlwaysScalable"d"nodeFontSize"d"hasNextNode"B"nextNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"hasPreviousNode"B"previousNodeRect"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"isAutocorrect"B"isRTL"B"isMultiSelect"B"isReadOnly"B"allowsUserScaling"B"allowsUserScalingIgnoringAlwaysScalable"B"insideFixedPosition"B"autocapitalizeType"C"elementType"i"inputMode"C"enterKeyHint"C"formAction"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"selectOptions"{Vector<WebKit::OptionItem, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{OptionItem}"m_capacity"I"m_size"I}"selectedIndex"i"value"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"valueAsNumber"d"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"acceptsAutofilledLoginCredentials"B"isAutofillableUsernameField"B"representingPageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_cannotBeABaseURL"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"autofillFieldName"i"nonAutofillCredentialType"i"placeholder"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"label"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"ariaLabel"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"hasSuggestions"B"isFocusingWithDataListDropdown"B"colorValue"{Color="m_colorAndFlags"Q}"suggestedColors"{Vector<WebCore::Color, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{Color}"m_capacity"I"m_size"I}"shouldSynthesizeKeyEventsForEditing"B"isSpellCheckingEnabled"B"shouldAvoidResizingWhenInputViewBoundsChange"B"shouldAvoidScrollingWhenFocusedContentIsVisible"B"shouldUseLegacySelectPopoverDismissalBehaviorInDataActivation"B"isFocusingWithValidationMessage"B"preventScroll"B"identifier"{MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType>="m_identifier"Q}"containerScrollingNodeID"Q"frameID"{ProcessQualified<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>>="m_object"{ObjectIdentifier<WebCore::FrameIdentifierType>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}}', name: _focusedElementInformation
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;	// 2240 = 0x8c0
    struct BlockPtr<void (WebEvent *, bool)> _keyWebEventHandler;	// 2248 = 0x8c8
    struct CGPoint _lastInteractionLocation;	// 2256 = 0x8d0
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;	// 2272 = 0x8e0
    struct WKSelectionDrawingInfo _lastSelectionDrawingInfo;	// 2280 = 0x8e8
    struct RetainPtr<WKTextRange> _cachedSelectedTextRange;	// 2344 = 0x928
    struct optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;	// 2352 = 0x930
    unsigned long long _positionInformationCallbackDepth;	// 2376 = 0x948
    struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _pendingPositionInformationHandlers;	// 2384 = 0x950
    struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::default_delete<WebKit::InputViewUpdateDeferrer>> _inputViewUpdateDeferrer;	// 2400 = 0x960
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;	// 2408 = 0x968
    struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterEditorStateUpdate;	// 2416 = 0x970
    struct RetainPtr<UIView<WKFormControl>> _dataListTextSuggestionsInputView;	// 2432 = 0x980
    struct RetainPtr<NSArray<UITextSuggestion *>> _dataListTextSuggestions;	// 2440 = 0x988
    struct WeakObjCPtr<WKDataListSuggestionsControl> _dataListSuggestionsControl;	// 2448 = 0x990
    struct RefPtr<WebKit::RevealFocusedElementDeferrer, WTF::RawPtrTraits<WebKit::RevealFocusedElementDeferrer>, WTF::DefaultRefDerefTraits<WebKit::RevealFocusedElementDeferrer>> _revealFocusedElementDeferrer;	// 2456 = 0x998
    _Bool _isEditable;	// 2464 = 0x9a0
    _Bool _showingTextStyleOptions;	// 2465 = 0x9a1
    _Bool _hasValidPositionInformation;	// 2466 = 0x9a2
    _Bool _isTapHighlightIDValid;	// 2467 = 0x9a3
    _Bool _isTapHighlightFading;	// 2468 = 0x9a4
    _Bool _potentialTapInProgress;	// 2469 = 0x9a5
    _Bool _isDoubleTapPending;	// 2470 = 0x9a6
    _Bool _longPressCanClick;	// 2471 = 0x9a7
    _Bool _hasTapHighlightForPotentialTap;	// 2472 = 0x9a8
    _Bool _selectionNeedsUpdate;	// 2473 = 0x9a9
    _Bool _shouldRestoreSelection;	// 2474 = 0x9aa
    _Bool _usingGestureForSelection;	// 2475 = 0x9ab
    _Bool _inspectorNodeSearchEnabled;	// 2476 = 0x9ac
    _Bool _isChangingFocusUsingAccessoryTab;	// 2477 = 0x9ad
    _Bool _didAccessoryTabInitiateFocus;	// 2478 = 0x9ae
    _Bool _isExpectingFastSingleTapCommit;	// 2479 = 0x9af
    _Bool _showDebugTapHighlightsForFastClicking;	// 2480 = 0x9b0
    _Bool _textInteractionDidChangeFocusedElement;	// 2481 = 0x9b1
    _Bool _treatAsContentEditableUntilNextEditorStateUpdate;	// 2482 = 0x9b2
    _Bool _isWaitingOnPositionInformation;	// 2483 = 0x9b3
    _Bool _autocorrectionContextNeedsUpdate;	// 2484 = 0x9b4
    int _commitPotentialTapPointerId;	// 2488 = 0x9b8
    _Bool _keyboardDidRequestDismissal;	// 2492 = 0x9bc
    _Bool _candidateViewNeedsUpdate;	// 2493 = 0x9bd
    _Bool _seenHardwareKeyDownInNonEditableElement;	// 2494 = 0x9be
    _Bool _becomingFirstResponder;	// 2495 = 0x9bf
    _Bool _resigningFirstResponder;	// 2496 = 0x9c0
    _Bool _needsDeferredEndScrollingSelectionUpdate;	// 2497 = 0x9c1
    _Bool _isChangingFocus;	// 2498 = 0x9c2
    _Bool _isFocusingElementWithKeyboard;	// 2499 = 0x9c3
    _Bool _isBlurringFocusedElement;	// 2500 = 0x9c4
    _Bool _isRelinquishingFirstResponderToFocusedElement;	// 2501 = 0x9c5
    _Bool _unsuppressSoftwareKeyboardAfterNextAutocorrectionContextUpdate;	// 2502 = 0x9c6
    _Bool _isUnsuppressingSoftwareKeyboardUsingLastAutocorrectionContext;	// 2503 = 0x9c7
    _Bool _waitingForKeyboardAppearanceAnimationToStart;	// 2504 = 0x9c8
    _Bool _isHidingKeyboard;	// 2505 = 0x9c9
    _Bool _isPreparingEditMenu;	// 2506 = 0x9ca
    _Bool _focusRequiresStrongPasswordAssistance;	// 2507 = 0x9cb
    _Bool _waitingForEditDragSnapshot;	// 2508 = 0x9cc
    long long _dropAnimationCount;	// 2512 = 0x9d0
    _Bool _hasSetUpInteractions;	// 2520 = 0x9d8
    unsigned long long _ignoreSelectionCommandFadeCount;	// 2528 = 0x9e0
    unsigned long long _activeTextInteractionCount;	// 2536 = 0x9e8
    long long _suppressNonEditableSingleTapTextInteractionCount;	// 2544 = 0x9f0
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> _domPasteRequestHandler;	// 2552 = 0x9f8
    struct optional<WebCore::DOMPasteAccessCategory> _domPasteRequestCategory;	// 2560 = 0xa00
    struct BlockPtr<void (UIWKAutocorrectionContext *)> _pendingAutocorrectionContextHandler;	// 2568 = 0xa08
    struct CompletionHandler<void ()> _pendingRunModalJavaScriptDialogCallback;	// 2576 = 0xa10
    struct RetainPtr<NSDictionary> _additionalContextForStrongPasswordAssistance;	// 2584 = 0xa18
    struct optional<int> _lastInsertedCharacterToOverrideCharacterBeforeSelection;	// 2592 = 0xa20
    unsigned int _selectionChangeNestingLevel;	// 2600 = 0xa28
    struct DragDropInteractionState _dragDropInteractionState;	// 2608 = 0xa30
    struct RetainPtr<UIDragInteraction> _dragInteraction;	// 3048 = 0xbe8
    struct RetainPtr<UIDropInteraction> _dropInteraction;	// 3056 = 0xbf0
    _Bool _isAnimatingDragCancel;	// 3064 = 0xbf8
    _Bool _shouldRestoreCalloutBarAfterDrop;	// 3065 = 0xbf9
    struct RetainPtr<UIView> _visibleContentViewSnapshot;	// 3072 = 0xc00
    struct RetainPtr<UIView> _unselectedContentSnapshot;	// 3080 = 0xc08
    struct RetainPtr<_UITextDragCaretView> _editDropCaretView;	// 3088 = 0xc10
    struct BlockPtr<void ()> _actionToPerformAfterReceivingEditDragSnapshot;	// 3096 = 0xc18
    struct RetainPtr<WKImageAnalysisGestureRecognizer> _imageAnalysisGestureRecognizer;	// 3104 = 0xc20
    struct RetainPtr<UILongPressGestureRecognizer> _imageAnalysisTimeoutGestureRecognizer;	// 3112 = 0xc28
    struct optional<WTF::ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType>> _pendingImageAnalysisRequestIdentifier;	// 3120 = 0xc30
    // Error: parsing type: '{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}})"__engaged_"B}', name: _elementPendingImageAnalysis
    struct Vector<WTF::BlockPtr<void (WebKit::ProceedWithTextSelectionInImage)>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterPendingImageAnalysis;	// 3232 = 0xca0
    _Bool _contextMenuWasTriggeredByImageAnalysisTimeout;	// 3248 = 0xcb0
    _Bool _isProceedingWithTextSelectionInImage;	// 3249 = 0xcb1
    struct RetainPtr<VKCImageAnalyzer> _imageAnalyzer;	// 3256 = 0xcb8
    struct RetainPtr<QLPreviewController> _visualSearchPreviewController;	// 3264 = 0xcc0
    RetainPtr_337fe565 _visualSearchPreviewImage;	// 3272 = 0xcc8
    struct RetainPtr<NSURL> _visualSearchPreviewImageURL;	// 3280 = 0xcd0
    struct RetainPtr<NSString> _visualSearchPreviewTitle;	// 3288 = 0xcd8
    struct CGRect _visualSearchPreviewImageBounds;	// 3296 = 0xce0
    _Bool _waitingForDynamicImageAnalysisContextMenuActions;	// 3328 = 0xd00
    struct optional<WebKit::ImageAnalysisContextMenuActionData> _imageAnalysisContextMenuActionData;	// 3336 = 0xd08
    unsigned int _fullscreenVideoImageAnalysisRequestIdentifier;	// 3368 = 0xd28
    struct RetainPtr<VKCImageAnalysisInteraction> _imageAnalysisInteraction;	// 3376 = 0xd30
    struct RetainPtr<NSMutableSet<UIButton *>> _imageAnalysisActionButtons;	// 3384 = 0xd38
    struct FloatRect _imageAnalysisInteractionBounds;	// 3392 = 0xd40
    // Error: parsing type: '{optional<WebKit::RemoveBackgroundData>=""(?="__null_state_"c"__val_"{RemoveBackgroundData="element"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifier<WebCore::PageIdentifierType>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifier<WebCore::ProcessIdentifierType>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifier<WebCore::ElementIdentifierType>="m_identifier"Q}}"image"{RetainPtr<CGImage *>="m_ptr"^v}"preferredMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}})"__engaged_"B}', name: _removeBackgroundData
    struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> _pageClient;	// 3520 = 0xdc0
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;	// 3528 = 0xdc8
    struct RetainPtr<UIView> _rootContentView;	// 3536 = 0xdd0
    struct RetainPtr<UIView> _fixedClippingView;	// 3544 = 0xdd8
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;	// 3552 = 0xde0
    struct RetainPtr<WKInspectorHighlightView> _inspectorHighlightView;	// 3560 = 0xde8
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForWebProcess;	// 3568 = 0xdf0
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForGPUProcess;	// 3576 = 0xdf8
    struct HistoricalVelocityData _historicalKinematicData;	// 3584 = 0xe00
    struct RetainPtr<NSUndoManager> _undoManager;	// 3672 = 0xe58
    struct RetainPtr<WKQuirkyNSUndoManager> _quirkyUndoManager;	// 3680 = 0xe60
    struct Lock _pendingBackgroundPrintFormattersLock;	// 3688 = 0xe68
    struct RetainPtr<NSMutableSet> _pendingBackgroundPrintFormatters;	// 3696 = 0xe70
    struct ObjectIdentifier<IPC::Connection::AsyncReplyIDType> _pdfPrintCallbackID;	// 3704 = 0xe78
    struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _temporaryURLsToDeleteWhenDeallocated;	// 3712 = 0xe80
    _Bool _sizeChangedSinceLastVisibleContentRectUpdate;	// 3728 = 0xe90
}

- (id).cxx_construct;	// IMP=0x00000000008e9fca
- (void).cxx_destruct;	// IMP=0x00000000008e91b6
@property(nonatomic) _Bool sizeChangedSinceLastVisibleContentRectUpdate; // @synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate;
@property(readonly, nonatomic, getter=isResigningFirstResponder) _Bool resigningFirstResponder; // @synthesize resigningFirstResponder=_resigningFirstResponder;
- (void)_screenCapturedDidChange:(id)arg1;	// IMP=0x00000000008e913d
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000008e9105
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x00000000008e90cd
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x00000000008e90b8
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x00000000008e9086
- (double)_targetContentZoomScaleForRect:(const struct FloatRect *)arg1 currentScale:(double)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5;	// IMP=0x00000000008e9029
- (double)_contentZoomScale;	// IMP=0x00000000008e9008
- (double)_initialScaleFactor;	// IMP=0x00000000008e8fe7
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint)arg1;	// IMP=0x00000000008e8f88
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;	// IMP=0x00000000008e8f29
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;	// IMP=0x00000000008e8e87
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;	// IMP=0x00000000008e8df8
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;	// IMP=0x00000000008e8d76
- (void)_setAcceleratedCompositingRootView:(id)arg1;	// IMP=0x00000000008e8c24
- (void)_layerTreeCommitComplete;	// IMP=0x00000000008e8c03
- (void)_didCommitLayerTree:(const void *)arg1;	// IMP=0x00000000008e890f
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;	// IMP=0x00000000008e88fd
- (void)_webProcessDidCreateContextForVisibilityPropagation;	// IMP=0x00000000008e88eb
- (void)_didRelaunchProcess;	// IMP=0x00000000008e88a3
- (void)_processWillSwap;	// IMP=0x00000000008e8891
- (void)_gpuProcessDidExit;	// IMP=0x00000000008e887f
- (void)_processDidExit;	// IMP=0x00000000008e8819
- (unique_ptr_7306e13f)_createDrawingAreaProxy:(void *)arg1;	// IMP=0x00000000008e87ab
- (void)_resetPrintingState;	// IMP=0x00000000008e85ec
- (void)_webViewDestroyed;	// IMP=0x00000000008e85d9
- (void)_accessibilityRegisterUIProcessTokens;	// IMP=0x00000000008e8489
- (void)_updateRemoteAccessibilityRegistration:(_Bool)arg1;	// IMP=0x00000000008e8483
- (void)_setAccessibilityWebProcessToken:(id)arg1;	// IMP=0x00000000008e8471
- (void)_updateForScreen:(id)arg1;	// IMP=0x00000000008e8417
- (void)_windowDidMoveToScreenNotification:(id)arg1;	// IMP=0x00000000008e83ce
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x00000000008e834e
- (_Bool)canBecomeFocused;	// IMP=0x00000000008e82bd
@property(readonly, nonatomic) long long interfaceOrientation;
@property(readonly, nonatomic) NSUndoManager *undoManagerForWebView;
- (void)didZoomToScale:(double)arg1;	// IMP=0x00000000008e81d7
- (void)willStartZoomOrScroll;	// IMP=0x00000000008e81c5
- (void)didInterruptScrolling;	// IMP=0x00000000008e81b1
- (void)didFinishScrolling;	// IMP=0x00000000008e819f
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 contentInsets:(struct UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg4 obscuredInsets:(struct UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(struct UIEdgeInsets)arg6 inputViewBounds:(struct CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 viewStability:(OptionSet_5ff1ced1)arg10 enclosedInScrollableAncestorView:(_Bool)arg11 sendEvenIfUnchanged:(_Bool)arg12;	// IMP=0x00000000008e7d69
- (struct CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect)arg1 inputViewBounds:(struct CGRect)arg2;	// IMP=0x00000000008e7c4d
- (void)_didExitStableState;	// IMP=0x00000000008e7c04
- (void)updateFixedClippingView:(struct FloatRect)arg1;	// IMP=0x00000000008e7b28
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
- (void)_hideInspectorHighlight;	// IMP=0x00000000008e79ca
- (void)_showInspectorHighlight:(const void *)arg1;	// IMP=0x00000000008e78f8
@property(readonly, nonatomic) _Bool isFocusingElement;
- (struct OpaqueWKPage *)_pageRef;	// IMP=0x00000000008e78c8
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;	// IMP=0x00000000008e77f8
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000008e7725
- (id)rootContentView;	// IMP=0x00000000008e7714
- (id)webView;	// IMP=0x00000000008e7703
@property(readonly, nonatomic) void *page;
- (void)_removeTemporaryDirectoriesWhenDeallocated:(void *)arg1;	// IMP=0x00000000008e7654
- (void)_removeTemporaryFilesIfNecessary;	// IMP=0x00000000008e7566
- (void)dealloc;	// IMP=0x00000000008e74dc
- (id)initWithFrame:(struct CGRect)arg1 processPool:(NakedRef_6f117943)arg2 configuration:(void *)arg3 webView:(id)arg4;	// IMP=0x00000000008e7405
- (void)_removeVisibilityPropagationViewForGPUProcess;	// IMP=0x00000000008e7347
- (void)_removeVisibilityPropagationViewForWebProcess;	// IMP=0x00000000008e7289
- (void)_setupVisibilityPropagationViewForGPUProcess;	// IMP=0x00000000008e7114
- (void)_setupVisibilityPropagationViewForWebProcess;	// IMP=0x00000000008e6fd0
- (id)_commonInitializationWithProcessPool:(void *)arg1 configuration:(void *)arg2;	// IMP=0x00000000008e6a66
- (void)_wk_requestDocumentForPrintFormatter:(id)arg1;	// IMP=0x00000000008eafae
- (void)_waitForDrawToPDFCallbackForPrintFormatterIfNeeded:(id)arg1;	// IMP=0x00000000008eadda
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;	// IMP=0x00000000008ea813
@property(readonly, nonatomic) _Bool _wk_printFormatterRequiresMainThread;
- (optional_b1dac33b)_frameIdentifierForPrintFormatter:(id)arg1;	// IMP=0x00000000008ea7ae
- (void)willDismissEditMenuWithAnimator:(id)arg1;	// IMP=0x00000000009149dc
- (void)willPresentEditMenuWithAnimator:(id)arg1;	// IMP=0x0000000000914952
@property(readonly, nonatomic, getter=isImageBacked) _Bool imageBacked;
@property(readonly, nonatomic) _Bool _shouldAvoidSecurityHeuristicScoreUpdates;
- (void)uninstallImageAnalysisInteraction;	// IMP=0x00000000009147d1
- (void)installImageAnalysisInteraction:(id)arg1;	// IMP=0x00000000009144ba
- (void)cancelTextRecognitionForVideoInElementFullscreen;	// IMP=0x000000000091444e
- (void)beginTextRecognitionForVideoInElementFullscreen:(const void *)arg1 bounds:(struct FloatRect)arg2;	// IMP=0x00000000009141b3
@property(readonly, nonatomic) _Bool isTextRecognitionInFullscreenVideoEnabled;
- (void)cancelTextRecognitionForFullscreenVideo:(id)arg1;	// IMP=0x0000000000914101
- (void)beginTextRecognitionForFullscreenVideo:(const void *)arg1 playerViewController:(id)arg2;	// IMP=0x0000000000913e78
- (_Bool)imageAnalysisInteraction:(id)arg1 shouldBeginAtPoint:(struct CGPoint)arg2 forAnalysisType:(unsigned long long)arg3;	// IMP=0x0000000000913e25
- (struct CGRect)contentsRectForImageAnalysisInteraction:(id)arg1;	// IMP=0x0000000000913d74
- (void)actionSheetAssistant:(id)arg1 copySubject:(id)arg2 sourceMIMEType:(id)arg3;	// IMP=0x0000000000913a10
- (_Bool)actionSheetAssistantShouldIncludeCopySubjectAction:(id)arg1;	// IMP=0x00000000009139f7
- (void)captureTextFromCameraForWebView:(id)arg1;	// IMP=0x00000000009139c8
- (void)imageAnalysisGestureDidTimeOut:(id)arg1;	// IMP=0x00000000009131a3
- (void)imageAnalysisGestureDidFail:(id)arg1;	// IMP=0x000000000091318f
- (void)_completeImageAnalysisRequestForContextMenu:(struct CGImage *)arg1 requestIdentifier:(ObjectIdentifier_073ef476)arg2 hasTextResults:(_Bool)arg3;	// IMP=0x00000000009129a3
- (void)imageAnalysisGestureDidBegin:(id)arg1;	// IMP=0x00000000009120a2
- (void)requestTextRecognition:(id)arg1 imageData:(const void *)arg2 sourceLanguageIdentifier:(id)arg3 targetLanguageIdentifier:(id)arg4 completionHandler:(void *)arg5;	// IMP=0x0000000000911ce9
- (_Bool)validateImageAnalysisRequestIdentifier:(ObjectIdentifier_073ef476)arg1;	// IMP=0x0000000000911c24
- (void)updateImageAnalysisForContextMenuPresentation:(id)arg1;	// IMP=0x0000000000911be9
- (RetainPtr_acb19053)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2;	// IMP=0x0000000000911b88
- (RetainPtr_acb19053)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2 imageURL:(id)arg3;	// IMP=0x0000000000911a95
- (void)_cancelImageAnalysis;	// IMP=0x00000000009119b0
- (void)_tearDownImageAnalysis;	// IMP=0x0000000000911830
- (void)_setUpImageAnalysis;	// IMP=0x00000000009116c6
- (_Bool)hasPendingImageAnalysisRequest;	// IMP=0x00000000009116b5
- (id)imageAnalyzer;	// IMP=0x000000000091164b
- (void)actionSheetAssistant:(id)arg1 lookUpImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;	// IMP=0x0000000000911627
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeLookUpImageActionForElement:(id)arg2;	// IMP=0x00000000009115f0
- (void)actionSheetAssistant:(id)arg1 showTextForImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;	// IMP=0x00000000009115cc
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeShowTextActionForElement:(id)arg2;	// IMP=0x0000000000911595
- (id)provideDataForItem:(id)arg1;	// IMP=0x00000000009114ea
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;	// IMP=0x00000000009112c2
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;	// IMP=0x00000000009112b7
- (void)previewControllerDidDismiss:(id)arg1;	// IMP=0x0000000000911231
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;	// IMP=0x00000000009111b3
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;	// IMP=0x0000000000911190
- (void)presentVisualSearchPreviewControllerForImage:(id)arg1 imageURL:(id)arg2 title:(id)arg3 imageBounds:(struct CGRect)arg4 appearanceActions:(unsigned long long)arg5;	// IMP=0x0000000000911009
- (id)machineReadableCodeSubMenuForImageContextMenu;	// IMP=0x0000000000910fc1
- (struct CGImage *)copySubjectResultForImageContextMenu;	// IMP=0x0000000000910f75
- (_Bool)hasVisualSearchResultsForImageContextMenu;	// IMP=0x0000000000910f28
- (_Bool)hasSelectableTextForImageContextMenu;	// IMP=0x0000000000910e5d
- (void)requestRectForFoundTextRange:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000910d05
- (long long)compareFoundRange:(id)arg1 toRange:(id)arg2 inDocument:(id)arg3;	// IMP=0x0000000000910c99
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 inDocument:(id)arg3;	// IMP=0x0000000000910c87
@property(readonly, nonatomic) _Bool supportsTextReplacementForWebView;
@property(readonly, nonatomic) _Bool supportsTextReplacement;
- (void)didEndTextSearchOperation;	// IMP=0x0000000000910bec
- (void)didBeginTextSearchOperation;	// IMP=0x0000000000910ba7
- (void)clearAllDecoratedFoundText;	// IMP=0x0000000000910b62
- (void)scrollRangeToVisible:(id)arg1 inDocument:(id)arg2;	// IMP=0x0000000000910abd
- (void)decorateFoundTextRange:(id)arg1 inDocument:(id)arg2 usingStyle:(long long)arg3;	// IMP=0x00000000009109e7
- (void)replaceFoundTextInRange:(id)arg1 inDocument:(id)arg2 withText:(id)arg3;	// IMP=0x00000000009108be
- (void)performTextSearchWithQueryString:(id)arg1 usingOptions:(id)arg2 resultAggregator:(id)arg3;	// IMP=0x00000000009106e4
- (void)_findSelectedForWebView:(id)arg1;	// IMP=0x000000000091069a
- (void)useSelectionForFindForWebView:(id)arg1;	// IMP=0x00000000009105fe
- (void)startFadeOut;	// IMP=0x00000000009104a9
- (void)teardownTextIndicatorLayer;	// IMP=0x0000000000910468
- (void)setTextIndicatorAnimationProgress:(float)arg1;	// IMP=0x000000000091043b
- (void)clearTextIndicator:(unsigned char)arg1;	// IMP=0x0000000000910363
- (void)setUpTextIndicator:(Ref_72f36232)arg1;	// IMP=0x00000000009101ee
- (void)_invokeAllActionsToPerformAfterPendingImageAnalysis:(_Bool)arg1;	// IMP=0x0000000000910104
- (void)_doAfterPendingImageAnalysis:(CDUnknownBlockType)arg1;	// IMP=0x0000000000910042
- (void)_endImageAnalysisGestureDeferral:(_Bool)arg1;	// IMP=0x0000000000910025
- (void)_writePromisedAttachmentToPasteboard:(void *)arg1;	// IMP=0x000000000090fb4b
- (void)_didExitFullscreen;	// IMP=0x000000000090fb34
- (void)_didEnterFullscreen;	// IMP=0x000000000090fb1d
- (void)indirectScribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;	// IMP=0x000000000090fadf
- (void)indirectScribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;	// IMP=0x000000000090faa1
- (struct CGRect)indirectScribbleInteraction:(id)arg1 frameForElement:(id)arg2;	// IMP=0x000000000090fa4a
- (void)indirectScribbleInteraction:(id)arg1 focusElementIfNeeded:(id)arg2 referencePoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000090f9df
- (_Bool)indirectScribbleInteraction:(id)arg1 isElementFocused:(id)arg2;	// IMP=0x000000000090f9ab
- (void)indirectScribbleInteraction:(id)arg1 requestElementsInRect:(struct CGRect)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000090f996
- (_Bool)_elementForTextInputContextIsFocused:(id)arg1;	// IMP=0x000000000090f915
- (id)_textInputContextByScribbleIdentifier:(id)arg1;	// IMP=0x000000000090f8bb
- (void)cleanUpScribbleInteraction;	// IMP=0x000000000090f87a
- (void)setUpScribbleInteraction;	// IMP=0x000000000090f81d
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;	// IMP=0x000000000090f607
- (id)pointerRegionForPositionInformation:(void *)arg1 point:(struct CGPoint)arg2;	// IMP=0x000000000090f3cb
- (void)_pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000090eaa9
- (void)setUpPointerInteraction;	// IMP=0x000000000090ea2d
- (void)_showMediaControlsContextMenu:(struct FloatRect *)arg1 items:(void *)arg2 completionHandler:(void *)arg3;	// IMP=0x000000000090ea10
- (void)_setMouseEventPolicy:(unsigned char)arg1;	// IMP=0x000000000090e9f4
- (void)_configureMouseGestureRecognizer;	// IMP=0x000000000090e956
- (void)mouseGestureRecognizerChanged:(id)arg1;	// IMP=0x000000000090e7dc
- (void)setUpMouseGestureRecognizer;	// IMP=0x000000000090e6de
- (_Bool)shouldUseMouseGestureRecognizer;	// IMP=0x000000000090e569
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x000000000090e531
- (id)appHighlightMenu;	// IMP=0x000000000090e396
- (id)menuWithInlineAction:(id)arg1 image:(id)arg2 identifier:(id)arg3 handler:(void *)arg4;	// IMP=0x000000000090e17e
- (void)buildMenuForWebViewWithBuilder:(id)arg1;	// IMP=0x000000000090e107
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;	// IMP=0x000000000090df0b
- (void)_dropInteraction:(id)arg1 delayedPreviewProviderForDroppingItem:(id)arg2 previewProvider:(CDUnknownBlockType)arg3;	// IMP=0x000000000090def4
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x000000000090dd20
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;	// IMP=0x000000000090dc47
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;	// IMP=0x000000000090dae2
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;	// IMP=0x000000000090cf8f
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;	// IMP=0x000000000090cd95
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;	// IMP=0x000000000090c9f9
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;	// IMP=0x000000000090c810
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;	// IMP=0x000000000090c73b
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x000000000090c6bd
- (void)dragInteraction:(id)arg1 sessionDidTransferItems:(id)arg2;	// IMP=0x000000000090c6a0
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;	// IMP=0x000000000090c312
- (_Bool)_dragInteraction:(id)arg1 item:(id)arg2 shouldDelaySetDownAnimationWithCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000090c2fb
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x000000000090c24c
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;	// IMP=0x000000000090bfb3
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;	// IMP=0x000000000090be9a
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;	// IMP=0x000000000090b9e1
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;	// IMP=0x000000000090b932
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;	// IMP=0x000000000090b53e
- (void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000090b280
- (void)_dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000090b0ee
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x000000000090b070
- (_Bool)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;	// IMP=0x000000000090b036
- (_Bool)_handleDropByInsertingImagePlaceholders:(id)arg1 session:(id)arg2;	// IMP=0x000000000090aa1b
- (void)removeTextPlaceholder:(id)arg1 willInsertText:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000090a926
- (void)insertTextPlaceholderWithSize:(struct CGSize)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000090a7ff
- (void)selectPositionAtPoint:(struct CGPoint)arg1 withContextRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000090a669
- (void)requestDocumentContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000090a31e
- (void)adjustSelectionWithDelta:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000090a269
- (void)presentContextMenu:(id)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x000000000090a21a
- (void)_removeContextMenuHintContainerIfPossible;	// IMP=0x000000000090a152
- (id)_createTargetedContextMenuHintPreviewIfPossible;	// IMP=0x00000000009098ef
- (_Bool)positionInformationHasImageOverlayDataDetector;	// IMP=0x00000000009098bc
- (id)_createTargetedContextMenuHintPreviewForFocusedElement;	// IMP=0x0000000000909527
@property(readonly, nonatomic) _Bool supportsImagePaste;
- (id)_autofillContext;	// IMP=0x00000000009092c7
- (id)textEffectsWindow;	// IMP=0x0000000000909287
- (void)cancelActiveTextInteractionGestures;	// IMP=0x000000000090922c
- (id)_itemsForBeginningOrAddingToSessionWithRegistrationLists:(id)arg1 stagedDragSource:(const void *)arg2;	// IMP=0x00000000009089da
- (void)_restoreCalloutBarIfNeeded;	// IMP=0x00000000009089a0
- (id)currentDragOrDropSession;	// IMP=0x0000000000908984
- (OptionSet_401d6bae)_allowedDragSourceActions;	// IMP=0x0000000000908911
- (unsigned long long)_dragDestinationActionForDropSession:(id)arg1;	// IMP=0x000000000090888e
- (void)_prepareToDragPromisedAttachment:(const void *)arg1;	// IMP=0x0000000000907d62
- (void)_didChangeDragCaretRect:(struct CGRect)arg1 currentRect:(struct CGRect)arg2;	// IMP=0x0000000000907bf0
- (void)_didPerformDragOperation:(_Bool)arg1;	// IMP=0x000000000090796e
- (void)_deliverDelayedDropPreviewIfPossible:(optional_2e6e99e4)arg1;	// IMP=0x000000000090772b
- (void)_didReceiveEditDragSnapshot:(optional_2e6e99e4)arg1;	// IMP=0x0000000000907677
- (void)_willReceiveEditDragSnapshot;	// IMP=0x0000000000907666
- (void)cleanUpDragSourceSessionState;	// IMP=0x00000000009071f1
- (struct DragData)dragDataForDropSession:(id)arg1 dragDestinationAction:(unsigned long long)arg2;	// IMP=0x0000000000907015
- (void)computeClientAndGlobalPointsForDropSession:(id)arg1 outClientPoint:(struct CGPoint *)arg2 outGlobalPoint:(struct CGPoint *)arg3;	// IMP=0x0000000000906fcf
- (void)_didHandleDragStartRequest:(_Bool)arg1;	// IMP=0x0000000000906e19
- (void)_didHandleAdditionalDragItemsRequest:(_Bool)arg1;	// IMP=0x0000000000906aa0
- (void)_startDrag:(RetainPtr_c27edd19)arg1 item:(const void *)arg2;	// IMP=0x00000000009069d6
- (void)teardownDragAndDropInteractions;	// IMP=0x0000000000906943
- (void)setUpDragAndDropInteractions;	// IMP=0x0000000000906800
- (id)webViewUIDelegate;	// IMP=0x00000000009067df
- (double)dragLiftDelay;	// IMP=0x0000000000906781
- (void)_didChangeDragInteractionPolicy;	// IMP=0x0000000000906714
- (_Bool)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2;	// IMP=0x0000000000906264
- (void)deferringGestureRecognizer:(id)arg1 didEndTouchesWithEvent:(id)arg2;	// IMP=0x0000000000906167
- (void)deferringGestureRecognizer:(id)arg1 didTransitionToState:(long long)arg2;	// IMP=0x0000000000906135
- (_Bool)deferringGestureRecognizer:(id)arg1 willBeginTouchesWithEvent:(id)arg2;	// IMP=0x00000000009060ab
- (void)_updateTargetedPreviewScrollViewUsingContainerScrollingNodeID:(unsigned long long)arg1;	// IMP=0x0000000000905f99
- (void)_updateFrameOfContainerForContextMenuHintPreviewsIfNeeded;	// IMP=0x0000000000905e8e
- (void)_removeContainerForContextMenuHintPreviews;	// IMP=0x0000000000905e15
- (id)containerForContextMenuHintPreviews;	// IMP=0x0000000000905cda
- (void)_removeContainerForDragPreviews;	// IMP=0x0000000000905c87
- (id)containerForDragPreviews;	// IMP=0x0000000000905bf0
- (void)_removeContainerForDropPreviews;	// IMP=0x0000000000905b9d
- (id)containerForDropPreviews;	// IMP=0x0000000000905b06
- (RetainPtr_f11d553d)_createPreviewContainerWithLayerName:(id)arg1;	// IMP=0x0000000000905a2f
- (unsigned char)_dataOwnerForPasteboard:(_Bool)arg1;	// IMP=0x000000000090599c
- (_Bool)shouldDeferGestureDueToImageAnalysis:(id)arg1;	// IMP=0x0000000000905936
@property(readonly, nonatomic) _Bool _shouldUseLegacySelectPopoverDismissalBehavior;
@property(readonly, nonatomic) _Bool _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property(readonly, nonatomic) _Bool _shouldAvoidResizingWhenInputViewBoundsChange;
@property(readonly, nonatomic) _Bool _shouldUseContextMenusForFormControls;
@property(readonly, nonatomic) _Bool _shouldUseContextMenus;
- (void)_targetedPreviewContainerDidRemoveLastSubview:(id)arg1;	// IMP=0x0000000000905854
- (void)actionSheetAssistantDidDismissContextMenu:(id)arg1;	// IMP=0x0000000000905833
- (void)actionSheetAssistantDidShowContextMenu:(id)arg1;	// IMP=0x0000000000905812
- (void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000905800
- (id)createTargetedContextMenuHintForActionSheetAssistant:(id)arg1;	// IMP=0x00000000009057ee
- (void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000090570e
- (id)selectedTextForActionSheetAssistant:(id)arg1;	// IMP=0x00000000009056fc
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;	// IMP=0x00000000009056e7
- (id)dataDetectionContextForPositionInformation:(const void *)arg1;	// IMP=0x0000000000905496
- (void)actionSheetAssistantDidStopInteraction:(id)arg1;	// IMP=0x0000000000905464
- (void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2;	// IMP=0x0000000000905418
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;	// IMP=0x000000000090539f
- (struct CGRect)unoccludedWindowBoundsForActionSheetAssistant:(id)arg1;	// IMP=0x000000000090523f
- (_Bool)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2;	// IMP=0x000000000090518f
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;	// IMP=0x0000000000905169
- (void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x0000000000904d15
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x0000000000904ac4
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;	// IMP=0x0000000000904ab0
- (void)actionSheetAssistant:(id)arg1 performAction:(_Bool)arg2;	// IMP=0x0000000000904a99
- (void)updatePositionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x0000000000904a1f
-     // Error parsing type: {optional<WebKit::InteractionInformationAtPosition>=(?=c{InteractionInformationAtPosition={InteractionInformationRequest={IntPoint=ii}BBBBBBB}B{optional<bool>=(?=cB)B}CBBBBBBBBBBBQBBBBBB{FloatPoint=ff}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{URL={String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}b1b1b1b3b26IIIIIII}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{IntRect={IntPoint=ii}{IntSize=ii}}{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>=^{ShareableBitmap}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}f{FloatRect={FloatPoint=ff}{FloatSize=ff}}{optional<WebCore::Cursor>=(?=c{Cursor=i{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{IntPoint=ii}^v})B}{TextIndicatorData={FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{FloatRect={FloatPoint=ff}{FloatSize=ff}}{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>=^{FloatRect}II}f{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>=^{Image}}{Color=Q}C{OptionSet<WebCore::TextIndicatorOption>=S}}{String={RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>=^{StringImpl}}}{RetainPtr<NSArray>=^v}{IntRect={IntPoint=ii}{IntSize=ii}}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}{optional<WebCore::ElementContext>=(?=c{ElementContext={FloatRect={FloatPoint=ff}{FloatSize=ff}}{ObjectIdentifier<WebCore::PageIdentifierType>=Q}{ProcessQualified<WTF::UUID>={UUID=T}{ObjectIdentifier<WebCore::ProcessIdentifierType>=Q}}{ObjectIdentifier<WebCore::ElementIdentifierType>=Q}})B}})B}24@0:8@16, name: positionInformationForActionSheetAssistant:
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;	// IMP=0x0000000000904972
- (_Bool)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2;	// IMP=0x00000000009047ba
- (_Bool)gestureRecognizer:(id)arg1 shouldIgnoreWebTouchWithEvent:(id)arg2;	// IMP=0x0000000000904730
- (void)_preserveFocusWithToken:(id)arg1 destructively:(_Bool)arg2;	// IMP=0x0000000000904662
- (void)stopRelinquishingFirstResponderToFocusedElement;	// IMP=0x000000000090462e
- (void)startRelinquishingFirstResponderToFocusedElement;	// IMP=0x00000000009045fa
- (_Bool)_restoreFocusWithToken:(id)arg1;	// IMP=0x00000000009045b4
- (id)inputLabelText;	// IMP=0x0000000000904551
- (void)contactPickerDidDismiss:(id)arg1;	// IMP=0x00000000009044f4
- (void)contactPickerDidPresent:(id)arg1;	// IMP=0x00000000009044d3
- (void)_showContactPicker:(const void *)arg1 completionHandler:(void *)arg2;	// IMP=0x0000000000904431
- (void)shareSheet:(id)arg1 willShowActivityItems:(id)arg2;	// IMP=0x00000000009043a3
- (void)shareSheetDidDismiss:(id)arg1;	// IMP=0x0000000000904360
- (void)_showShareSheet:(const void *)arg1 inRect:(optional_1d8eff86)arg2 completionHandler:(void *)arg3;	// IMP=0x00000000009041f9
- (_Bool)fileUploadPanelDestinationIsManaged:(id)arg1;	// IMP=0x00000000009040dd
- (void)fileUploadPanelDidDismiss:(id)arg1;	// IMP=0x000000000090409a
- (void)_showRunOpenPanel:(struct OpenPanelParameters *)arg1 frameInfo:(const void *)arg2 resultListener:(struct WebOpenPanelResultListenerProxy *)arg3;	// IMP=0x0000000000903f25
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4;	// IMP=0x0000000000903eaa
- (void)updateTextSuggestionsForInputDelegate;	// IMP=0x0000000000903e16
@property(retain, nonatomic) NSArray *dataListTextSuggestions;
@property(retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x0000000000903c97
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x0000000000903c65
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x0000000000903c51
- (_Bool)hasHiddenContentEditable;	// IMP=0x0000000000903c3d
- (void)prepareSelectionForContextMenuWithLocationInView:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000903a87
- (void)requestRVItemInSelectedRangeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000090397d
- (_Bool)supportsTextSelectionWithCharacterGranularity;	// IMP=0x0000000000903975
- (_Bool)shouldAllowHidingSelectionCommands;	// IMP=0x0000000000903960
- (void)_updateChangedSelection:(_Bool)arg1;	// IMP=0x00000000009031b5
- (void)_updateChangedSelection;	// IMP=0x00000000009031a1
- (void)selectWordForReplacement;	// IMP=0x00000000009030a7
- (void)_selectionChanged;	// IMP=0x0000000000902ef8
- (void)_updateSelectionAssistantSuppressionState;	// IMP=0x0000000000902ddf
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x0000000000902db0
- (void)reloadContextViewForPresentedListViewController;	// IMP=0x0000000000902daa
- (void)updateCurrentFocusedElementInformation:(void *)arg1;	// IMP=0x0000000000902c2e
- (void)_updateInitialWritingDirectionIfNecessary;	// IMP=0x0000000000902bad
- (void)_didUpdateEditorState;	// IMP=0x0000000000902ac4
- (void)doAfterEditorStateUpdateAfterFocusingElement:(CDUnknownBlockType)arg1;	// IMP=0x0000000000902a10
- (void)_requestDOMPasteAccessForCategory:(unsigned char)arg1 elementRect:(const struct IntRect *)arg2 originIdentifier:(const void *)arg3 completionHandler:(void *)arg4;	// IMP=0x00000000009025f8
- (void)_didUpdateInputMode:(unsigned char)arg1;	// IMP=0x000000000090259d
- (void)_hardwareKeyboardAvailabilityChanged;	// IMP=0x0000000000902580
@property(readonly, nonatomic) _Bool shouldIgnoreKeyboardWillHideNotification;
- (void)_updateInputContextAfterBlurringAndRefocusingElement;	// IMP=0x00000000009024cc
- (void)_elementDidBlur;	// IMP=0x0000000000902292
- (void)_elementDidFocus:(const void *)arg1 userIsInteracting:(_Bool)arg2 blurPreviousNode:(_Bool)arg3 activityStateChanges:(OptionSet_05ce0fa5)arg4 userObject:(id)arg5;	// IMP=0x00000000009017d0
- (_Bool)_shouldShowKeyboardForElementIgnoringInputMode:(const void *)arg1;	// IMP=0x00000000009017a2
- (_Bool)_shouldShowKeyboardForElement:(const void *)arg1;	// IMP=0x0000000000901783
- (void *)focusedSelectElementOptions;	// IMP=0x000000000090176d
@property(readonly, nonatomic) const void *focusedElementInformation;
- (_Bool)_formControlRefreshEnabled;	// IMP=0x0000000000901706
- (void)_hideKeyboard;	// IMP=0x0000000000901659
- (void)_showKeyboard;	// IMP=0x00000000009015f4
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x00000000009015c3
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000009015bb
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000009015b3
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000009015ab
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x00000000009014d7
- (_Bool)hasSelection;	// IMP=0x00000000009014cf
- (id)fontForCaretSelection;	// IMP=0x000000000090144d
- (id)textColorForCaretSelection;	// IMP=0x0000000000901434
- (void)selectAll;	// IMP=0x000000000090142e
- (_Bool)hasContent;	// IMP=0x00000000009013fd
- (void)setMarkedText:(id)arg1;	// IMP=0x00000000009013f7
- (id)wordRangeContainingCaretSelection;	// IMP=0x00000000009013ef
- (id)wordContainingCaretSelection;	// IMP=0x00000000009013e7
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x00000000009013df
- (void)moveForward:(unsigned int)arg1;	// IMP=0x00000000009013d9
- (void)moveBackward:(unsigned int)arg1;	// IMP=0x00000000009013d3
- (id)metadataDictionariesForDictationResults;	// IMP=0x00000000009013cb
@property(nonatomic) long long selectionGranularity;
- (id)automaticallySelectedOverlay;	// IMP=0x00000000009013b1
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x00000000009013ab
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000090137f
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000901353
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000009012f1
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000009012c5
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000901299
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000090126d
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000090120b
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000009011df
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x00000000009011b3
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x0000000000901187
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000090115b
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000090112f
- (void)_transpose;	// IMP=0x0000000000901116
- (void)_deleteToEndOfParagraph;	// IMP=0x00000000009010fd
- (void)_deleteForwardAndNotify:(_Bool)arg1;	// IMP=0x00000000009010e4
- (void)_deleteToEndOfLine;	// IMP=0x00000000009010cb
- (void)_deleteToStartOfLine;	// IMP=0x00000000009010b2
- (void)_deleteForwardByWord;	// IMP=0x0000000000901099
- (void)_deleteByWord;	// IMP=0x0000000000901080
- (void)executeEditCommandWithCallback:(id)arg1;	// IMP=0x0000000000900f08
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1;	// IMP=0x0000000000900eac
- (void)keyboardScrollViewAnimatorWillScroll:(id)arg1;	// IMP=0x0000000000900e9a
- (double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3;	// IMP=0x0000000000900cdf
- (_Bool)isScrollableForKeyboardScrollViewAnimator:(id)arg1;	// IMP=0x0000000000900c7a
- (void)dismissFilePicker;	// IMP=0x0000000000900c5d
- (id)filePickerAcceptedTypeIdentifiers;	// IMP=0x0000000000900c32
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;	// IMP=0x0000000000900a1a
- (void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(_Bool)arg2;	// IMP=0x000000000090096b
- (void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000900778
- (void)handleKeyWebEvent:(id)arg1;	// IMP=0x000000000090071e
- (void)generateSyntheticEditingCommand:(unsigned char)arg1;	// IMP=0x0000000000900707
- (void)_handleKeyUIEvent:(id)arg1;	// IMP=0x0000000000900623
- (_Bool)requiresKeyEvents;	// IMP=0x000000000090061b
- (_Bool)shouldSuppressUpdateCandidateView;	// IMP=0x000000000090060b
- (void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2;	// IMP=0x00000000009004c9
- (void)_didFinishTextInteractionInTextInputContext:(id)arg1;	// IMP=0x00000000009003fd
- (void)_willBeginTextInteractionInTextInputContext:(id)arg1;	// IMP=0x0000000000900379
- (void)_requestTextInputContextsInRect:(struct CGRect)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000009001a0
- (void)_focusTextInputContext:(id)arg1 placeCaretAt:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fff68
- (_Bool)_isTextInputContextFocused:(id)arg1;	// IMP=0x00000000008ffef1
- (struct CGRect)rectContainingCaretSelection;	// IMP=0x00000000008ffed3
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x00000000008ffecd
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;	// IMP=0x00000000008ffec7
- (id)selectedDOMRange;	// IMP=0x00000000008ffebf
- (struct _NSRange)_markedTextNSRange;	// IMP=0x00000000008ffead
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;	// IMP=0x00000000008ffe8f
- (struct _NSRange)selectionRange;	// IMP=0x00000000008ffe7d
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (void)_updateTextInputTraits:(id)arg1;	// IMP=0x00000000008ff966
@property(readonly, nonatomic) UITextInputTraits *textInputTraitsForWebView;
- (id)textInputTraits;	// IMP=0x00000000008ff89f
- (void)removeEmojiAlternatives;	// IMP=0x00000000008ff7d2
- (void)addTextAlternatives:(id)arg1;	// IMP=0x00000000008ff735
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x00000000008ff49a
- (void)insertText:(id)arg1;	// IMP=0x00000000008ff337
- (_Bool)_shouldSimulateKeyboardInputOnTextInsertion;	// IMP=0x00000000008ff31a
- (void)deleteBackward;	// IMP=0x00000000008ff287
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000008ff27f
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x00000000008ff277
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x00000000008ff26f
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x00000000008ff251
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x00000000008ff1bc
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000008ff1b4
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000008ff1ac
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x00000000008ff1a4
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000008ff0f5
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000008ff0ed
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x00000000008ff0e5
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x00000000008ff0dd
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000008ff0d5
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x00000000008ff089
- (void)_setMarkedText:(id)arg1 underlines:(const void *)arg2 highlights:(const void *)arg3 selectedRange:(struct _NSRange)arg4;	// IMP=0x00000000008fef87
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000008fef13
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000008feaf6
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;	// IMP=0x00000000008fe92b
- (_Bool)hasMarkedText;	// IMP=0x00000000008fe907
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x00000000008fe8b6
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x00000000008fe880
- (struct FloatRect)_scaledCaretRectForSelectionEnd:(struct FloatRect)arg1;	// IMP=0x00000000008fe533
- (struct FloatRect)_scaledCaretRectForSelectionStart:(struct FloatRect)arg1;	// IMP=0x00000000008fe4d4
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x00000000008fe4ce
- (id)textInRange:(id)arg1;	// IMP=0x00000000008fe469
- (void)insertTextSuggestion:(id)arg1;	// IMP=0x00000000008fe21f
- (void)_didChangeWebViewEditability;	// IMP=0x00000000008fe160
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;	// IMP=0x00000000008fe093
- (void)endSelectionChange;	// IMP=0x00000000008fe050
- (void)beginSelectionChange;	// IMP=0x00000000008fe00a
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x00000000008fe002
- (void)_updateAccessory;	// IMP=0x00000000008fdf12
- (void)accessoryOpen;	// IMP=0x00000000008fdeb4
@property(readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
- (void)accessoryAutoFill;	// IMP=0x00000000008fdd9c
- (void)accessoryTab:(_Bool)arg1;	// IMP=0x00000000008fdcb8
- (void)updateFocusedElementFocusedWithDataListDropdown:(_Bool)arg1;	// IMP=0x00000000008fdc98
- (void)updateFocusedElementSelectedIndex:(unsigned int)arg1 allowsMultipleSelection:(_Bool)arg2;	// IMP=0x00000000008fdc40
- (void)updateFocusedElementValueAsColor:(id)arg1;	// IMP=0x00000000008fdabd
- (void)updateFocusedElementValue:(id)arg1;	// IMP=0x00000000008fd99d
- (void)accessoryDone;	// IMP=0x00000000008fd935
- (void)accessoryClear;	// IMP=0x00000000008fd88f
- (void)_setDoubleTapGesturesEnabled:(_Bool)arg1;	// IMP=0x00000000008fd74b
- (struct Color)_tapHighlightColorForFastClick:(_Bool)arg1;	// IMP=0x00000000008fd721
- (void)_becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008fd5e0
- (void)_previousAccessoryTabForWebView:(id)arg1;	// IMP=0x00000000008fd5cc
- (void)_nextAccessoryTabForWebView:(id)arg1;	// IMP=0x00000000008fd5b5
- (void)_didCommitLoadForMainFrame;	// IMP=0x00000000008fd4ee
- (void)_didStartProvisionalLoadForMainFrame;	// IMP=0x00000000008fd489
- (void)runModalJavaScriptDialog:(void *)arg1;	// IMP=0x00000000008fd41e
- (void)unsuppressSoftwareKeyboardUsingLastAutocorrectionContextIfNeeded;	// IMP=0x00000000008fd3c6
- (void)updateSoftwareKeyboardSuppressionStateFromWebView;	// IMP=0x00000000008fd31c
- (void)_handleAutocorrectionContext:(const void *)arg1;	// IMP=0x00000000008fd296
- (void)requestAutocorrectionContextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008fd064
- (void)_cancelPendingAutocorrectionContextHandler;	// IMP=0x00000000008fd02c
- (void)_invokePendingAutocorrectionContextHandler:(id)arg1;	// IMP=0x00000000008fcfe5
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fce62
- (void)requestDictationContext:(CDUnknownBlockType)arg1;	// IMP=0x00000000008fcdc0
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;	// IMP=0x00000000008fcc9e
- (void)didInsertFinalDictationResult;	// IMP=0x00000000008fcc6c
- (void)willInsertFinalDictationResult;	// IMP=0x00000000008fcc3a
- (struct CGRect)textLastRect;	// IMP=0x00000000008fcba0
- (struct CGRect)textFirstRect;	// IMP=0x00000000008fcb14
- (_Bool)_selectionAtDocumentStart;	// IMP=0x00000000008fcaec
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;	// IMP=0x00000000008fca79
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fc89e
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008fc72c
- (void)beginSelectionInDirection:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008fc615
- (void)selectTextWithGranularity:(long long)arg1 atPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fc44f
- (void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fc2ad
- (void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(struct CGPoint)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008fc0d9
- (void)_selectPositionAtPoint:(struct CGPoint)arg1 stayingWithinFocusedElement:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fbf5d
- (void)selectPositionAtPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008fbefb
- (_Bool)_handleTapOverImageAnalysisInteractionButton:(struct CGPoint)arg1;	// IMP=0x00000000008fbdff
- (void)doAfterComputingImageAnalysisResultsForBackgroundRemoval:(void *)arg1;	// IMP=0x00000000008fbaa2
- (id)removeBackgroundMenu;	// IMP=0x00000000008fb848
- (void)_requestEvasionRectsAboveSelectionIfNeeded:(void *)arg1;	// IMP=0x00000000008fb68b
- (void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008fb5e9
- (void)requestPreferredArrowDirectionForEditMenuWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008fb547
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008fb369
@property(readonly, nonatomic) const void *autocorrectionData;
- (void)moveByOffset:(long long)arg1;	// IMP=0x00000000008fb287
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;	// IMP=0x00000000008fb115
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;	// IMP=0x00000000008fafe1
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;	// IMP=0x00000000008faa3c
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;	// IMP=0x00000000008faa24
- (_Bool)_hasFocusedElement;	// IMP=0x00000000008faa0c
- (void)_didPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x00000000008fa9ed
- (void)_willPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x00000000008fa9ce
- (_Bool)_handleDOMPasteRequestWithResult:(unsigned char)arg1;	// IMP=0x00000000008fa8a7
- (void)_accessibilityClearSelection;	// IMP=0x00000000008fa875
- (void)_accessibilityStoreSelection;	// IMP=0x00000000008fa843
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008fa6ae
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2;	// IMP=0x00000000008fa699
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2;	// IMP=0x00000000008fa5c6
- (void)accessibilityRetrieveSpeakSelectionContent;	// IMP=0x00000000008fa45c
- (void)_defineForWebView:(id)arg1;	// IMP=0x00000000008fa44a
- (void)_showDictionary:(id)arg1;	// IMP=0x00000000008fa3b4
- (void)_showTextStyleOptionsForWebView:(id)arg1;	// IMP=0x00000000008fa38c
- (void)toggleUnderlineForWebView:(id)arg1;	// IMP=0x00000000008fa31f
- (void)toggleItalicsForWebView:(id)arg1;	// IMP=0x00000000008fa2b2
- (void)toggleBoldfaceForWebView:(id)arg1;	// IMP=0x00000000008fa245
- (_Bool)shouldSynthesizeKeyEvents;	// IMP=0x00000000008fa217
- (void)selectAllForWebView:(id)arg1;	// IMP=0x00000000008fa176
- (void)selectForWebView:(id)arg1;	// IMP=0x00000000008fa09a
- (void)_pasteAsQuotationForWebView:(id)arg1;	// IMP=0x00000000008f9ffc
- (void)pasteForWebView:(id)arg1;	// IMP=0x00000000008f9f21
- (void)cutForWebView:(id)arg1;	// IMP=0x00000000008f9f08
- (void)copyForWebView:(id)arg1;	// IMP=0x00000000008f9e75
- (void)_keyboardDidRequestDismissal:(id)arg1;	// IMP=0x00000000008f9e49
- (void)_didHideMenu:(id)arg1;	// IMP=0x00000000008f9e21
- (void)_willHideMenu:(id)arg1;	// IMP=0x00000000008f9e0d
- (id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000008f9dde
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000008f9dab
- (_Bool)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000008f91f8
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000008f8fe9
- (_Bool)shouldAllowAppHighlightCreation;	// IMP=0x00000000008f8eff
- (void)tintColorDidChange;	// IMP=0x00000000008f8e3f
- (void)_updateInteractionTintColor:(id)arg1;	// IMP=0x00000000008f8e0e
- (id)_cascadeInteractionTintColor;	// IMP=0x00000000008f8c3e
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000008f8a40
- (void)toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x00000000008f8a2e
- (void)_setTextColorForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x00000000008f88cc
- (void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2;	// IMP=0x00000000008f8845
- (void)_setFontForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x00000000008f8607
- (void)decreaseSizeForWebView:(id)arg1;	// IMP=0x00000000008f8538
- (void)increaseSizeForWebView:(id)arg1;	// IMP=0x00000000008f8469
- (void)_toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x00000000008f83d6
- (void)_changeListTypeForWebView:(id)arg1;	// IMP=0x00000000008f83c1
- (void)_decreaseListLevelForWebView:(id)arg1;	// IMP=0x00000000008f83ac
- (void)_increaseListLevelForWebView:(id)arg1;	// IMP=0x00000000008f8397
- (void)pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x00000000008f8385
- (void)_pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x00000000008f82f2
- (void)alignJustifiedForWebView:(id)arg1;	// IMP=0x00000000008f82e0
- (void)_alignJustifiedForWebView:(id)arg1;	// IMP=0x00000000008f824d
- (void)alignCenterForWebView:(id)arg1;	// IMP=0x00000000008f823b
- (void)_alignCenterForWebView:(id)arg1;	// IMP=0x00000000008f81a8
- (void)alignRightForWebView:(id)arg1;	// IMP=0x00000000008f8196
- (void)_alignRightForWebView:(id)arg1;	// IMP=0x00000000008f8103
- (void)alignLeftForWebView:(id)arg1;	// IMP=0x00000000008f80f1
- (void)_alignLeftForWebView:(id)arg1;	// IMP=0x00000000008f805e
- (void)outdentForWebView:(id)arg1;	// IMP=0x00000000008f804c
- (void)_outdentForWebView:(id)arg1;	// IMP=0x00000000008f7fb9
- (void)indentForWebView:(id)arg1;	// IMP=0x00000000008f7fa7
- (void)_indentForWebView:(id)arg1;	// IMP=0x00000000008f7f14
- (void)insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x00000000008f7f02
- (void)_insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x00000000008f7e6f
- (void)insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x00000000008f7e5d
- (void)_insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x00000000008f7dca
- (void)insertUnorderedListForWebView:(id)arg1;	// IMP=0x00000000008f7db8
- (void)_insertUnorderedListForWebView:(id)arg1;	// IMP=0x00000000008f7d25
- (void)insertOrderedListForWebView:(id)arg1;	// IMP=0x00000000008f7d13
- (void)_insertOrderedListForWebView:(id)arg1;	// IMP=0x00000000008f7c80
- (void)replaceForWebView:(id)arg1;	// IMP=0x00000000008f7c48
- (void)_transliterateChineseForWebView:(id)arg1;	// IMP=0x00000000008f7be9
- (void)_promptForReplaceForWebView:(id)arg1;	// IMP=0x00000000008f7b8a
- (void)selectWordBackward;	// IMP=0x00000000008f7b4d
- (void)replaceText:(id)arg1 withText:(id)arg2;	// IMP=0x00000000008f7a49
- (_Bool)isReplaceAllowed;	// IMP=0x00000000008f7a21
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1;	// IMP=0x00000000008f7a07
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1;	// IMP=0x00000000008f79ed
- (void)makeTextWritingDirectionNaturalForWebView:(id)arg1;	// IMP=0x00000000008f79d6
- (id)alternativesForSelectedText;	// IMP=0x00000000008f78da
- (id)selectedText;	// IMP=0x00000000008f78a3
- (void)_addShortcutForWebView:(id)arg1;	// IMP=0x00000000008f77ff
- (void)_translateForWebView:(id)arg1;	// IMP=0x00000000008f772b
- (void)_shareForWebView:(id)arg1;	// IMP=0x00000000008f7665
- (void)_lookupForWebView:(id)arg1;	// IMP=0x00000000008f75d1
- (void)_pasteAndMatchStyle:(id)arg1;	// IMP=0x00000000008f756a
- (void)_pasteAsQuotation:(id)arg1;	// IMP=0x00000000008f7503
- (void)_changeListType:(id)arg1;	// IMP=0x00000000008f749c
- (void)_decreaseListLevel:(id)arg1;	// IMP=0x00000000008f7435
- (void)_increaseListLevel:(id)arg1;	// IMP=0x00000000008f73ce
- (void)_insertNestedUnorderedList:(id)arg1;	// IMP=0x00000000008f7367
- (void)_insertNestedOrderedList:(id)arg1;	// IMP=0x00000000008f7300
- (void)_insertUnorderedList:(id)arg1;	// IMP=0x00000000008f7299
- (void)_insertOrderedList:(id)arg1;	// IMP=0x00000000008f7232
- (void)_toggleStrikeThrough:(id)arg1;	// IMP=0x00000000008f71cb
- (void)_outdent:(id)arg1;	// IMP=0x00000000008f7164
- (void)_indent:(id)arg1;	// IMP=0x00000000008f70fd
- (void)_alignRight:(id)arg1;	// IMP=0x00000000008f7096
- (void)_alignLeft:(id)arg1;	// IMP=0x00000000008f702f
- (void)_alignJustified:(id)arg1;	// IMP=0x00000000008f6fc8
- (void)_alignCenter:(id)arg1;	// IMP=0x00000000008f6f61
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x00000000008f6efa
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x00000000008f6e93
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x00000000008f6e2c
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x00000000008f6dc5
- (void)decreaseSize:(id)arg1;	// IMP=0x00000000008f6d5e
- (void)increaseSize:(id)arg1;	// IMP=0x00000000008f6cf7
- (void)toggleUnderline:(id)arg1;	// IMP=0x00000000008f6c90
- (void)toggleItalics:(id)arg1;	// IMP=0x00000000008f6c29
- (void)toggleBoldface:(id)arg1;	// IMP=0x00000000008f6bc2
- (void)selectAll:(id)arg1;	// IMP=0x00000000008f6b5b
- (void)select:(id)arg1;	// IMP=0x00000000008f6af4
- (void)replace:(id)arg1;	// IMP=0x00000000008f6a8d
- (void)paste:(id)arg1;	// IMP=0x00000000008f6a26
- (void)cut:(id)arg1;	// IMP=0x00000000008f69bf
- (void)copy:(id)arg1;	// IMP=0x00000000008f6958
- (void)_previousAccessoryTab:(id)arg1;	// IMP=0x00000000008f68f1
- (void)_nextAccessoryTab:(id)arg1;	// IMP=0x00000000008f688a
- (void)_transliterateChinese:(id)arg1;	// IMP=0x00000000008f6823
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x00000000008f67bc
- (void)_share:(id)arg1;	// IMP=0x00000000008f6755
- (void)_promptForReplace:(id)arg1;	// IMP=0x00000000008f66ee
- (void)_translate:(id)arg1;	// IMP=0x00000000008f6687
- (void)_lookup:(id)arg1;	// IMP=0x00000000008f6620
- (void)_define:(id)arg1;	// IMP=0x00000000008f65b9
- (void)_addShortcut:(id)arg1;	// IMP=0x00000000008f6552
- (void)_findSelected:(id)arg1;	// IMP=0x00000000008f64eb
- (void)useSelectionForFind:(id)arg1;	// IMP=0x00000000008f6484
- (void)captureTextFromCamera:(id)arg1;	// IMP=0x00000000008f641d
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x00000000008f623c
@property(readonly, nonatomic) UIView *inputAccessoryViewForWebView;
- (id)inputAccessoryView;	// IMP=0x00000000008f61c5
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
- (id)inputAssistantItem;	// IMP=0x00000000008f6175
- (_Bool)requiresAccessoryView;	// IMP=0x00000000008f6109
- (_Bool)_elementTypeRequiresAccessoryView:(int)arg1;	// IMP=0x00000000008f60c2
- (void)_didEndScrollingOrZooming;	// IMP=0x00000000008f605b
- (void)scrollViewWillStartPanOrPinchGesture;	// IMP=0x00000000008f6001
- (void)_willStartScrollingOrZooming;	// IMP=0x00000000008f5fc7
- (void)_positionInformationDidChange:(const void *)arg1;	// IMP=0x00000000008f5eb6
- (void)_invalidateCurrentPositionInformation;	// IMP=0x00000000008f5d14
- (void)clearSelection;	// IMP=0x00000000008f5ce8
- (void)pasteWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008f5b97
- (void)setUpTextSelectionAssistant;	// IMP=0x00000000008f5b32
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;	// IMP=0x00000000008f5a87
- (void)_twoFingerDoubleTapRecognized:(id)arg1;	// IMP=0x00000000008f5a09
- (void)_nonBlockingDoubleTapRecognized:(id)arg1;	// IMP=0x00000000008f59c9
- (void)_resetIsDoubleTapPending;	// IMP=0x00000000008f59b8
- (void)_doubleTapRecognized:(id)arg1;	// IMP=0x00000000008f588f
- (void)_singleTapRecognized:(id)arg1;	// IMP=0x00000000008f562f
- (void)_didCompleteSyntheticClick;	// IMP=0x00000000008f553b
- (void)_didNotHandleTapAsClick:(const struct IntPoint *)arg1;	// IMP=0x00000000008f54a5
- (void)_commitPotentialTapFailed;	// IMP=0x00000000008f541c
- (void)_doubleTapDidFail:(id)arg1;	// IMP=0x00000000008f5386
- (void)_singleTapDidReset:(id)arg1;	// IMP=0x00000000008f52d0
- (void)_singleTapIdentified:(id)arg1;	// IMP=0x00000000008f5105
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;	// IMP=0x00000000008f4fce
- (void)_longPressRecognized:(id)arg1;	// IMP=0x00000000008f4ee3
- (void)_twoFingerSingleTapGestureRecognized:(id)arg1;	// IMP=0x00000000008f4d8d
- (void)_doubleTapRecognizedForDoubleClick:(id)arg1;	// IMP=0x00000000008f4cc8
- (void)_highlightLongPressRecognized:(id)arg1;	// IMP=0x00000000008f4abe
- (ObjectIdentifier_e7ec9792)nextTapIdentifier;	// IMP=0x00000000008f4a9e
- (id)webSelectionRects;	// IMP=0x00000000008f4a5b
- (id)webSelectionRectsForSelectionGeometries:(const void *)arg1;	// IMP=0x00000000008f4866
- (_Bool)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(struct CGPoint)arg2;	// IMP=0x00000000008f455c
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;	// IMP=0x00000000008f43d1
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000008f4165
- (_Bool)canShowNonEmptySelectionView;	// IMP=0x00000000008f412d
- (void)_fadeTapHighlightViewIfNeeded;	// IMP=0x00000000008f3fe2
- (void)_finishInteraction;	// IMP=0x00000000008f3fc5
- (void)_cancelInteraction;	// IMP=0x00000000008f3f9d
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000008f3902
- (_Bool)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint)arg1;	// IMP=0x00000000008f3856
- (_Bool)_pointIsInsideSelectionRect:(struct CGPoint)arg1 outBoundingRect:(struct FloatRect *)arg2;	// IMP=0x00000000008f3710
- (id)_uiTextSelectionRects;	// IMP=0x00000000008f351c
- (id)_dataDetectionResults;	// IMP=0x00000000008f3504
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;	// IMP=0x00000000008f3281
- (_Bool)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest *)arg1 radiusForApproximation:(int)arg2;	// IMP=0x00000000008f325a
- (_Bool)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x00000000008f3236
- (_Bool)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x00000000008f320f
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest)arg1;	// IMP=0x00000000008f3187
- (_Bool)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest)arg1;	// IMP=0x00000000008f2ff6
- (void)doAfterPositionInformationUpdate:(CDUnknownBlockType)arg1 forRequest:(struct InteractionInformationRequest)arg2;	// IMP=0x00000000008f2dda
- (SEL)_actionForLongPress;	// IMP=0x00000000008f2dbe
- (SEL)_actionForLongPressFromPositionInformation:(const void *)arg1;	// IMP=0x00000000008f2d2d
- (void)_showDataDetectorsUIForPositionInformation:(const void *)arg1;	// IMP=0x00000000008f2d10
- (void)_showDataDetectorsUI;	// IMP=0x00000000008f2cf4
- (void)_showLinkSheet;	// IMP=0x00000000008f2cd7
- (void)_showAttachmentSheet;	// IMP=0x00000000008f2b3f
- (void)_showImageSheet;	// IMP=0x00000000008f2b22
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x00000000008f2a96
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x00000000008f29df
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000000008f24a3
- (_Bool)_shouldAdditionallyRecognizeGestureRecognizer:(id)arg1 simultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000000008f249b
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;	// IMP=0x00000000008f2419
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;	// IMP=0x00000000008f2398
- (struct CGRect)_selectionClipRect;	// IMP=0x00000000008f2327
@property(readonly, nonatomic) UIView *inputViewForWebView;
- (id)inputView;	// IMP=0x00000000008f2264
- (void)_zoomToRevealFocusedElement;	// IMP=0x00000000008f20f9
- (void)_keyboardDidShow;	// IMP=0x00000000008f2010
- (void)_keyboardWillShow;	// IMP=0x00000000008f1fe4
- (struct FloatRect)rectToRevealWhenZoomingToFocusedElement;	// IMP=0x00000000008f1f05
- (_Bool)_requiresKeyboardResetOnReload;	// IMP=0x00000000008f1efd
- (_Bool)_requiresKeyboardWhenFirstResponder;	// IMP=0x00000000008f1e8c
- (_Bool)_disableAutomaticKeyboardUI;	// IMP=0x00000000008f1e55
- (_Bool)_shouldShowAutomaticKeyboardUIIgnoringInputMode;	// IMP=0x00000000008f1df0
- (_Bool)shouldShowAutomaticKeyboardUI;	// IMP=0x00000000008f1d95
- (void)_scrollingNodeScrollingDidEnd:(unsigned long long)arg1;	// IMP=0x00000000008f1ce6
- (void)_scrollingNodeScrollingWillBegin:(unsigned long long)arg1;	// IMP=0x00000000008f1cc9
- (void)_didScroll;	// IMP=0x00000000008f1c8e
- (void)_cancelTouchEventGestureRecognizer;	// IMP=0x00000000008f1c71
- (void)_cancelLongPressGestureRecognizer;	// IMP=0x00000000008f1c54
- (void)_handleSmartMagnificationInformationForPotentialTap:(ObjectIdentifier_e7ec9792)arg1 renderRect:(const struct FloatRect *)arg2 fitEntireRect:(_Bool)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(_Bool)arg6;	// IMP=0x00000000008f187e
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(ObjectIdentifier_e7ec9792)arg1;	// IMP=0x00000000008f185b
- (_Bool)_mayDisableDoubleTapGesturesDuringSingleTap;	// IMP=0x00000000008f184b
- (void)_didGetTapHighlightForRequest:(ObjectIdentifier_e7ec9792)arg1 color:(const struct Color *)arg2 quads:(const void *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7 nodeHasBuiltInClickHandling:(_Bool)arg8;	// IMP=0x00000000008f1613
- (void)_showTapHighlight;	// IMP=0x00000000008f142b
@property(readonly, nonatomic) UIGestureRecognizer *imageAnalysisGestureRecognizer;
@property(readonly, nonatomic) struct CGRect tapHighlightViewRect;
- (void)_updateTapHighlight;	// IMP=0x00000000008f0cdd
- (_Bool)_isTouchEndDeferringGesture:(id)arg1;	// IMP=0x00000000008f0cad
- (_Bool)_isTouchStartDeferringGesture:(id)arg1;	// IMP=0x00000000008f0c7d
- (void)_doneDeferringTouchEnd:(_Bool)arg1;	// IMP=0x00000000008f0b54
- (void)_doneDeferringTouchMove:(_Bool)arg1;	// IMP=0x00000000008f0b37
- (void)_doneDeferringTouchStart:(_Bool)arg1;	// IMP=0x00000000008f0954
- (id)_touchEndDeferringGestures;	// IMP=0x00000000008f08be
- (id)_touchStartDeferringGestures;	// IMP=0x00000000008f0828
@property(readonly, nonatomic) NSArray *deferringGestures;
@property(readonly, nonatomic) void *gestureRecognizerConsistencyEnforcer;
@property(readonly, nonatomic) UIWebTouchEventsGestureRecognizer *touchEventGestureRecognizer;
- (void)_webTouchEvent:(const void *)arg1 preventsNativeGestures:(_Bool)arg2;	// IMP=0x00000000008f06a1
- (void)_inspectorNodeSearchRecognized:(id)arg1;	// IMP=0x00000000008f05d6
- (void)_resetPanningPreventionFlags;	// IMP=0x00000000008f05ba
- (id)touchActionActiveTouches;	// IMP=0x00000000008f059d
- (_Bool)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1;	// IMP=0x00000000008f0578
- (_Bool)gestureRecognizerMayPinchToZoomWebView:(id)arg1;	// IMP=0x00000000008f0493
- (_Bool)gestureRecognizerMayPanWebView:(id)arg1;	// IMP=0x00000000008f03fe
- (_Bool)gestureRecognizer:(id)arg1 shouldReceivePress:(id)arg2;	// IMP=0x00000000008f03f6
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000008f0255
- (void)_handleTouchActionsForTouchEvent:(const void *)arg1;	// IMP=0x00000000008f00e7
- (void)_webTouchEventsRecognized:(id)arg1;	// IMP=0x00000000008efa26
- (_Bool)_gestureRecognizerCanBePreventedByTouchEvents:(id)arg1;	// IMP=0x00000000008ef99a
- (_Bool)_touchEventsMustRequireGestureRecognizerToFail:(id)arg1;	// IMP=0x00000000008ef903
- (optional_53a37146)activeTouchIdentifierForGestureRecognizer:(id)arg1;	// IMP=0x00000000008ef749
- (void)cancelPointersForGestureRecognizer:(id)arg1;	// IMP=0x00000000008ef442
- (_Bool)resignFirstResponderForWebView;	// IMP=0x00000000008ef25a
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1;	// IMP=0x00000000008ef13c
- (_Bool)resignFirstResponder;	// IMP=0x00000000008ef11b
- (_Bool)becomeFirstResponderForWebView;	// IMP=0x00000000008eef2c
- (_Bool)becomeFirstResponder;	// IMP=0x00000000008eef0b
- (_Bool)canBecomeFirstResponderForWebView;	// IMP=0x00000000008eeef7
- (_Bool)canBecomeFirstResponder;	// IMP=0x00000000008eeee7
- (void)_resetInputViewDeferral;	// IMP=0x00000000008eeeba
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;	// IMP=0x00000000008eee7a
- (void)_cancelPreviousResetInputViewDeferralRequest;	// IMP=0x00000000008eee54
- (void)_endEditing;	// IMP=0x00000000008eedf6
- (_Bool)setIsEditable:(_Bool)arg1;	// IMP=0x00000000008eedda
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool shouldHideSelectionWhenScrolling;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const void *positionInformation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000008eeb40
- (void)_disableInspectorNodeSearch;	// IMP=0x00000000008eead8
- (void)_enableInspectorNodeSearch;	// IMP=0x00000000008eea4e
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000008ee917
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x00000000008ee911
- (void)cancelAutoscroll;	// IMP=0x00000000008ee8df
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x00000000008ee88e
- (struct CGRect)unobscuredContentRect;	// IMP=0x00000000008ee863
- (id)_scroller;	// IMP=0x00000000008ee842
- (double)inverseScale;	// IMP=0x00000000008ee7eb
- (id)unscaledView;	// IMP=0x00000000008ee7da
- (void)_updateLongPressAndHighlightLongPressGestures;	// IMP=0x00000000008ee716
- (void)_didChangeLinkPreviewAvailability;	// IMP=0x00000000008ee704
- (void)_addDefaultGestureRecognizers;	// IMP=0x00000000008ee498
- (void)_removeDefaultGestureRecognizers;	// IMP=0x00000000008ee22c
- (void)_cancelPendingKeyEventHandler;	// IMP=0x00000000008ee163
- (void)cleanUpInteractionPreviewContainers;	// IMP=0x00000000008ee151
- (void)cleanUpInteraction;	// IMP=0x00000000008ed686
- (void)setUpInteraction;	// IMP=0x00000000008ec85d
- (void)_createAndConfigureLongPressGestureRecognizer;	// IMP=0x00000000008ec7b0
- (void)_createAndConfigureHighlightLongPressGestureRecognizer;	// IMP=0x00000000008ec716
- (void)_createAndConfigureDoubleTapGestureRecognizer;	// IMP=0x00000000008ec60f
- (id)_formInputSession;	// IMP=0x00000000008ec5fe
@property(readonly, nonatomic) _Bool preventsPanningInYAxis;
@property(readonly, nonatomic) _Bool preventsPanningInXAxis;
@property(readonly, nonatomic) UIWKTextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) _Bool isShowingDataListSuggestions;
- (void)_setDataListSuggestionsControl:(id)arg1;	// IMP=0x00000000009159cb
- (void)_selectDataListOption:(long long)arg1;	// IMP=0x000000000091599d
- (void)_simulateSelectionStart;	// IMP=0x000000000091597e
- (void)_dismissContactPickerWithContacts:(id)arg1;	// IMP=0x0000000000915961
- (id)_contentsOfUserInterfaceItem:(id)arg1;	// IMP=0x000000000091529a
- (double)timePickerValueMinute;	// IMP=0x0000000000915239
- (double)timePickerValueHour;	// IMP=0x00000000009151d8
- (void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2;	// IMP=0x0000000000915167
@property(readonly, nonatomic) NSString *formInputLabel;
@property(readonly, nonatomic) NSString *selectFormPopoverTitle;
@property(readonly, nonatomic) NSString *textContentTypeForTesting;
- (void)setSelectedColorForColorPicker:(id)arg1;	// IMP=0x000000000091507d
- (_Bool)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1;	// IMP=0x000000000091501f
- (void)selectFormAccessoryPickerRow:(long long)arg1;	// IMP=0x0000000000914fbe
- (void)_simulateLongPressActionAtLocation:(struct CGPoint)arg1;	// IMP=0x0000000000914d9f
- (void)_simulateElementAction:(long long)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x0000000000914b81
- (void)_simulateTextEntered:(id)arg1;	// IMP=0x0000000000914b6f
@property(readonly, nonatomic, getter=isAnimatingDragCancel) _Bool animatingDragCancel;
@property(readonly, nonatomic) WKFormSelectControl *selectControl;
@property(readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(CDUnknownBlockType)arg1;	// IMP=0x0000000000914a66
- (void)_previewItemControllerDidCancelPreview:(id)arg1;	// IMP=0x000000000091b011
- (id)_presentationRectsForPreviewItemController:(id)arg1;	// IMP=0x000000000091adc9
- (id)_presentationSnapshotForPreviewItemController:(id)arg1;	// IMP=0x000000000091ad03
- (void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(_Bool)arg3;	// IMP=0x000000000091ac24
- (void)_interactionStoppedFromPreviewItemController:(id)arg1;	// IMP=0x000000000091abbf
- (void)_interactionStartedFromPreviewItemController:(id)arg1;	// IMP=0x000000000091ab91
- (void)_previewItemController:(id)arg1 commitPreview:(id)arg2;	// IMP=0x000000000091aa32
- (id)_presentedViewControllerForPreviewItemController:(id)arg1;	// IMP=0x0000000000919a18
- (struct CGRect)_presentationRectForPreviewItemController:(id)arg1;	// IMP=0x00000000009199ef
- (id)_dataForPreviewItemController:(id)arg1 atPosition:(struct CGPoint)arg2 type:(long long *)arg3;	// IMP=0x00000000009192b5
- (_Bool)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(struct CGPoint)arg2;	// IMP=0x00000000009190c1
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x0000000000918e31
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x00000000009188bb
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;	// IMP=0x000000000091884f
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 dismissalPreviewForItemWithIdentifier:(id)arg3;	// IMP=0x0000000000918827
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x000000000091861d
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 highlightPreviewForItemWithIdentifier:(id)arg3;	// IMP=0x00000000009185dd
- (id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2;	// IMP=0x0000000000918562
- (void)continueContextMenuInteractionWithDataDetectors:(CDUnknownBlockType)arg1;	// IMP=0x000000000091833f
- (void)continueContextMenuInteraction:(CDUnknownBlockType)arg1;	// IMP=0x00000000009174e0
- (id)placeholderForDynamicallyInsertedImageAnalysisActions;	// IMP=0x000000000091743a
- (void)_contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000009171c4
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2;	// IMP=0x00000000009171bc
- (void)assignLegacyDataForContextMenuInteraction;	// IMP=0x0000000000915dae
- (void)_unregisterPreview;	// IMP=0x0000000000915cfa
- (void)_registerPreview;	// IMP=0x0000000000915a84
@property(readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction;
- (id)textInteractionAssistantContextMenuInteraction;	// IMP=0x0000000000915a11

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, nonatomic) long long cursorBehavior;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool forceSpellingDictation;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(readonly) id <NSObject><NSCopying> selectedTextSearchDocument;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

