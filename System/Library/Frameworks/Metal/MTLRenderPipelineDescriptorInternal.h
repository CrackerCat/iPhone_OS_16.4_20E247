//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "MTLRenderPipelineDescriptor.h"

__attribute__((visibility("hidden")))
@interface MTLRenderPipelineDescriptorInternal : MTLRenderPipelineDescriptor
{
    struct MTLRenderPipelineDescriptorPrivate _private;	// 48 = 0x30
    struct FlatBufferBuilder _builder;	// 648 = 0x288
}

- (id).cxx_construct;	// IMP=0x00000000000f5dcd
- (void).cxx_destruct;	// IMP=0x00000000000f5dbc
- (const void *)getPipelineScript;	// IMP=0x00000000000f5d83
- (id)newSerializedMeshDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f5d4d
- (id)newSerializedObjectDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f5d17
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000f5642
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000f562b
- (id)serializeFragmentData;	// IMP=0x00000000000f5613
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000000f5178
- (void)validateWithDevice:(id)arg1;	// IMP=0x00000000000f4cc6
- (_Bool)validateWithDevice:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000f4919
- (void)setStencilAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000f3d67
- (unsigned long long)stencilAttachmentPixelFormat;	// IMP=0x00000000000f3d55
- (void)setDepthAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000f3d43
- (unsigned long long)depthAttachmentPixelFormat;	// IMP=0x00000000000f3d31
- (id)colorAttachments;	// IMP=0x00000000000f3d20
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000f352b
- (unsigned long long)hash;	// IMP=0x00000000000f2f40
- (const struct MTLRenderPipelineDescriptorPrivate *)_descriptorPrivate;	// IMP=0x00000000000f2f30
- (id)gpuCompilerSPIOptions;	// IMP=0x00000000000f2f1b
- (void)setGpuCompilerSPIOptions:(id)arg1;	// IMP=0x00000000000f2ece
- (id)driverCompilerOptions;	// IMP=0x00000000000f2eb9
- (void)setDriverCompilerOptions:(id)arg1;	// IMP=0x00000000000f2e6c
- (id)vertexDescriptor;	// IMP=0x00000000000f2e35
- (void)setVertexDescriptor:(id)arg1;	// IMP=0x00000000000f2da7
- (void)attachVertexDescriptor:(id)arg1;	// IMP=0x00000000000f2d20
- (id)pipelineLibrary;	// IMP=0x00000000000f2d0b
- (void)setPipelineLibrary:(id)arg1;	// IMP=0x00000000000f2cc5
- (void)setMaxPipelineChildren:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f2ca0
- (CDStruct_da2e99ad)maxPipelineChildren;	// IMP=0x00000000000f2c79
- (void)setPipelineMemoryLength:(unsigned long long)arg1;	// IMP=0x00000000000f2c64
- (unsigned long long)pipelineMemoryLength;	// IMP=0x00000000000f2c4f
- (void)setMeshThreadgroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg1;	// IMP=0x00000000000f2c21
- (_Bool)meshThreadgroupSizeIsMultipleOfThreadExecutionWidth;	// IMP=0x00000000000f2c08
- (void)setObjectThreadgroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg1;	// IMP=0x00000000000f2bda
- (_Bool)objectThreadgroupSizeIsMultipleOfThreadExecutionWidth;	// IMP=0x00000000000f2bc1
- (void)setMaxTotalThreadsPerMeshThreadgroup:(unsigned long long)arg1;	// IMP=0x00000000000f2bac
- (unsigned long long)maxTotalThreadsPerMeshThreadgroup;	// IMP=0x00000000000f2b97
- (void)setMaxTotalThreadsPerObjectThreadgroup:(unsigned long long)arg1;	// IMP=0x00000000000f2b82
- (unsigned long long)maxTotalThreadsPerObjectThreadgroup;	// IMP=0x00000000000f2b6d
- (void)setMeshThreadsPerThreadgroup:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f2b48
- (CDStruct_da2e99ad)meshThreadsPerThreadgroup;	// IMP=0x00000000000f2b21
- (void)setObjectThreadsPerThreadgroup:(CDStruct_da2e99ad)arg1;	// IMP=0x00000000000f2afc
- (CDStruct_da2e99ad)objectThreadsPerThreadgroup;	// IMP=0x00000000000f2ad5
- (id)meshBuffers;	// IMP=0x00000000000f2ac0
- (id)objectBuffers;	// IMP=0x00000000000f2aab
- (id)meshFunction;	// IMP=0x00000000000f2a96
- (void)setMeshFunction:(id)arg1;	// IMP=0x00000000000f29c9
- (id)objectFunction;	// IMP=0x00000000000f29b4
- (void)setObjectFunction:(id)arg1;	// IMP=0x00000000000f28e7
- (id)fragmentFunction;	// IMP=0x00000000000f28d2
- (void)setFragmentFunction:(id)arg1;	// IMP=0x00000000000f2805
- (id)vertexFunction;	// IMP=0x00000000000f27f0
- (void)setVertexFunction:(id)arg1;	// IMP=0x00000000000f2723
- (void)setLabel:(id)arg1;	// IMP=0x00000000000f267e
- (id)label;	// IMP=0x00000000000f2669
- (void)reset;	// IMP=0x00000000000f22b2
- (void)setProfileControl:(id)arg1;	// IMP=0x00000000000f2265
- (id)profileControl;	// IMP=0x00000000000f2250
- (void)setExplicitVisibilityGroupID:(unsigned int)arg1;	// IMP=0x00000000000f223c
- (unsigned int)explicitVisibilityGroupID;	// IMP=0x00000000000f2228
- (id)fragmentBuffers;	// IMP=0x00000000000f2213
- (id)vertexBuffers;	// IMP=0x00000000000f21fe
- (void)setMaxObjectCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f21e9
- (unsigned long long)maxObjectCallStackDepth;	// IMP=0x00000000000f21d4
- (void)setMaxMeshCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f21bf
- (unsigned long long)maxMeshCallStackDepth;	// IMP=0x00000000000f21aa
- (void)setSupportAddingObjectBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f2196
- (_Bool)supportAddingObjectBinaryFunctions;	// IMP=0x00000000000f2182
- (void)setSupportAddingMeshBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f216e
- (_Bool)supportAddingMeshBinaryFunctions;	// IMP=0x00000000000f215a
- (void)setMaxFragmentCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f2145
- (unsigned long long)maxFragmentCallStackDepth;	// IMP=0x00000000000f2130
- (void)setMaxVertexCallStackDepth:(unsigned long long)arg1;	// IMP=0x00000000000f211b
- (unsigned long long)maxVertexCallStackDepth;	// IMP=0x00000000000f2106
- (void)setSupportAddingFragmentBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f20f2
- (_Bool)supportAddingFragmentBinaryFunctions;	// IMP=0x00000000000f20de
- (void)setSupportAddingVertexBinaryFunctions:(_Bool)arg1;	// IMP=0x00000000000f20ca
- (_Bool)supportAddingVertexBinaryFunctions;	// IMP=0x00000000000f20b6
- (void)setInsertMeshLibraries:(id)arg1;	// IMP=0x00000000000f2098
- (id)insertMeshLibraries;	// IMP=0x00000000000f2083
- (void)setInsertObjectLibraries:(id)arg1;	// IMP=0x00000000000f2065
- (id)insertObjectLibraries;	// IMP=0x00000000000f2050
- (void)setInsertFragmentLibraries:(id)arg1;	// IMP=0x00000000000f2032
- (id)insertFragmentLibraries;	// IMP=0x00000000000f201d
- (void)setInsertVertexLibraries:(id)arg1;	// IMP=0x00000000000f1fff
- (id)insertVertexLibraries;	// IMP=0x00000000000f1fea
- (void)setMeshPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1f9d
- (id)meshPreloadedLibraries;	// IMP=0x00000000000f1f88
- (void)setObjectPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1f3b
- (id)objectPreloadedLibraries;	// IMP=0x00000000000f1f26
- (void)setFragmentPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1ed9
- (id)fragmentPreloadedLibraries;	// IMP=0x00000000000f1ec4
- (void)setVertexPreloadedLibraries:(id)arg1;	// IMP=0x00000000000f1e77
- (id)vertexPreloadedLibraries;	// IMP=0x00000000000f1e62
- (void)setMeshLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1dca
- (id)meshLinkedFunctions;	// IMP=0x00000000000f1d6f
- (void)setObjectLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1cd7
- (id)objectLinkedFunctions;	// IMP=0x00000000000f1c7c
- (void)setFragmentLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1be4
- (id)fragmentLinkedFunctions;	// IMP=0x00000000000f1b89
- (void)setVertexLinkedFunctions:(id)arg1;	// IMP=0x00000000000f1af1
- (id)vertexLinkedFunctions;	// IMP=0x00000000000f1a96
- (id)binaryArchives;	// IMP=0x00000000000f1a81
- (void)setBinaryArchives:(id)arg1;	// IMP=0x00000000000f1a34
- (void)setInputPrimitiveTopology:(unsigned long long)arg1;	// IMP=0x00000000000f19d9
- (unsigned long long)inputPrimitiveTopology;	// IMP=0x00000000000f19bf
- (void)setDepthStencilWriteDisabled:(_Bool)arg1;	// IMP=0x00000000000f1995
- (_Bool)isDepthStencilWriteDisabled;	// IMP=0x00000000000f197c
- (void)setSampleCoverageInvert:(_Bool)arg1;	// IMP=0x00000000000f194f
- (_Bool)sampleCoverageInvert;	// IMP=0x00000000000f1939
- (void)setNeedsCustomBorderColorSamplers:(_Bool)arg1;	// IMP=0x00000000000f1925
- (_Bool)needsCustomBorderColorSamplers;	// IMP=0x00000000000f1911
- (void)setOpenGLModeEnabled:(_Bool)arg1;	// IMP=0x00000000000f18e4
- (_Bool)openGLModeEnabled;	// IMP=0x00000000000f18cd
- (void)setPluginData:(id)arg1;	// IMP=0x00000000000f1887
- (id)pluginData;	// IMP=0x00000000000f1872
- (void)setFragmentDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x00000000000f185e
- (unsigned int)fragmentDepthCompareClampMask;	// IMP=0x00000000000f184a
- (void)setVertexDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x00000000000f1836
- (unsigned int)vertexDepthCompareClampMask;	// IMP=0x00000000000f1822
- (void)setTwoSideEnabled:(_Bool)arg1;	// IMP=0x00000000000f17f5
- (_Bool)isTwoSideEnabled;	// IMP=0x00000000000f17dc
- (void)setPointSizeOutputVS:(_Bool)arg1;	// IMP=0x00000000000f17af
- (_Bool)isPointSizeOutputVS;	// IMP=0x00000000000f1796
- (void)setPointCoordLowerLeft:(_Bool)arg1;	// IMP=0x00000000000f1769
- (_Bool)isPointCoordLowerLeft;	// IMP=0x00000000000f1750
- (void)setPointSmoothEnabled:(_Bool)arg1;	// IMP=0x00000000000f1723
- (_Bool)isPointSmoothEnabled;	// IMP=0x00000000000f170a
- (unsigned char)clipDistanceEnableMask;	// IMP=0x00000000000f16f0
- (void)setClipDistanceEnableMask:(unsigned char)arg1;	// IMP=0x00000000000f16c3
- (void)setAlphaTestFunction:(unsigned long long)arg1;	// IMP=0x00000000000f1695
- (unsigned long long)alphaTestFunction;	// IMP=0x00000000000f167b
- (void)setAlphaTestEnabled:(_Bool)arg1;	// IMP=0x00000000000f164e
- (_Bool)isAlphaTestEnabled;	// IMP=0x00000000000f1635
- (void)setLogicOperation:(unsigned long long)arg1;	// IMP=0x00000000000f1607
- (unsigned long long)logicOperation;	// IMP=0x00000000000f15ed
- (void)setLogicOperationEnabled:(_Bool)arg1;	// IMP=0x00000000000f15bd
- (_Bool)isLogicOperationEnabled;	// IMP=0x00000000000f15a6
- (void)setColorSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f1591
- (unsigned long long)colorSampleCount;	// IMP=0x00000000000f157c
- (void)setMaxVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x00000000000f1568
- (unsigned long long)maxVertexAmplificationCount;	// IMP=0x00000000000f1554
- (void)setVertexAmplificationMode:(unsigned long long)arg1;	// IMP=0x00000000000f14f3
- (unsigned long long)vertexAmplificationMode;	// IMP=0x00000000000f14d9
- (void)setRasterizationEnabled:(_Bool)arg1;	// IMP=0x00000000000f14b2
- (_Bool)isRasterizationEnabled;	// IMP=0x00000000000f1499
- (void)setAlphaToOneEnabled:(_Bool)arg1;	// IMP=0x00000000000f1472
- (_Bool)isAlphaToOneEnabled;	// IMP=0x00000000000f145a
- (void)setAlphaToCoverageEnabled:(_Bool)arg1;	// IMP=0x00000000000f1434
- (_Bool)isAlphaToCoverageEnabled;	// IMP=0x00000000000f141e
- (void)setSampleCoverage:(float)arg1;	// IMP=0x00000000000f1408
- (float)sampleCoverage;	// IMP=0x00000000000f13f2
- (void)setSampleMask:(unsigned long long)arg1;	// IMP=0x00000000000f13dd
- (unsigned long long)sampleMask;	// IMP=0x00000000000f13c8
- (void)setRasterSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f13b3
- (unsigned long long)rasterSampleCount;	// IMP=0x00000000000f139e
- (void)setSampleCount:(unsigned long long)arg1;	// IMP=0x00000000000f138c
- (unsigned long long)sampleCount;	// IMP=0x00000000000f137a
@property(nonatomic) unsigned long long postVertexDumpBufferIndex;
- (void)setResourceIndex:(unsigned long long)arg1;	// IMP=0x00000000000f133b
- (unsigned long long)resourceIndex;	// IMP=0x00000000000f1326
- (void)setForceResourceIndex:(_Bool)arg1;	// IMP=0x00000000000f12f8
- (_Bool)forceResourceIndex;	// IMP=0x00000000000f12e2
- (long long)textureWriteRoundingMode;	// IMP=0x00000000000f12c6
- (void)setTextureWriteRoundingMode:(long long)arg1;	// IMP=0x00000000000f12b1
- (void)setSupportIndirectCommandBuffers:(_Bool)arg1;	// IMP=0x00000000000f129d
- (_Bool)supportIndirectCommandBuffers;	// IMP=0x00000000000f1289
- (void)setTessellationOutputWindingOrder:(unsigned long long)arg1;	// IMP=0x00000000000f1246
- (unsigned long long)tessellationOutputWindingOrder;	// IMP=0x00000000000f1231
- (void)setTessellationFactorStepFunction:(unsigned long long)arg1;	// IMP=0x00000000000f11ee
- (unsigned long long)tessellationFactorStepFunction;	// IMP=0x00000000000f11d9
- (void)setTessellationControlPointIndexType:(unsigned long long)arg1;	// IMP=0x00000000000f1199
- (unsigned long long)tessellationControlPointIndexType;	// IMP=0x00000000000f1187
- (void)setTessellationFactorFormat:(unsigned long long)arg1;	// IMP=0x00000000000f1147
- (unsigned long long)tessellationFactorFormat;	// IMP=0x00000000000f1135
- (void)setTessellationFactorScaleEnabled:(_Bool)arg1;	// IMP=0x00000000000f1124
- (_Bool)isTessellationFactorScaleEnabled;	// IMP=0x00000000000f1113
- (void)setMaxTessellationFactor:(unsigned long long)arg1;	// IMP=0x00000000000f10cd
- (unsigned long long)maxTessellationFactor;	// IMP=0x00000000000f10bb
- (void)setTessellationPartitionMode:(unsigned long long)arg1;	// IMP=0x00000000000f107b
- (unsigned long long)tessellationPartitionMode;	// IMP=0x00000000000f1069
@property(nonatomic) _Bool forceSoftwareVertexFetch;
- (id)description;	// IMP=0x00000000000f100f
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x00000000000f0231
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000efc30
- (void)dealloc;	// IMP=0x00000000000efada
- (id)init;	// IMP=0x00000000000ef8ec

@end

