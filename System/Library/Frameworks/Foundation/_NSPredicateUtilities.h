//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface _NSPredicateUtilities : NSObject
{
}

+ (id)_constantValueClassesForSecureCoding;	// IMP=0x008000000053f25a
+ (id)_operatorClassesForSecureCoding;	// IMP=0x008000000053f114
+ (id)_extendedExpressionClassesForSecureCoding;	// IMP=0x008000000053ef82
+ (id)_expressionClassesForSecureCoding;	// IMP=0x008000000053edff
+ (id)_compoundPredicateClassesForSecureCoding;	// IMP=0x008000000053ed2e
+ (id)_predicateClassesForSecureCoding;	// IMP=0x008000000053ec71
+ (_Bool)_isReservedWordInParser:(id)arg1;	// IMP=0x008000000053e7d6
+ (id)inverseOrderKey:(id)arg1;	// IMP=0x008000000053e7a2
+ (id)distinct:(id)arg1;	// IMP=0x008000000053e76e
+ (id)indexed:(id)arg1 by:(id)arg2;	// IMP=0x008000000053e765
+ (id)noindex:(id)arg1;	// IMP=0x008000000053e75c
+ (id)onesComplement:(id)arg1;	// IMP=0x008000000053e6d9
+ (id)rightshift:(id)arg1 by:(id)arg2;	// IMP=0x008000000053e62e
+ (id)leftshift:(id)arg1 by:(id)arg2;	// IMP=0x008000000053e583
+ (id)bitwiseXor:(id)arg1 with:(id)arg2;	// IMP=0x008000000053e4da
+ (id)bitwiseOr:(id)arg1 with:(id)arg2;	// IMP=0x008000000053e431
+ (id)bitwiseAnd:(id)arg1 with:(id)arg2;	// IMP=0x008000000053e388
+ (id)canonical:(id)arg1;	// IMP=0x008000000053e319
+ (id)distanceToLocation:(id)arg1 fromLocation:(id)arg2;	// IMP=0x008000000053e253
+ (id)now;	// IMP=0x008000000053e23a
+ (id)objectFrom:(id)arg1 withIndex:(id)arg2;	// IMP=0x008000000053de19
+ (id)randomn:(id)arg1;	// IMP=0x008000000053ddb1
+ (id)random;	// IMP=0x008000000053dd67
+ (id)castObject:(id)arg1 toType:(id)arg2;	// IMP=0x008000000053d606
+ (id)length:(id)arg1;	// IMP=0x008000000053d45d
+ (id)lowercase:(id)arg1;	// IMP=0x008000000053d402
+ (id)uppercase:(id)arg1;	// IMP=0x008000000053d3a7
+ (id)tokenize:(id)arg1 using:(id)arg2;	// IMP=0x008000000053d133
+ (id)trunc:(id)arg1;	// IMP=0x008000000053cc7a
+ (id)abs:(id)arg1;	// IMP=0x008000000053cac5
+ (id)ceiling:(id)arg1;	// IMP=0x008000000053c9bf
+ (id)floor:(id)arg1;	// IMP=0x008000000053c8b9
+ (id)exp:(id)arg1;	// IMP=0x008000000053c7b3
+ (id)raise:(id)arg1 toPower:(id)arg2;	// IMP=0x008000000053c68c
+ (id)ln:(id)arg1;	// IMP=0x008000000053c586
+ (id)log:(id)arg1;	// IMP=0x008000000053c480
+ (id)sqrt:(id)arg1;	// IMP=0x008000000053c37b
+ (id)modulus:(id)arg1 by:(id)arg2;	// IMP=0x008000000053c0d8
+ (id)divide:(id)arg1 by:(id)arg2;	// IMP=0x008000000053be35
+ (id)multiply:(id)arg1 by:(id)arg2;	// IMP=0x008000000053bbe2
+ (id)from:(id)arg1 subtract:(id)arg2;	// IMP=0x008000000053b8c1
+ (id)add:(id)arg1 to:(id)arg2;	// IMP=0x008000000053b5d0
+ (id)stddev:(id)arg1;	// IMP=0x008000000053b430
+ (id)mode:(id)arg1;	// IMP=0x008000000053b10d
+ (id)median:(id)arg1;	// IMP=0x008000000053af2b
+ (id)average:(id)arg1;	// IMP=0x008000000053ae36
+ (id)max:(id)arg1;	// IMP=0x008000000053aa45
+ (id)min:(id)arg1;	// IMP=0x008000000053a650
+ (id)count:(id)arg1;	// IMP=0x008000000053a5b8
+ (id)sum:(id)arg1;	// IMP=0x008000000053a20d
+ (void)initialize;	// IMP=0x0080000000539e8c
+ (void)_setDebugPredicateTestAction:(_Bool)arg1;	// IMP=0x00800000005396ef
+ (void)_setDebugPredicateSecurityScoping:(_Bool)arg1;	// IMP=0x00800000005396e9
- (double)distanceFromLocation:(id)arg1;	// IMP=0x00000000005396e0

@end

