//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface NSObject (Foundation)
+ (id)__old_unswizzled_keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x0020000000048270
+ (_Bool)__old_unswizzled_automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x0020000000048220
+ (const char *)_localClassNameForClass;	// IMP=0x002000000040b0aa
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x002000000040e936
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;	// IMP=0x002000000040e730
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x0020000000456706
+ (_Bool)accessInstanceVariablesDirectly;	// IMP=0x00200000004566fe
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045ca54
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045c764
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045c722
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045c6e0
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045c079
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045ba08
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045b6f1
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x002000000045affe
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x002000000046d5be
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x002000000046d36a
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;	// IMP=0x002000000046d1b8
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;	// IMP=0x002000000046d8bb
+ (_Bool)_shouldAddObservationForwardersForKey:(id)arg1;	// IMP=0x002000000046d9a6
+ (id)classFallbacksForKeyedArchiver;	// IMP=0x00200000004826ec
+ (Class)classForKeyedUnarchiver;	// IMP=0x00200000004826f9
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;	// IMP=0x00200000004e1773
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;	// IMP=0x00200000004e1380
+ (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00200000005856c3
- (id)__NS_swiftOverlay_keyPathsForValuesAffectingValueForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000048440
- (_Bool)__NS_swiftOverlay_automaticallyNotifiesObserversForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x00100000000482c0
- (id)newTaggedNSStringWithASCIIBytes_:(const char *)arg1 length_:(long long)arg2;	// IMP=0x00100000001788d0
- (id)replacementObjectForArchiver:(id)arg1;	// IMP=0x00100000003c52a9
- (Class)classForArchiver;	// IMP=0x00100000003c5297
- (const char *)_localClassNameForClass;	// IMP=0x001000000040b098
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;	// IMP=0x001000000040ea7a
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x001000000040e9fa
- (void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2;	// IMP=0x001000000041045b
- (void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x001000000041043e
- (id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x00100000004103cd
- (void)_receiveBox:(id)arg1;	// IMP=0x00100000004341a8
- (void)removeObservation:(id)arg1;	// IMP=0x001000000043416a
- (id)addObserver:(id)arg1;	// IMP=0x00100000004340e4
- (void)receiveObservedValue:(id)arg1;	// IMP=0x0010000000433fd9
- (void)receiveObservedError:(id)arg1;	// IMP=0x0010000000433ece
- (_Bool)_isToManyChangeInformation;	// IMP=0x0010000000433ec6
- (void)_destroyObserverList;	// IMP=0x0010000000433eb2
- (void *)_observerStorageOfSize:(unsigned long long)arg1;	// IMP=0x0010000000433eaa
- (id *)_observerStorage;	// IMP=0x0010000000433ea2
- (id)addObservationTransformer:(CDUnknownBlockType)arg1;	// IMP=0x0010000000433dff
- (id)addObserverBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000433cbb
- (id)addChainedObservers:(id)arg1;	// IMP=0x0010000000433b71
- (void)finishObserving;	// IMP=0x0010000000433b38
- (_Bool)_overrideUseFastBlockObservers;	// IMP=0x0010000000433b30
- (void)setValuesForKeysWithDictionary:(id)arg1;	// IMP=0x00100000004584a8
- (id)dictionaryWithValuesForKeys:(id)arg1;	// IMP=0x00100000004583b2
- (void)setNilValueForKey:(id)arg1;	// IMP=0x0010000000458346
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x0010000000458255
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x0010000000458163
- (id)mutableSetValueForKeyPath:(id)arg1;	// IMP=0x0010000000458016
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;	// IMP=0x0010000000457ec9
- (id)mutableArrayValueForKeyPath:(id)arg1;	// IMP=0x0010000000457d7c
- (_Bool)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;	// IMP=0x0010000000457c0e
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x0010000000457ab7
- (id)valueForKeyPath:(id)arg1;	// IMP=0x001000000045796a
- (id)mutableSetValueForKey:(id)arg1;	// IMP=0x001000000045780b
- (id)mutableOrderedSetValueForKey:(id)arg1;	// IMP=0x00100000004576ac
- (id)mutableArrayValueForKey:(id)arg1;	// IMP=0x001000000045754d
- (_Bool)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;	// IMP=0x00100000004573e0
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000457177
- (id)valueForKey:(id)arg1;	// IMP=0x0010000000456eeb
- (_Bool)_isKVOA;	// IMP=0x0010000000467995
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x001000000046b02c
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x001000000046bce2
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;	// IMP=0x001000000046bb81
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x001000000046b988
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;	// IMP=0x001000000046b648
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x001000000046b11f
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x001000000046d144
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x001000000046cd84
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x001000000046c900
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x001000000046c652
- (void)didChangeValueForKey:(id)arg1;	// IMP=0x001000000046c639
- (void)willChangeValueForKey:(id)arg1;	// IMP=0x001000000046c61d
@property void *observationInfo;
- (id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(_Bool)arg2;	// IMP=0x001000000046f04b
- (id)_implicitObservationInfo;	// IMP=0x001000000046f043
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000046efec
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000046ef8d
- (void)_changeValueForKeys:(id *)arg1 count:(unsigned long long)arg2 maybeOldValuesDict:(id)arg3 maybeNewValuesDict:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x001000000046e373
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)arg1 toValuesForKeys:(id)arg2;	// IMP=0x001000000046ddea
- (void)_didChangeValuesForKeys:(id)arg1;	// IMP=0x001000000046ddce
- (void)_willChangeValuesForKeys:(id)arg1;	// IMP=0x001000000046ddaf
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;	// IMP=0x001000000046d9ae
- (void)_didEndKeyValueObserving;	// IMP=0x001000000046d9a0
- (void)_willBeginKeyValueObserving;	// IMP=0x001000000046d99a
- (id)replacementObjectForKeyedArchiver:(id)arg1;	// IMP=0x0010000000482694
@property(readonly) Class classForKeyedArchiver;
@property(readonly, retain) id autoContentAccessingProxy;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;	// IMP=0x00100000004e0f92
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;	// IMP=0x00100000004e0f80
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;	// IMP=0x00100000004e0f18
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;	// IMP=0x0010000000509f43
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4;	// IMP=0x0010000000509ebe
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;	// IMP=0x0010000000509e2b
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3 modes:(id)arg4;	// IMP=0x0010000000509dc5
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4 modes:(id)arg5;	// IMP=0x001000000050992c
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x0010000000585686
- (Class)classForPortCoder;	// IMP=0x0010000000585674
@end

