//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface AVHapticClient : NSObject
{
    NSXPCConnection *_connection;	// 8 = 0x8
    void *_commandWriter;	// 16 = 0x10
    unsigned long long _uniqueID;	// 24 = 0x18
    int _serverTimeout;	// 32 = 0x20
    CDUnknownBlockType _completionCallback;	// 40 = 0x28
    CDUnknownBlockType _connectionCallback;	// 48 = 0x30
    struct mutex _mapMutex;	// 56 = 0x38
    struct map<unsigned long, AVHapticSequenceEntry *, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, AVHapticSequenceEntry *>>> _sequenceEntryMap;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *_completionQueue;	// 144 = 0x90
    int _state;	// 152 = 0x98
    _Bool _disconnecting;	// 156 = 0x9c
    _Bool _prewarmed;	// 157 = 0x9d
    _Bool _connected;	// 158 = 0x9e
    int _serverProcessID;	// 160 = 0xa0
    unsigned long long _clientID;	// 168 = 0xa8
    NSArray *_channelKeys;	// 176 = 0xb0
    CDUnknownBlockType _asyncStopCallback;	// 184 = 0xb8
}

- (id).cxx_construct;	// IMP=0x000000000002f4d2
- (void).cxx_destruct;	// IMP=0x000000000002f45c
@property(copy) CDUnknownBlockType asyncStopCallback; // @synthesize asyncStopCallback=_asyncStopCallback;
@property int serverProcessID; // @synthesize serverProcessID=_serverProcessID;
@property(readonly) _Bool disconnecting; // @synthesize disconnecting=_disconnecting;
@property(copy) CDUnknownBlockType connectionCallback; // @synthesize connectionCallback=_connectionCallback;
@property(copy) CDUnknownBlockType completionCallback; // @synthesize completionCallback=_completionCallback;
@property _Bool connected; // @synthesize connected=_connected;
@property(readonly) _Bool prewarmed; // @synthesize prewarmed=_prewarmed;
@property(readonly) NSArray *channelKeys; // @synthesize channelKeys=_channelKeys;
@property(readonly) unsigned long long clientID; // @synthesize clientID=_clientID;
- (void)clientDisconnectingForReason:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x000000000002f223
- (void)clientStoppedForReason:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x000000000002ee62
- (void)clientCompletedWithError:(id)arg1;	// IMP=0x000000000002e78a
- (void)sequenceFinished:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x000000000002e22c
- (void)destroySharedMemory;	// IMP=0x000000000002e1d2
- (unsigned int)calculateHapticCommandParamCurveMemorySize:(unsigned int)arg1;	// IMP=0x000000000002e1b3
- (void)handleServerConnectionInvalidation;	// IMP=0x000000000002dec5
- (void)handleServerConnectionInterruption;	// IMP=0x000000000002d858
- (_Bool)removeAssignedChannelID:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000002d532
- (_Bool)requestAssignedChannels:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000002cfc1
- (void)clearAssignedChannels;	// IMP=0x000000000002cead
- (_Bool)setPlayerBehavior:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000002ca84
- (void)setChannelKeys:(id)arg1;	// IMP=0x000000000002ca13
- (void)disconnect;	// IMP=0x000000000002c859
- (id)getSyncDelegateForMethod:(SEL)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c530
- (id)getAsyncDelegateForMethod:(SEL)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c207
- (_Bool)setupConnectionWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002b32b
- (void)doInit;	// IMP=0x000000000002b27d
- (void)releaseResources;	// IMP=0x000000000002b091
- (void)detachHapticSequence:(unsigned long long)arg1;	// IMP=0x000000000002aead
- (_Bool)clearSequenceEvents:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002ad05
- (_Bool)setSequenceChannelParameter:(unsigned long long)arg1 atTime:(double)arg2 value:(float)arg3 sequenceID:(unsigned long long)arg4 channel:(unsigned long long)arg5;	// IMP=0x000000000002aafe
- (_Bool)sendUnduckAudioCommand:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002a935
- (_Bool)resetHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002a76c
- (_Bool)seekHapticSequence:(unsigned long long)arg1 toTime:(double)arg2;	// IMP=0x000000000002a5b3
- (_Bool)resumeHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002a3ea
- (_Bool)pauseHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002a221
- (_Bool)stopHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x000000000002a058
- (_Bool)startHapticSequence:(unsigned long long)arg1 atTime:(double)arg2 withOffset:(double)arg3;	// IMP=0x0000000000029e55
- (_Bool)setSequencePlaybackRate:(unsigned long long)arg1 rate:(float)arg2 error:(id *)arg3;	// IMP=0x0000000000029c41
- (_Bool)setSequenceLoopLength:(unsigned long long)arg1 length:(float)arg2 error:(id *)arg3;	// IMP=0x0000000000029a2d
- (_Bool)enableSequenceLooping:(unsigned long long)arg1 enable:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000029832
- (_Bool)prepareHapticSequence:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000002925d
- (void)detachSequenceEntryforID:(unsigned long long)arg1;	// IMP=0x0000000000029019
- (void)setRunStateForSequenceEntryWithID:(unsigned long long)arg1 running:(_Bool)arg2;	// IMP=0x0000000000028f8c
- (void)callSequenceFinishedHandlersWithError:(id)arg1;	// IMP=0x0000000000028d72
- (CDUnknownBlockType)getSequenceFinishedHandlerForID:(unsigned long long)arg1;	// IMP=0x0000000000028cc1
- (void)setSequenceFinishedHandlerForID:(unsigned long long)arg1 finishedHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028acc
- (_Bool)setSequenceEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 channel:(unsigned long long)arg3;	// IMP=0x0000000000028588
- (_Bool)loadAndPrepareHapticSequenceFromVibePattern:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000027ea4
- (_Bool)loadAndPrepareHapticSequenceFromEvents:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000027719
- (_Bool)loadAndPrepareHapticSequenceFromData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000026f64
- (_Bool)scheduleParameterCurve:(unsigned long long)arg1 curve:(id)arg2 atTime:(double)arg3 channel:(unsigned long long)arg4 error:(id *)arg5;	// IMP=0x0000000000026dd4
- (_Bool)setParameter:(unsigned long long)arg1 atTime:(double)arg2 value:(float)arg3 channel:(unsigned long long)arg4;	// IMP=0x0000000000026baa
- (_Bool)clearEventsFromTime:(double)arg1 channel:(unsigned long long)arg2;	// IMP=0x00000000000269cb
- (_Bool)sendEvents:(id)arg1 withImmediateParameters:(id)arg2 atTime:(double)arg3 channel:(unsigned long long)arg4 outToken:(unsigned long long *)arg5 error:(id *)arg6;	// IMP=0x00000000000268f1
- (_Bool)doScheduleParamCurveWithMemoryReserve:(unsigned long long)arg1 atTime:(double)arg2 channel:(unsigned long long)arg3 memoryReserve:(struct HapticSharedMemoryAddressReserve *)arg4 paramCurve:(id)arg5 error:(id *)arg6;	// IMP=0x0000000000025be7
- (_Bool)doScheduleParamCurve:(unsigned long long)arg1 atTime:(double)arg2 channel:(unsigned long long)arg3 paramCurve:(id)arg4 error:(id *)arg5;	// IMP=0x0000000000025489
- (_Bool)doSendEvents:(id)arg1 withImmediateParameters:(id)arg2 atTime:(double)arg3 channel:(unsigned long long)arg4 sorted:(_Bool)arg5 outToken:(unsigned long long *)arg6 error:(id *)arg7;	// IMP=0x00000000000238af
- (_Bool)resetChannel:(unsigned long long)arg1 atTime:(double)arg2;	// IMP=0x0000000000022f5c
- (_Bool)setChannelEventBehavior:(unsigned long long)arg1 channel:(unsigned long long)arg2;	// IMP=0x0000000000022a3d
- (void)expectNotifyAfter:(double)arg1;	// IMP=0x0000000000022a37
- (_Bool)finish:(CDUnknownBlockType)arg1;	// IMP=0x0000000000022116
- (void)stopRunning:(CDUnknownBlockType)arg1;	// IMP=0x0000000000021c41
- (void)stopRunning;	// IMP=0x0000000000021936
- (void)startRunning:(CDUnknownBlockType)arg1;	// IMP=0x000000000002146f
- (void)stopPrewarm;	// IMP=0x0000000000021183
- (void)prewarm:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020d9f
- (_Bool)releaseCustomAudioEvent:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000020947
- (_Bool)referenceCustomAudioEvent:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000000204d5
- (_Bool)copyCustomAudioEvent:(unsigned long long)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000000020030
- (_Bool)createCustomAudioEvent:(id)arg1 format:(id)arg2 frames:(unsigned long long)arg3 options:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000000001fb42
- (_Bool)loadHapticEvent:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001f5a1
- (void)allocateResources:(CDUnknownBlockType)arg1;	// IMP=0x000000000001ed29
@property(readonly) double hapticLatency;
- (void)queryServerCapabilities:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001e6bb
- (void)dealloc;	// IMP=0x000000000001e45d
- (id)initWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001e149
@property(readonly) int state;
- (void)setState:(int)arg1;	// IMP=0x000000000001dd9e
@property(readonly) _Bool running;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

